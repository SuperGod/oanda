{
  "swagger": "2.0",
  "info": {
    "title": "OANDA v20 Transaction API",
    "description": "Definitions and endpoints related to OANDA v20 Account Transactions",
    "contact": {
      "name": "OANDA API Support",
      "url": "http://developer.oanda.com/rest-live-v20/introduction/",
      "email": "api@oanda.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://github.com/oanda/v20-openapi/blob/master/LICENSE.txt"
    },
    "version": "3.0.25"
  },
  "basePath": "/v3",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "paths": {
    "/accounts/{accountID}/transactions": {
      "get": {
        "summary": "List Transactions",
        "description": "Get a list of Transactions pages that satisfy a time-based Transaction query.",
        "operationId": "list",
        "parameters": [
          {
            "$ref": "v20_primitives.json#/parameters/authorizationHeaderParam"
          },
          {
            "$ref": "v20_primitives.json#/parameters/acceptDatetimeFormatHeaderParam"
          },
          {
            "$ref": "v20_account.json#/parameters/accountIDPathParam"
          },
          {
            "name": "from",
            "description": "The starting time (inclusive) of the time range for the Transactions being queried.",
            "in": "query",
            "type": "string",
            "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
          },
          {
            "name": "to",
            "description": "The ending time (inclusive) of the time range for the Transactions being queried.",
            "in": "query",
            "type": "string",
            "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
          },
          {
            "name": "pageSize",
            "description": "The number of Transactions to include in each page of the results.",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "type",
            "description": "A filter for restricting the types of Transactions to retreive.",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested time range of Transaction pages are provided.",
            "headers": {
              "RequestID": {
                "description": "The unique identifier generated for the request",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string",
                  "description": "The starting time provided in the request.",
                  "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
                },
                "to": {
                  "type": "string",
                  "description": "The ending time provided in the request.",
                  "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
                },
                "pageSize": {
                  "type": "integer",
                  "description": "The pageSize provided in the request"
                },
                "type": {
                  "type": "array",
                  "description": "The Transaction-type filter provided in the request",
                  "items": {
                    "type": "string",
                    "description": "A filter that can be used when fetching Transactions",
                    "enum": [
                      "ORDER",
                      "FUNDING",
                      "ADMIN",
                      "CREATE",
                      "CLOSE",
                      "REOPEN",
                      "CLIENT_CONFIGURE",
                      "CLIENT_CONFIGURE_REJECT",
                      "TRANSFER_FUNDS",
                      "TRANSFER_FUNDS_REJECT",
                      "MARKET_ORDER",
                      "MARKET_ORDER_REJECT",
                      "LIMIT_ORDER",
                      "LIMIT_ORDER_REJECT",
                      "STOP_ORDER",
                      "STOP_ORDER_REJECT",
                      "MARKET_IF_TOUCHED_ORDER",
                      "MARKET_IF_TOUCHED_ORDER_REJECT",
                      "TAKE_PROFIT_ORDER",
                      "TAKE_PROFIT_ORDER_REJECT",
                      "STOP_LOSS_ORDER",
                      "STOP_LOSS_ORDER_REJECT",
                      "TRAILING_STOP_LOSS_ORDER",
                      "TRAILING_STOP_LOSS_ORDER_REJECT",
                      "ONE_CANCELS_ALL_ORDER",
                      "ONE_CANCELS_ALL_ORDER_REJECT",
                      "ONE_CANCELS_ALL_ORDER_TRIGGERED",
                      "ORDER_FILL",
                      "ORDER_CANCEL",
                      "ORDER_CANCEL_REJECT",
                      "ORDER_CLIENT_EXTENSIONS_MODIFY",
                      "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT",
                      "TRADE_CLIENT_EXTENSIONS_MODIFY",
                      "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT",
                      "MARGIN_CALL_ENTER",
                      "MARGIN_CALL_EXTEND",
                      "MARGIN_CALL_EXIT",
                      "DELAYED_TRADE_CLOSURE",
                      "DAILY_FINANCING",
                      "RESET_RESETTABLE_PL"
                    ]
                  }
                },
                "count": {
                  "type": "integer",
                  "description": "The number of Transactions that are contained in the pages returned"
                },
                "pages": {
                  "type": "array",
                  "description": "The list of URLs that represent idrange queries providing the data for each page in the query results",
                  "items": {
                    "type": "string"
                  }
                },
                "lastTransactionID": {
                  "type": "string",
                  "description": "The ID of the most recent Transaction created for the Account",
                  "format": "String representation of the numerical OANDA-assigned TransactionID"
                }
              }
            }
          },
          "400": {
            "$ref": "v20_primitives.json#/responses/400"
          },
          "401": {
            "$ref": "v20_primitives.json#/responses/401"
          },
          "403": {
            "$ref": "v20_primitives.json#/responses/403"
          },
          "404": {
            "$ref": "v20_primitives.json#/responses/404"
          },
          "405": {
            "$ref": "v20_primitives.json#/responses/405"
          },
          "416": {
            "$ref": "v20_primitives.json#/responses/416"
          }
        }
      }
    },
    "/accounts/{accountID}/transactions/{transactionID}": {
      "get": {
        "summary": "Transaction Details",
        "description": "Get the details of a single Account Transaction.",
        "operationId": "get",
        "parameters": [
          {
            "$ref": "v20_primitives.json#/parameters/authorizationHeaderParam"
          },
          {
            "$ref": "v20_primitives.json#/parameters/acceptDatetimeFormatHeaderParam"
          },
          {
            "$ref": "v20_account.json#/parameters/accountIDPathParam"
          },
          {
            "$ref": "#/parameters/transactionIDPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "The details of the requested Transaction are provided.",
            "headers": {
              "RequestID": {
                "description": "The unique identifier generated for the request",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "transaction": {
                  "$ref": "#/definitions/Transaction"
                },
                "lastTransactionID": {
                  "type": "string",
                  "description": "The ID of the most recent Transaction created for the Account",
                  "format": "String representation of the numerical OANDA-assigned TransactionID"
                }
              }
            }
          },
          "401": {
            "$ref": "v20_primitives.json#/responses/401"
          },
          "404": {
            "$ref": "v20_primitives.json#/responses/404"
          },
          "405": {
            "$ref": "v20_primitives.json#/responses/405"
          }
        }
      }
    },
    "/accounts/{accountID}/transactions/idrange": {
      "get": {
        "summary": "Transaction ID Range",
        "description": "Get a range of Transactions for an Account based on the Transaction IDs.",
        "operationId": "range",
        "parameters": [
          {
            "$ref": "v20_primitives.json#/parameters/authorizationHeaderParam"
          },
          {
            "$ref": "v20_primitives.json#/parameters/acceptDatetimeFormatHeaderParam"
          },
          {
            "$ref": "v20_account.json#/parameters/accountIDPathParam"
          },
          {
            "name": "from",
            "description": "The starting Transacion ID (inclusive) to fetch.",
            "in": "query",
            "type": "string",
            "format": "String representation of the numerical OANDA-assigned TransactionID",
            "required": true
          },
          {
            "name": "to",
            "description": "The ending Transaction ID (inclusive) to fetch.",
            "in": "query",
            "type": "string",
            "format": "String representation of the numerical OANDA-assigned TransactionID",
            "required": true
          },
          {
            "name": "type",
            "description": "The filter that restricts the types of Transactions to retreive.",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested time range of Transactions are provided.",
            "headers": {
              "RequestID": {
                "description": "The unique identifier generated for the request",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "transactions": {
                  "type": "array",
                  "description": "The list of Transactions that satisfy the request.",
                  "items": {
                    "$ref": "#/definitions/Transaction"
                  }
                },
                "lastTransactionID": {
                  "type": "string",
                  "description": "The ID of the most recent Transaction created for the Account",
                  "format": "String representation of the numerical OANDA-assigned TransactionID"
                }
              }
            }
          },
          "400": {
            "$ref": "v20_primitives.json#/responses/400"
          },
          "401": {
            "$ref": "v20_primitives.json#/responses/401"
          },
          "404": {
            "$ref": "v20_primitives.json#/responses/404"
          },
          "405": {
            "$ref": "v20_primitives.json#/responses/405"
          },
          "416": {
            "$ref": "v20_primitives.json#/responses/416"
          }
        }
      }
    },
    "/accounts/{accountID}/transactions/sinceid": {
      "get": {
        "summary": "Transactions Since ID",
        "description": "Get a range of Transactions for an Account starting at (but not including) a provided Transaction ID.",
        "operationId": "since",
        "parameters": [
          {
            "$ref": "v20_primitives.json#/parameters/authorizationHeaderParam"
          },
          {
            "$ref": "v20_primitives.json#/parameters/acceptDatetimeFormatHeaderParam"
          },
          {
            "$ref": "v20_account.json#/parameters/accountIDPathParam"
          },
          {
            "name": "id",
            "description": "The ID of the last Transacion fetched. This query will return all Transactions newer than the TransactionID.",
            "in": "query",
            "type": "string",
            "format": "String representation of the numerical OANDA-assigned TransactionID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested time range of Transactions are provided.",
            "headers": {
              "RequestID": {
                "description": "The unique identifier generated for the request",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "transactions": {
                  "type": "array",
                  "description": "The list of Transactions that satisfy the request.",
                  "items": {
                    "$ref": "#/definitions/Transaction"
                  }
                },
                "lastTransactionID": {
                  "type": "string",
                  "description": "The ID of the most recent Transaction created for the Account",
                  "format": "String representation of the numerical OANDA-assigned TransactionID"
                }
              }
            }
          },
          "400": {
            "$ref": "v20_primitives.json#/responses/400"
          },
          "401": {
            "$ref": "v20_primitives.json#/responses/401"
          },
          "404": {
            "$ref": "v20_primitives.json#/responses/404"
          },
          "405": {
            "$ref": "v20_primitives.json#/responses/405"
          },
          "416": {
            "$ref": "v20_primitives.json#/responses/416"
          }
        }
      }
    },
    "/accounts/{accountID}/transactions/stream": {
      "get": {
        "summary": "Transaction Stream",
        "description": "Get a stream of Transactions for an Account starting from when the request is made.",
        "operationId": "stream",
        "parameters": [
          {
            "$ref": "v20_primitives.json#/parameters/authorizationHeaderParam"
          },
          {
            "$ref": "v20_account.json#/parameters/accountIDPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Connecting to the Transaction Stream was successful.",
            "headers": {
              "RequestID": {
                "description": "The unique identifier generated for the request",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "description": "The response body for the Transaction Stream uses chunked transfer encoding.  Each chunk contains Transaction and/or TransactionHeartbeat objects encoded as JSON.  Each JSON object is serialized into a single line of text, and multiple objects found in the same chunk are separated by newlines.\nTransactionHeartbeats are sent every 5 seconds.",
              "properties": {
                "transaction": {
                  "$ref": "#/definitions/Transaction"
                },
                "heartbeat": {
                  "$ref": "#/definitions/TransactionHeartbeat"
                }
              }
            }
          },
          "400": {
            "$ref": "v20_primitives.json#/responses/400"
          },
          "401": {
            "$ref": "v20_primitives.json#/responses/401"
          },
          "404": {
            "$ref": "v20_primitives.json#/responses/404"
          },
          "405": {
            "$ref": "v20_primitives.json#/responses/405"
          }
        }
      }
    }
  },
  "definitions": {
    "TransactionID": {
      "type": "string",
      "description": "The unique Transaction identifier within each Account.",
      "format": "String representation of the numerical OANDA-assigned TransactionID"
    },
    "TransactionType": {
      "type": "string",
      "description": "The possible types of a Transaction",
      "enum": [
        "CREATE",
        "CLOSE",
        "REOPEN",
        "CLIENT_CONFIGURE",
        "CLIENT_CONFIGURE_REJECT",
        "TRANSFER_FUNDS",
        "TRANSFER_FUNDS_REJECT",
        "MARKET_ORDER",
        "MARKET_ORDER_REJECT",
        "FIXED_PRICE_ORDER",
        "LIMIT_ORDER",
        "LIMIT_ORDER_REJECT",
        "STOP_ORDER",
        "STOP_ORDER_REJECT",
        "MARKET_IF_TOUCHED_ORDER",
        "MARKET_IF_TOUCHED_ORDER_REJECT",
        "TAKE_PROFIT_ORDER",
        "TAKE_PROFIT_ORDER_REJECT",
        "STOP_LOSS_ORDER",
        "STOP_LOSS_ORDER_REJECT",
        "TRAILING_STOP_LOSS_ORDER",
        "TRAILING_STOP_LOSS_ORDER_REJECT",
        "ORDER_FILL",
        "ORDER_CANCEL",
        "ORDER_CANCEL_REJECT",
        "ORDER_CLIENT_EXTENSIONS_MODIFY",
        "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT",
        "TRADE_CLIENT_EXTENSIONS_MODIFY",
        "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT",
        "MARGIN_CALL_ENTER",
        "MARGIN_CALL_EXTEND",
        "MARGIN_CALL_EXIT",
        "DELAYED_TRADE_CLOSURE",
        "DAILY_FINANCING",
        "RESET_RESETTABLE_PL"
      ]
    },
    "Transaction": {
      "type": "object",
      "description": "The base Transaction specification. Specifies properties that are common between all Transaction.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Transaction's Identifier.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "time": {
          "type": "string",
          "description": "The date/time when the Transaction was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "userID": {
          "type": "integer",
          "description": "The ID of the user that initiated the creation of the Transaction."
        },
        "accountID": {
          "type": "string",
          "description": "The ID of the Account the Transaction was created for.",
          "format": "\"-\"-delimited string with format \"{siteID}-{divisionID}-{userID}-{accountNumber}\""
        },
        "batchID": {
          "type": "string",
          "description": "The ID of the \"batch\" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "requestID": {
          "type": "string",
          "description": "The Request ID of the request which generated the transaction."
        }
      }
    },
    "CreateTransaction": {
      "type": "object",
      "description": "A CreateTransaction represents the creation of an Account.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Transaction's Identifier.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "time": {
          "type": "string",
          "description": "The date/time when the Transaction was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "userID": {
          "type": "integer",
          "description": "The ID of the user that initiated the creation of the Transaction."
        },
        "accountID": {
          "type": "string",
          "description": "The ID of the Account the Transaction was created for.",
          "format": "\"-\"-delimited string with format \"{siteID}-{divisionID}-{userID}-{accountNumber}\""
        },
        "batchID": {
          "type": "string",
          "description": "The ID of the \"batch\" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "requestID": {
          "type": "string",
          "description": "The Request ID of the request which generated the transaction."
        },
        "type": {
          "type": "string",
          "description": "The Type of the Transaction. Always set to \"CREATE\" in a CreateTransaction.",
          "enum": [
            "CREATE",
            "CLOSE",
            "REOPEN",
            "CLIENT_CONFIGURE",
            "CLIENT_CONFIGURE_REJECT",
            "TRANSFER_FUNDS",
            "TRANSFER_FUNDS_REJECT",
            "MARKET_ORDER",
            "MARKET_ORDER_REJECT",
            "FIXED_PRICE_ORDER",
            "LIMIT_ORDER",
            "LIMIT_ORDER_REJECT",
            "STOP_ORDER",
            "STOP_ORDER_REJECT",
            "MARKET_IF_TOUCHED_ORDER",
            "MARKET_IF_TOUCHED_ORDER_REJECT",
            "TAKE_PROFIT_ORDER",
            "TAKE_PROFIT_ORDER_REJECT",
            "STOP_LOSS_ORDER",
            "STOP_LOSS_ORDER_REJECT",
            "TRAILING_STOP_LOSS_ORDER",
            "TRAILING_STOP_LOSS_ORDER_REJECT",
            "ORDER_FILL",
            "ORDER_CANCEL",
            "ORDER_CANCEL_REJECT",
            "ORDER_CLIENT_EXTENSIONS_MODIFY",
            "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "TRADE_CLIENT_EXTENSIONS_MODIFY",
            "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "MARGIN_CALL_ENTER",
            "MARGIN_CALL_EXTEND",
            "MARGIN_CALL_EXIT",
            "DELAYED_TRADE_CLOSURE",
            "DAILY_FINANCING",
            "RESET_RESETTABLE_PL"
          ]
        },
        "divisionID": {
          "type": "integer",
          "description": "The ID of the Division that the Account is in"
        },
        "siteID": {
          "type": "integer",
          "description": "The ID of the Site that the Account was created at"
        },
        "accountUserID": {
          "type": "integer",
          "description": "The ID of the user that the Account was created for"
        },
        "accountNumber": {
          "type": "integer",
          "description": "The number of the Account within the site/division/user"
        },
        "homeCurrency": {
          "type": "string",
          "description": "The home currency of the Account",
          "format": "A string containing an ISO 4217 currency (http://en.wikipedia.org/wiki/ISO_4217)"
        }
      }
    },
    "CloseTransaction": {
      "type": "object",
      "description": "A CloseTransaction represents the closing of an Account.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Transaction's Identifier.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "time": {
          "type": "string",
          "description": "The date/time when the Transaction was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "userID": {
          "type": "integer",
          "description": "The ID of the user that initiated the creation of the Transaction."
        },
        "accountID": {
          "type": "string",
          "description": "The ID of the Account the Transaction was created for.",
          "format": "\"-\"-delimited string with format \"{siteID}-{divisionID}-{userID}-{accountNumber}\""
        },
        "batchID": {
          "type": "string",
          "description": "The ID of the \"batch\" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "requestID": {
          "type": "string",
          "description": "The Request ID of the request which generated the transaction."
        },
        "type": {
          "type": "string",
          "description": "The Type of the Transaction. Always set to \"CLOSE\" in a CloseTransaction.",
          "enum": [
            "CREATE",
            "CLOSE",
            "REOPEN",
            "CLIENT_CONFIGURE",
            "CLIENT_CONFIGURE_REJECT",
            "TRANSFER_FUNDS",
            "TRANSFER_FUNDS_REJECT",
            "MARKET_ORDER",
            "MARKET_ORDER_REJECT",
            "FIXED_PRICE_ORDER",
            "LIMIT_ORDER",
            "LIMIT_ORDER_REJECT",
            "STOP_ORDER",
            "STOP_ORDER_REJECT",
            "MARKET_IF_TOUCHED_ORDER",
            "MARKET_IF_TOUCHED_ORDER_REJECT",
            "TAKE_PROFIT_ORDER",
            "TAKE_PROFIT_ORDER_REJECT",
            "STOP_LOSS_ORDER",
            "STOP_LOSS_ORDER_REJECT",
            "TRAILING_STOP_LOSS_ORDER",
            "TRAILING_STOP_LOSS_ORDER_REJECT",
            "ORDER_FILL",
            "ORDER_CANCEL",
            "ORDER_CANCEL_REJECT",
            "ORDER_CLIENT_EXTENSIONS_MODIFY",
            "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "TRADE_CLIENT_EXTENSIONS_MODIFY",
            "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "MARGIN_CALL_ENTER",
            "MARGIN_CALL_EXTEND",
            "MARGIN_CALL_EXIT",
            "DELAYED_TRADE_CLOSURE",
            "DAILY_FINANCING",
            "RESET_RESETTABLE_PL"
          ]
        }
      }
    },
    "ReopenTransaction": {
      "type": "object",
      "description": "A ReopenTransaction represents the re-opening of a closed Account.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Transaction's Identifier.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "time": {
          "type": "string",
          "description": "The date/time when the Transaction was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "userID": {
          "type": "integer",
          "description": "The ID of the user that initiated the creation of the Transaction."
        },
        "accountID": {
          "type": "string",
          "description": "The ID of the Account the Transaction was created for.",
          "format": "\"-\"-delimited string with format \"{siteID}-{divisionID}-{userID}-{accountNumber}\""
        },
        "batchID": {
          "type": "string",
          "description": "The ID of the \"batch\" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "requestID": {
          "type": "string",
          "description": "The Request ID of the request which generated the transaction."
        },
        "type": {
          "type": "string",
          "description": "The Type of the Transaction. Always set to \"REOPEN\" in a ReopenTransaction.",
          "enum": [
            "CREATE",
            "CLOSE",
            "REOPEN",
            "CLIENT_CONFIGURE",
            "CLIENT_CONFIGURE_REJECT",
            "TRANSFER_FUNDS",
            "TRANSFER_FUNDS_REJECT",
            "MARKET_ORDER",
            "MARKET_ORDER_REJECT",
            "FIXED_PRICE_ORDER",
            "LIMIT_ORDER",
            "LIMIT_ORDER_REJECT",
            "STOP_ORDER",
            "STOP_ORDER_REJECT",
            "MARKET_IF_TOUCHED_ORDER",
            "MARKET_IF_TOUCHED_ORDER_REJECT",
            "TAKE_PROFIT_ORDER",
            "TAKE_PROFIT_ORDER_REJECT",
            "STOP_LOSS_ORDER",
            "STOP_LOSS_ORDER_REJECT",
            "TRAILING_STOP_LOSS_ORDER",
            "TRAILING_STOP_LOSS_ORDER_REJECT",
            "ORDER_FILL",
            "ORDER_CANCEL",
            "ORDER_CANCEL_REJECT",
            "ORDER_CLIENT_EXTENSIONS_MODIFY",
            "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "TRADE_CLIENT_EXTENSIONS_MODIFY",
            "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "MARGIN_CALL_ENTER",
            "MARGIN_CALL_EXTEND",
            "MARGIN_CALL_EXIT",
            "DELAYED_TRADE_CLOSURE",
            "DAILY_FINANCING",
            "RESET_RESETTABLE_PL"
          ]
        }
      }
    },
    "ClientConfigureTransaction": {
      "type": "object",
      "description": "A ClientConfigureTransaction represents the configuration of an Account by a client.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Transaction's Identifier.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "time": {
          "type": "string",
          "description": "The date/time when the Transaction was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "userID": {
          "type": "integer",
          "description": "The ID of the user that initiated the creation of the Transaction."
        },
        "accountID": {
          "type": "string",
          "description": "The ID of the Account the Transaction was created for.",
          "format": "\"-\"-delimited string with format \"{siteID}-{divisionID}-{userID}-{accountNumber}\""
        },
        "batchID": {
          "type": "string",
          "description": "The ID of the \"batch\" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "requestID": {
          "type": "string",
          "description": "The Request ID of the request which generated the transaction."
        },
        "type": {
          "type": "string",
          "description": "The Type of the Transaction. Always set to \"CLIENT_CONFIGURE\" in a ClientConfigureTransaction.",
          "enum": [
            "CREATE",
            "CLOSE",
            "REOPEN",
            "CLIENT_CONFIGURE",
            "CLIENT_CONFIGURE_REJECT",
            "TRANSFER_FUNDS",
            "TRANSFER_FUNDS_REJECT",
            "MARKET_ORDER",
            "MARKET_ORDER_REJECT",
            "FIXED_PRICE_ORDER",
            "LIMIT_ORDER",
            "LIMIT_ORDER_REJECT",
            "STOP_ORDER",
            "STOP_ORDER_REJECT",
            "MARKET_IF_TOUCHED_ORDER",
            "MARKET_IF_TOUCHED_ORDER_REJECT",
            "TAKE_PROFIT_ORDER",
            "TAKE_PROFIT_ORDER_REJECT",
            "STOP_LOSS_ORDER",
            "STOP_LOSS_ORDER_REJECT",
            "TRAILING_STOP_LOSS_ORDER",
            "TRAILING_STOP_LOSS_ORDER_REJECT",
            "ORDER_FILL",
            "ORDER_CANCEL",
            "ORDER_CANCEL_REJECT",
            "ORDER_CLIENT_EXTENSIONS_MODIFY",
            "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "TRADE_CLIENT_EXTENSIONS_MODIFY",
            "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "MARGIN_CALL_ENTER",
            "MARGIN_CALL_EXTEND",
            "MARGIN_CALL_EXIT",
            "DELAYED_TRADE_CLOSURE",
            "DAILY_FINANCING",
            "RESET_RESETTABLE_PL"
          ]
        },
        "alias": {
          "type": "string",
          "description": "The client-provided alias for the Account."
        },
        "marginRate": {
          "type": "string",
          "description": "The margin rate override for the Account.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        }
      }
    },
    "ClientConfigureRejectTransaction": {
      "type": "object",
      "description": "A ClientConfigureRejectTransaction represents the reject of configuration of an Account by a client.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Transaction's Identifier.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "time": {
          "type": "string",
          "description": "The date/time when the Transaction was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "userID": {
          "type": "integer",
          "description": "The ID of the user that initiated the creation of the Transaction."
        },
        "accountID": {
          "type": "string",
          "description": "The ID of the Account the Transaction was created for.",
          "format": "\"-\"-delimited string with format \"{siteID}-{divisionID}-{userID}-{accountNumber}\""
        },
        "batchID": {
          "type": "string",
          "description": "The ID of the \"batch\" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "requestID": {
          "type": "string",
          "description": "The Request ID of the request which generated the transaction."
        },
        "type": {
          "type": "string",
          "description": "The Type of the Transaction. Always set to \"CLIENT_CONFIGURE_REJECT\" in a ClientConfigureRejectTransaction.",
          "enum": [
            "CREATE",
            "CLOSE",
            "REOPEN",
            "CLIENT_CONFIGURE",
            "CLIENT_CONFIGURE_REJECT",
            "TRANSFER_FUNDS",
            "TRANSFER_FUNDS_REJECT",
            "MARKET_ORDER",
            "MARKET_ORDER_REJECT",
            "FIXED_PRICE_ORDER",
            "LIMIT_ORDER",
            "LIMIT_ORDER_REJECT",
            "STOP_ORDER",
            "STOP_ORDER_REJECT",
            "MARKET_IF_TOUCHED_ORDER",
            "MARKET_IF_TOUCHED_ORDER_REJECT",
            "TAKE_PROFIT_ORDER",
            "TAKE_PROFIT_ORDER_REJECT",
            "STOP_LOSS_ORDER",
            "STOP_LOSS_ORDER_REJECT",
            "TRAILING_STOP_LOSS_ORDER",
            "TRAILING_STOP_LOSS_ORDER_REJECT",
            "ORDER_FILL",
            "ORDER_CANCEL",
            "ORDER_CANCEL_REJECT",
            "ORDER_CLIENT_EXTENSIONS_MODIFY",
            "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "TRADE_CLIENT_EXTENSIONS_MODIFY",
            "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "MARGIN_CALL_ENTER",
            "MARGIN_CALL_EXTEND",
            "MARGIN_CALL_EXIT",
            "DELAYED_TRADE_CLOSURE",
            "DAILY_FINANCING",
            "RESET_RESETTABLE_PL"
          ]
        },
        "alias": {
          "type": "string",
          "description": "The client-provided alias for the Account."
        },
        "marginRate": {
          "type": "string",
          "description": "The margin rate override for the Account.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "rejectReason": {
          "type": "string",
          "description": "The reason that the Reject Transaction was created",
          "enum": [
            "INTERNAL_SERVER_ERROR",
            "INSTRUMENT_PRICE_UNKNOWN",
            "ACCOUNT_NOT_ACTIVE",
            "ACCOUNT_LOCKED",
            "ACCOUNT_ORDER_CREATION_LOCKED",
            "ACCOUNT_CONFIGURATION_LOCKED",
            "ACCOUNT_DEPOSIT_LOCKED",
            "ACCOUNT_WITHDRAWAL_LOCKED",
            "ACCOUNT_ORDER_CANCEL_LOCKED",
            "INSTRUMENT_NOT_TRADEABLE",
            "PENDING_ORDERS_ALLOWED_EXCEEDED",
            "ORDER_ID_UNSPECIFIED",
            "ORDER_DOESNT_EXIST",
            "ORDER_IDENTIFIER_INCONSISTENCY",
            "TRADE_ID_UNSPECIFIED",
            "TRADE_DOESNT_EXIST",
            "TRADE_IDENTIFIER_INCONSISTENCY",
            "INSUFFICIENT_MARGIN",
            "INSTRUMENT_MISSING",
            "INSTRUMENT_UNKNOWN",
            "UNITS_MISSING",
            "UNITS_INVALID",
            "UNITS_PRECISION_EXCEEDED",
            "UNITS_LIMIT_EXCEEDED",
            "UNITS_MIMIMUM_NOT_MET",
            "PRICE_MISSING",
            "PRICE_INVALID",
            "PRICE_PRECISION_EXCEEDED",
            "PRICE_DISTANCE_MISSING",
            "PRICE_DISTANCE_INVALID",
            "PRICE_DISTANCE_PRECISION_EXCEEDED",
            "PRICE_DISTANCE_MAXIMUM_EXCEEDED",
            "PRICE_DISTANCE_MINIMUM_NOT_MET",
            "TIME_IN_FORCE_MISSING",
            "TIME_IN_FORCE_INVALID",
            "TIME_IN_FORCE_GTD_TIMESTAMP_MISSING",
            "TIME_IN_FORCE_GTD_TIMESTAMP_IN_PAST",
            "PRICE_BOUND_INVALID",
            "PRICE_BOUND_PRECISION_EXCEEDED",
            "ORDERS_ON_FILL_DUPLICATE_CLIENT_ORDER_IDS",
            "TRADE_ON_FILL_CLIENT_EXTENSIONS_NOT_SUPPORTED",
            "CLIENT_ORDER_ID_INVALID",
            "CLIENT_ORDER_ID_ALREADY_EXISTS",
            "CLIENT_ORDER_TAG_INVALID",
            "CLIENT_ORDER_COMMENT_INVALID",
            "CLIENT_TRADE_ID_INVALID",
            "CLIENT_TRADE_ID_ALREADY_EXISTS",
            "CLIENT_TRADE_TAG_INVALID",
            "CLIENT_TRADE_COMMENT_INVALID",
            "ORDER_FILL_POSITION_ACTION_MISSING",
            "ORDER_FILL_POSITION_ACTION_INVALID",
            "TRIGGER_CONDITION_MISSING",
            "TRIGGER_CONDITION_INVALID",
            "ORDER_PARTIAL_FILL_OPTION_MISSING",
            "ORDER_PARTIAL_FILL_OPTION_INVALID",
            "INVALID_REISSUE_IMMEDIATE_PARTIAL_FILL",
            "TAKE_PROFIT_ORDER_ALREADY_EXISTS",
            "TAKE_PROFIT_ON_FILL_PRICE_MISSING",
            "TAKE_PROFIT_ON_FILL_PRICE_INVALID",
            "TAKE_PROFIT_ON_FILL_PRICE_PRECISION_EXCEEDED",
            "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_MISSING",
            "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_INVALID",
            "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_MISSING",
            "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_IN_PAST",
            "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_ID_INVALID",
            "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_TAG_INVALID",
            "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_COMMENT_INVALID",
            "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_MISSING",
            "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_INVALID",
            "STOP_LOSS_ORDER_ALREADY_EXISTS",
            "STOP_LOSS_ORDER_GUARANTEED_REQUIRED",
            "STOP_LOSS_ORDER_GUARANTEED_PRICE_WITHIN_SPREAD",
            "STOP_LOSS_ORDER_GUARANTEED_NOT_ALLOWED",
            "STOP_LOSS_ORDER_GUARANTEED_HALTED_CREATE_VIOLATION",
            "STOP_LOSS_ORDER_GUARANTEED_HALTED_TIGHTEN_VIOLATION",
            "STOP_LOSS_ORDER_GUARANTEED_HEDGING_NOT_ALLOWED",
            "STOP_LOSS_ORDER_GUARANTEED_MINIMUM_DISTANCE_NOT_MET",
            "STOP_LOSS_ORDER_NOT_CANCELABLE",
            "STOP_LOSS_ORDER_NOT_REPLACEABLE",
            "STOP_LOSS_ORDER_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED",
            "STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_SPECIFIED",
            "STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_MISSING",
            "STOP_LOSS_ON_FILL_REQUIRED_FOR_PENDING_ORDER",
            "STOP_LOSS_ON_FILL_GUARANTEED_NOT_ALLOWED",
            "STOP_LOSS_ON_FILL_GUARANTEED_REQUIRED",
            "STOP_LOSS_ON_FILL_PRICE_MISSING",
            "STOP_LOSS_ON_FILL_PRICE_INVALID",
            "STOP_LOSS_ON_FILL_PRICE_PRECISION_EXCEEDED",
            "STOP_LOSS_ON_FILL_GUARANTEED_MINIMUM_DISTANCE_NOT_MET",
            "STOP_LOSS_ON_FILL_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED",
            "STOP_LOSS_ON_FILL_DISTANCE_INVALID",
            "STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED",
            "STOP_LOSS_ON_FILL_DISTANCE_PRECISION_EXCEEDED",
            "STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_SPECIFIED",
            "STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_MISSING",
            "STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING",
            "STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID",
            "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING",
            "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST",
            "STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID",
            "STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID",
            "STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID",
            "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING",
            "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID",
            "TRAILING_STOP_LOSS_ORDER_ALREADY_EXISTS",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_PRECISION_EXCEEDED",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MINIMUM_NOT_MET",
            "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST",
            "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID",
            "TRAILING_STOP_LOSS_ORDERS_NOT_SUPPORTED",
            "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID",
            "CLOSE_TRADE_TYPE_MISSING",
            "CLOSE_TRADE_PARTIAL_UNITS_MISSING",
            "CLOSE_TRADE_UNITS_EXCEED_TRADE_SIZE",
            "CLOSEOUT_POSITION_DOESNT_EXIST",
            "CLOSEOUT_POSITION_INCOMPLETE_SPECIFICATION",
            "CLOSEOUT_POSITION_UNITS_EXCEED_POSITION_SIZE",
            "CLOSEOUT_POSITION_REJECT",
            "CLOSEOUT_POSITION_PARTIAL_UNITS_MISSING",
            "MARKUP_GROUP_ID_INVALID",
            "POSITION_AGGREGATION_MODE_INVALID",
            "ADMIN_CONFIGURE_DATA_MISSING",
            "MARGIN_RATE_INVALID",
            "MARGIN_RATE_WOULD_TRIGGER_CLOSEOUT",
            "ALIAS_INVALID",
            "CLIENT_CONFIGURE_DATA_MISSING",
            "MARGIN_RATE_WOULD_TRIGGER_MARGIN_CALL",
            "AMOUNT_INVALID",
            "INSUFFICIENT_FUNDS",
            "AMOUNT_MISSING",
            "FUNDING_REASON_MISSING",
            "CLIENT_EXTENSIONS_DATA_MISSING",
            "REPLACING_ORDER_INVALID",
            "REPLACING_TRADE_ID_INVALID"
          ]
        }
      }
    },
    "FundingReason": {
      "type": "string",
      "description": "The reason that an Account is being funded.",
      "enum": [
        "CLIENT_FUNDING",
        "ACCOUNT_TRANSFER",
        "DIVISION_MIGRATION",
        "SITE_MIGRATION",
        "ADJUSTMENT"
      ]
    },
    "TransferFundsTransaction": {
      "type": "object",
      "description": "A TransferFundsTransaction represents the transfer of funds in/out of an Account.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Transaction's Identifier.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "time": {
          "type": "string",
          "description": "The date/time when the Transaction was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "userID": {
          "type": "integer",
          "description": "The ID of the user that initiated the creation of the Transaction."
        },
        "accountID": {
          "type": "string",
          "description": "The ID of the Account the Transaction was created for.",
          "format": "\"-\"-delimited string with format \"{siteID}-{divisionID}-{userID}-{accountNumber}\""
        },
        "batchID": {
          "type": "string",
          "description": "The ID of the \"batch\" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "requestID": {
          "type": "string",
          "description": "The Request ID of the request which generated the transaction."
        },
        "type": {
          "type": "string",
          "description": "The Type of the Transaction. Always set to \"TRANSFER_FUNDS\" in a TransferFundsTransaction.",
          "enum": [
            "CREATE",
            "CLOSE",
            "REOPEN",
            "CLIENT_CONFIGURE",
            "CLIENT_CONFIGURE_REJECT",
            "TRANSFER_FUNDS",
            "TRANSFER_FUNDS_REJECT",
            "MARKET_ORDER",
            "MARKET_ORDER_REJECT",
            "FIXED_PRICE_ORDER",
            "LIMIT_ORDER",
            "LIMIT_ORDER_REJECT",
            "STOP_ORDER",
            "STOP_ORDER_REJECT",
            "MARKET_IF_TOUCHED_ORDER",
            "MARKET_IF_TOUCHED_ORDER_REJECT",
            "TAKE_PROFIT_ORDER",
            "TAKE_PROFIT_ORDER_REJECT",
            "STOP_LOSS_ORDER",
            "STOP_LOSS_ORDER_REJECT",
            "TRAILING_STOP_LOSS_ORDER",
            "TRAILING_STOP_LOSS_ORDER_REJECT",
            "ORDER_FILL",
            "ORDER_CANCEL",
            "ORDER_CANCEL_REJECT",
            "ORDER_CLIENT_EXTENSIONS_MODIFY",
            "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "TRADE_CLIENT_EXTENSIONS_MODIFY",
            "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "MARGIN_CALL_ENTER",
            "MARGIN_CALL_EXTEND",
            "MARGIN_CALL_EXIT",
            "DELAYED_TRADE_CLOSURE",
            "DAILY_FINANCING",
            "RESET_RESETTABLE_PL"
          ]
        },
        "amount": {
          "type": "string",
          "description": "The amount to deposit/withdraw from the Account in the Account's home currency. A positive value indicates a deposit, a negative value indicates a withdrawal.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on the Account's home currency."
        },
        "fundingReason": {
          "type": "string",
          "description": "The reason that an Account is being funded.",
          "enum": [
            "CLIENT_FUNDING",
            "ACCOUNT_TRANSFER",
            "DIVISION_MIGRATION",
            "SITE_MIGRATION",
            "ADJUSTMENT"
          ]
        },
        "comment": {
          "type": "string",
          "description": "An optional comment that may be attached to a fund transfer for audit purposes"
        },
        "accountBalance": {
          "type": "string",
          "description": "The Account's balance after funds are transferred.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on the Account's home currency."
        }
      }
    },
    "TransferFundsRejectTransaction": {
      "type": "object",
      "description": "A TransferFundsRejectTransaction represents the rejection of the transfer of funds in/out of an Account.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Transaction's Identifier.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "time": {
          "type": "string",
          "description": "The date/time when the Transaction was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "userID": {
          "type": "integer",
          "description": "The ID of the user that initiated the creation of the Transaction."
        },
        "accountID": {
          "type": "string",
          "description": "The ID of the Account the Transaction was created for.",
          "format": "\"-\"-delimited string with format \"{siteID}-{divisionID}-{userID}-{accountNumber}\""
        },
        "batchID": {
          "type": "string",
          "description": "The ID of the \"batch\" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "requestID": {
          "type": "string",
          "description": "The Request ID of the request which generated the transaction."
        },
        "type": {
          "type": "string",
          "description": "The Type of the Transaction. Always set to \"TRANSFER_FUNDS_REJECT\" in a TransferFundsRejectTransaction.",
          "enum": [
            "CREATE",
            "CLOSE",
            "REOPEN",
            "CLIENT_CONFIGURE",
            "CLIENT_CONFIGURE_REJECT",
            "TRANSFER_FUNDS",
            "TRANSFER_FUNDS_REJECT",
            "MARKET_ORDER",
            "MARKET_ORDER_REJECT",
            "FIXED_PRICE_ORDER",
            "LIMIT_ORDER",
            "LIMIT_ORDER_REJECT",
            "STOP_ORDER",
            "STOP_ORDER_REJECT",
            "MARKET_IF_TOUCHED_ORDER",
            "MARKET_IF_TOUCHED_ORDER_REJECT",
            "TAKE_PROFIT_ORDER",
            "TAKE_PROFIT_ORDER_REJECT",
            "STOP_LOSS_ORDER",
            "STOP_LOSS_ORDER_REJECT",
            "TRAILING_STOP_LOSS_ORDER",
            "TRAILING_STOP_LOSS_ORDER_REJECT",
            "ORDER_FILL",
            "ORDER_CANCEL",
            "ORDER_CANCEL_REJECT",
            "ORDER_CLIENT_EXTENSIONS_MODIFY",
            "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "TRADE_CLIENT_EXTENSIONS_MODIFY",
            "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "MARGIN_CALL_ENTER",
            "MARGIN_CALL_EXTEND",
            "MARGIN_CALL_EXIT",
            "DELAYED_TRADE_CLOSURE",
            "DAILY_FINANCING",
            "RESET_RESETTABLE_PL"
          ]
        },
        "amount": {
          "type": "string",
          "description": "The amount to deposit/withdraw from the Account in the Account's home currency. A positive value indicates a deposit, a negative value indicates a withdrawal.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on the Account's home currency."
        },
        "fundingReason": {
          "type": "string",
          "description": "The reason that an Account is being funded.",
          "enum": [
            "CLIENT_FUNDING",
            "ACCOUNT_TRANSFER",
            "DIVISION_MIGRATION",
            "SITE_MIGRATION",
            "ADJUSTMENT"
          ]
        },
        "comment": {
          "type": "string",
          "description": "An optional comment that may be attached to a fund transfer for audit purposes"
        },
        "rejectReason": {
          "type": "string",
          "description": "The reason that the Reject Transaction was created",
          "enum": [
            "INTERNAL_SERVER_ERROR",
            "INSTRUMENT_PRICE_UNKNOWN",
            "ACCOUNT_NOT_ACTIVE",
            "ACCOUNT_LOCKED",
            "ACCOUNT_ORDER_CREATION_LOCKED",
            "ACCOUNT_CONFIGURATION_LOCKED",
            "ACCOUNT_DEPOSIT_LOCKED",
            "ACCOUNT_WITHDRAWAL_LOCKED",
            "ACCOUNT_ORDER_CANCEL_LOCKED",
            "INSTRUMENT_NOT_TRADEABLE",
            "PENDING_ORDERS_ALLOWED_EXCEEDED",
            "ORDER_ID_UNSPECIFIED",
            "ORDER_DOESNT_EXIST",
            "ORDER_IDENTIFIER_INCONSISTENCY",
            "TRADE_ID_UNSPECIFIED",
            "TRADE_DOESNT_EXIST",
            "TRADE_IDENTIFIER_INCONSISTENCY",
            "INSUFFICIENT_MARGIN",
            "INSTRUMENT_MISSING",
            "INSTRUMENT_UNKNOWN",
            "UNITS_MISSING",
            "UNITS_INVALID",
            "UNITS_PRECISION_EXCEEDED",
            "UNITS_LIMIT_EXCEEDED",
            "UNITS_MIMIMUM_NOT_MET",
            "PRICE_MISSING",
            "PRICE_INVALID",
            "PRICE_PRECISION_EXCEEDED",
            "PRICE_DISTANCE_MISSING",
            "PRICE_DISTANCE_INVALID",
            "PRICE_DISTANCE_PRECISION_EXCEEDED",
            "PRICE_DISTANCE_MAXIMUM_EXCEEDED",
            "PRICE_DISTANCE_MINIMUM_NOT_MET",
            "TIME_IN_FORCE_MISSING",
            "TIME_IN_FORCE_INVALID",
            "TIME_IN_FORCE_GTD_TIMESTAMP_MISSING",
            "TIME_IN_FORCE_GTD_TIMESTAMP_IN_PAST",
            "PRICE_BOUND_INVALID",
            "PRICE_BOUND_PRECISION_EXCEEDED",
            "ORDERS_ON_FILL_DUPLICATE_CLIENT_ORDER_IDS",
            "TRADE_ON_FILL_CLIENT_EXTENSIONS_NOT_SUPPORTED",
            "CLIENT_ORDER_ID_INVALID",
            "CLIENT_ORDER_ID_ALREADY_EXISTS",
            "CLIENT_ORDER_TAG_INVALID",
            "CLIENT_ORDER_COMMENT_INVALID",
            "CLIENT_TRADE_ID_INVALID",
            "CLIENT_TRADE_ID_ALREADY_EXISTS",
            "CLIENT_TRADE_TAG_INVALID",
            "CLIENT_TRADE_COMMENT_INVALID",
            "ORDER_FILL_POSITION_ACTION_MISSING",
            "ORDER_FILL_POSITION_ACTION_INVALID",
            "TRIGGER_CONDITION_MISSING",
            "TRIGGER_CONDITION_INVALID",
            "ORDER_PARTIAL_FILL_OPTION_MISSING",
            "ORDER_PARTIAL_FILL_OPTION_INVALID",
            "INVALID_REISSUE_IMMEDIATE_PARTIAL_FILL",
            "TAKE_PROFIT_ORDER_ALREADY_EXISTS",
            "TAKE_PROFIT_ON_FILL_PRICE_MISSING",
            "TAKE_PROFIT_ON_FILL_PRICE_INVALID",
            "TAKE_PROFIT_ON_FILL_PRICE_PRECISION_EXCEEDED",
            "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_MISSING",
            "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_INVALID",
            "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_MISSING",
            "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_IN_PAST",
            "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_ID_INVALID",
            "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_TAG_INVALID",
            "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_COMMENT_INVALID",
            "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_MISSING",
            "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_INVALID",
            "STOP_LOSS_ORDER_ALREADY_EXISTS",
            "STOP_LOSS_ORDER_GUARANTEED_REQUIRED",
            "STOP_LOSS_ORDER_GUARANTEED_PRICE_WITHIN_SPREAD",
            "STOP_LOSS_ORDER_GUARANTEED_NOT_ALLOWED",
            "STOP_LOSS_ORDER_GUARANTEED_HALTED_CREATE_VIOLATION",
            "STOP_LOSS_ORDER_GUARANTEED_HALTED_TIGHTEN_VIOLATION",
            "STOP_LOSS_ORDER_GUARANTEED_HEDGING_NOT_ALLOWED",
            "STOP_LOSS_ORDER_GUARANTEED_MINIMUM_DISTANCE_NOT_MET",
            "STOP_LOSS_ORDER_NOT_CANCELABLE",
            "STOP_LOSS_ORDER_NOT_REPLACEABLE",
            "STOP_LOSS_ORDER_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED",
            "STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_SPECIFIED",
            "STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_MISSING",
            "STOP_LOSS_ON_FILL_REQUIRED_FOR_PENDING_ORDER",
            "STOP_LOSS_ON_FILL_GUARANTEED_NOT_ALLOWED",
            "STOP_LOSS_ON_FILL_GUARANTEED_REQUIRED",
            "STOP_LOSS_ON_FILL_PRICE_MISSING",
            "STOP_LOSS_ON_FILL_PRICE_INVALID",
            "STOP_LOSS_ON_FILL_PRICE_PRECISION_EXCEEDED",
            "STOP_LOSS_ON_FILL_GUARANTEED_MINIMUM_DISTANCE_NOT_MET",
            "STOP_LOSS_ON_FILL_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED",
            "STOP_LOSS_ON_FILL_DISTANCE_INVALID",
            "STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED",
            "STOP_LOSS_ON_FILL_DISTANCE_PRECISION_EXCEEDED",
            "STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_SPECIFIED",
            "STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_MISSING",
            "STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING",
            "STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID",
            "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING",
            "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST",
            "STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID",
            "STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID",
            "STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID",
            "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING",
            "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID",
            "TRAILING_STOP_LOSS_ORDER_ALREADY_EXISTS",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_PRECISION_EXCEEDED",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MINIMUM_NOT_MET",
            "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST",
            "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID",
            "TRAILING_STOP_LOSS_ORDERS_NOT_SUPPORTED",
            "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID",
            "CLOSE_TRADE_TYPE_MISSING",
            "CLOSE_TRADE_PARTIAL_UNITS_MISSING",
            "CLOSE_TRADE_UNITS_EXCEED_TRADE_SIZE",
            "CLOSEOUT_POSITION_DOESNT_EXIST",
            "CLOSEOUT_POSITION_INCOMPLETE_SPECIFICATION",
            "CLOSEOUT_POSITION_UNITS_EXCEED_POSITION_SIZE",
            "CLOSEOUT_POSITION_REJECT",
            "CLOSEOUT_POSITION_PARTIAL_UNITS_MISSING",
            "MARKUP_GROUP_ID_INVALID",
            "POSITION_AGGREGATION_MODE_INVALID",
            "ADMIN_CONFIGURE_DATA_MISSING",
            "MARGIN_RATE_INVALID",
            "MARGIN_RATE_WOULD_TRIGGER_CLOSEOUT",
            "ALIAS_INVALID",
            "CLIENT_CONFIGURE_DATA_MISSING",
            "MARGIN_RATE_WOULD_TRIGGER_MARGIN_CALL",
            "AMOUNT_INVALID",
            "INSUFFICIENT_FUNDS",
            "AMOUNT_MISSING",
            "FUNDING_REASON_MISSING",
            "CLIENT_EXTENSIONS_DATA_MISSING",
            "REPLACING_ORDER_INVALID",
            "REPLACING_TRADE_ID_INVALID"
          ]
        }
      }
    },
    "MarketOrderReason": {
      "type": "string",
      "description": "The reason that the Market Order was created",
      "enum": [
        "CLIENT_ORDER",
        "TRADE_CLOSE",
        "POSITION_CLOSEOUT",
        "MARGIN_CLOSEOUT",
        "DELAYED_TRADE_CLOSE"
      ]
    },
    "FixedPriceOrderReason": {
      "type": "string",
      "description": "The reason that the Fixed Price Order was created",
      "enum": [
        "PLATFORM_ACCOUNT_MIGRATION"
      ]
    },
    "MarketOrderTransaction": {
      "type": "object",
      "description": "A MarketOrderTransaction represents the creation of a Market Order in the user's account. A Market Order is an Order that is filled immediately at the current market price.\nMarket Orders can be specialized when they are created to accomplish a specific task: to close a Trade, to closeout a Position or to particiate in in a Margin closeout.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Transaction's Identifier.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "time": {
          "type": "string",
          "description": "The date/time when the Transaction was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "userID": {
          "type": "integer",
          "description": "The ID of the user that initiated the creation of the Transaction."
        },
        "accountID": {
          "type": "string",
          "description": "The ID of the Account the Transaction was created for.",
          "format": "\"-\"-delimited string with format \"{siteID}-{divisionID}-{userID}-{accountNumber}\""
        },
        "batchID": {
          "type": "string",
          "description": "The ID of the \"batch\" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "requestID": {
          "type": "string",
          "description": "The Request ID of the request which generated the transaction."
        },
        "type": {
          "type": "string",
          "description": "The Type of the Transaction. Always set to \"MARKET_ORDER\" in a MarketOrderTransaction.",
          "enum": [
            "CREATE",
            "CLOSE",
            "REOPEN",
            "CLIENT_CONFIGURE",
            "CLIENT_CONFIGURE_REJECT",
            "TRANSFER_FUNDS",
            "TRANSFER_FUNDS_REJECT",
            "MARKET_ORDER",
            "MARKET_ORDER_REJECT",
            "FIXED_PRICE_ORDER",
            "LIMIT_ORDER",
            "LIMIT_ORDER_REJECT",
            "STOP_ORDER",
            "STOP_ORDER_REJECT",
            "MARKET_IF_TOUCHED_ORDER",
            "MARKET_IF_TOUCHED_ORDER_REJECT",
            "TAKE_PROFIT_ORDER",
            "TAKE_PROFIT_ORDER_REJECT",
            "STOP_LOSS_ORDER",
            "STOP_LOSS_ORDER_REJECT",
            "TRAILING_STOP_LOSS_ORDER",
            "TRAILING_STOP_LOSS_ORDER_REJECT",
            "ORDER_FILL",
            "ORDER_CANCEL",
            "ORDER_CANCEL_REJECT",
            "ORDER_CLIENT_EXTENSIONS_MODIFY",
            "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "TRADE_CLIENT_EXTENSIONS_MODIFY",
            "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "MARGIN_CALL_ENTER",
            "MARGIN_CALL_EXTEND",
            "MARGIN_CALL_EXIT",
            "DELAYED_TRADE_CLOSURE",
            "DAILY_FINANCING",
            "RESET_RESETTABLE_PL"
          ]
        },
        "instrument": {
          "type": "string",
          "description": "The Market Order's Instrument.",
          "format": "A string containing the base currency and quote currency delimited by a \"_\"."
        },
        "units": {
          "type": "string",
          "description": "The quantity requested to be filled by the Market Order. A posititive number of units results in a long Order, and a negative number of units results in a short Order.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "timeInForce": {
          "type": "string",
          "description": "The time-in-force requested for the Market Order. Restricted to FOK or IOC for a MarketOrder.",
          "enum": [
            "GTC",
            "GTD",
            "GFD",
            "FOK",
            "IOC"
          ]
        },
        "priceBound": {
          "type": "string",
          "description": "The worst price that the client is willing to have the Market Order filled at.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "positionFill": {
          "type": "string",
          "description": "Specification of how Positions in the Account are modified when the Order is filled.",
          "enum": [
            "OPEN_ONLY",
            "REDUCE_FIRST",
            "REDUCE_ONLY",
            "DEFAULT"
          ]
        },
        "tradeClose": {
          "$ref": "v20_transaction.json#/definitions/MarketOrderTradeClose"
        },
        "longPositionCloseout": {
          "$ref": "v20_transaction.json#/definitions/MarketOrderPositionCloseout"
        },
        "shortPositionCloseout": {
          "$ref": "v20_transaction.json#/definitions/MarketOrderPositionCloseout"
        },
        "marginCloseout": {
          "$ref": "v20_transaction.json#/definitions/MarketOrderMarginCloseout"
        },
        "delayedTradeClose": {
          "$ref": "v20_transaction.json#/definitions/MarketOrderDelayedTradeClose"
        },
        "reason": {
          "type": "string",
          "description": "The reason that the Market Order was created",
          "enum": [
            "CLIENT_ORDER",
            "TRADE_CLOSE",
            "POSITION_CLOSEOUT",
            "MARGIN_CLOSEOUT",
            "DELAYED_TRADE_CLOSE"
          ]
        },
        "clientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "takeProfitOnFill": {
          "$ref": "v20_transaction.json#/definitions/TakeProfitDetails"
        },
        "stopLossOnFill": {
          "$ref": "v20_transaction.json#/definitions/StopLossDetails"
        },
        "trailingStopLossOnFill": {
          "$ref": "v20_transaction.json#/definitions/TrailingStopLossDetails"
        },
        "tradeClientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        }
      }
    },
    "MarketOrderRejectTransaction": {
      "type": "object",
      "description": "A MarketOrderRejectTransaction represents the rejection of the creation of a Market Order.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Transaction's Identifier.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "time": {
          "type": "string",
          "description": "The date/time when the Transaction was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "userID": {
          "type": "integer",
          "description": "The ID of the user that initiated the creation of the Transaction."
        },
        "accountID": {
          "type": "string",
          "description": "The ID of the Account the Transaction was created for.",
          "format": "\"-\"-delimited string with format \"{siteID}-{divisionID}-{userID}-{accountNumber}\""
        },
        "batchID": {
          "type": "string",
          "description": "The ID of the \"batch\" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "requestID": {
          "type": "string",
          "description": "The Request ID of the request which generated the transaction."
        },
        "type": {
          "type": "string",
          "description": "The Type of the Transaction. Always set to \"MARKET_ORDER_REJECT\" in a MarketOrderRejectTransaction.",
          "enum": [
            "CREATE",
            "CLOSE",
            "REOPEN",
            "CLIENT_CONFIGURE",
            "CLIENT_CONFIGURE_REJECT",
            "TRANSFER_FUNDS",
            "TRANSFER_FUNDS_REJECT",
            "MARKET_ORDER",
            "MARKET_ORDER_REJECT",
            "FIXED_PRICE_ORDER",
            "LIMIT_ORDER",
            "LIMIT_ORDER_REJECT",
            "STOP_ORDER",
            "STOP_ORDER_REJECT",
            "MARKET_IF_TOUCHED_ORDER",
            "MARKET_IF_TOUCHED_ORDER_REJECT",
            "TAKE_PROFIT_ORDER",
            "TAKE_PROFIT_ORDER_REJECT",
            "STOP_LOSS_ORDER",
            "STOP_LOSS_ORDER_REJECT",
            "TRAILING_STOP_LOSS_ORDER",
            "TRAILING_STOP_LOSS_ORDER_REJECT",
            "ORDER_FILL",
            "ORDER_CANCEL",
            "ORDER_CANCEL_REJECT",
            "ORDER_CLIENT_EXTENSIONS_MODIFY",
            "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "TRADE_CLIENT_EXTENSIONS_MODIFY",
            "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "MARGIN_CALL_ENTER",
            "MARGIN_CALL_EXTEND",
            "MARGIN_CALL_EXIT",
            "DELAYED_TRADE_CLOSURE",
            "DAILY_FINANCING",
            "RESET_RESETTABLE_PL"
          ]
        },
        "instrument": {
          "type": "string",
          "description": "The Market Order's Instrument.",
          "format": "A string containing the base currency and quote currency delimited by a \"_\"."
        },
        "units": {
          "type": "string",
          "description": "The quantity requested to be filled by the Market Order. A posititive number of units results in a long Order, and a negative number of units results in a short Order.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "timeInForce": {
          "type": "string",
          "description": "The time-in-force requested for the Market Order. Restricted to FOK or IOC for a MarketOrder.",
          "enum": [
            "GTC",
            "GTD",
            "GFD",
            "FOK",
            "IOC"
          ]
        },
        "priceBound": {
          "type": "string",
          "description": "The worst price that the client is willing to have the Market Order filled at.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "positionFill": {
          "type": "string",
          "description": "Specification of how Positions in the Account are modified when the Order is filled.",
          "enum": [
            "OPEN_ONLY",
            "REDUCE_FIRST",
            "REDUCE_ONLY",
            "DEFAULT"
          ]
        },
        "tradeClose": {
          "$ref": "v20_transaction.json#/definitions/MarketOrderTradeClose"
        },
        "longPositionCloseout": {
          "$ref": "v20_transaction.json#/definitions/MarketOrderPositionCloseout"
        },
        "shortPositionCloseout": {
          "$ref": "v20_transaction.json#/definitions/MarketOrderPositionCloseout"
        },
        "marginCloseout": {
          "$ref": "v20_transaction.json#/definitions/MarketOrderMarginCloseout"
        },
        "delayedTradeClose": {
          "$ref": "v20_transaction.json#/definitions/MarketOrderDelayedTradeClose"
        },
        "reason": {
          "type": "string",
          "description": "The reason that the Market Order was created",
          "enum": [
            "CLIENT_ORDER",
            "TRADE_CLOSE",
            "POSITION_CLOSEOUT",
            "MARGIN_CLOSEOUT",
            "DELAYED_TRADE_CLOSE"
          ]
        },
        "clientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "takeProfitOnFill": {
          "$ref": "v20_transaction.json#/definitions/TakeProfitDetails"
        },
        "stopLossOnFill": {
          "$ref": "v20_transaction.json#/definitions/StopLossDetails"
        },
        "trailingStopLossOnFill": {
          "$ref": "v20_transaction.json#/definitions/TrailingStopLossDetails"
        },
        "tradeClientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "rejectReason": {
          "type": "string",
          "description": "The reason that the Reject Transaction was created",
          "enum": [
            "INTERNAL_SERVER_ERROR",
            "INSTRUMENT_PRICE_UNKNOWN",
            "ACCOUNT_NOT_ACTIVE",
            "ACCOUNT_LOCKED",
            "ACCOUNT_ORDER_CREATION_LOCKED",
            "ACCOUNT_CONFIGURATION_LOCKED",
            "ACCOUNT_DEPOSIT_LOCKED",
            "ACCOUNT_WITHDRAWAL_LOCKED",
            "ACCOUNT_ORDER_CANCEL_LOCKED",
            "INSTRUMENT_NOT_TRADEABLE",
            "PENDING_ORDERS_ALLOWED_EXCEEDED",
            "ORDER_ID_UNSPECIFIED",
            "ORDER_DOESNT_EXIST",
            "ORDER_IDENTIFIER_INCONSISTENCY",
            "TRADE_ID_UNSPECIFIED",
            "TRADE_DOESNT_EXIST",
            "TRADE_IDENTIFIER_INCONSISTENCY",
            "INSUFFICIENT_MARGIN",
            "INSTRUMENT_MISSING",
            "INSTRUMENT_UNKNOWN",
            "UNITS_MISSING",
            "UNITS_INVALID",
            "UNITS_PRECISION_EXCEEDED",
            "UNITS_LIMIT_EXCEEDED",
            "UNITS_MIMIMUM_NOT_MET",
            "PRICE_MISSING",
            "PRICE_INVALID",
            "PRICE_PRECISION_EXCEEDED",
            "PRICE_DISTANCE_MISSING",
            "PRICE_DISTANCE_INVALID",
            "PRICE_DISTANCE_PRECISION_EXCEEDED",
            "PRICE_DISTANCE_MAXIMUM_EXCEEDED",
            "PRICE_DISTANCE_MINIMUM_NOT_MET",
            "TIME_IN_FORCE_MISSING",
            "TIME_IN_FORCE_INVALID",
            "TIME_IN_FORCE_GTD_TIMESTAMP_MISSING",
            "TIME_IN_FORCE_GTD_TIMESTAMP_IN_PAST",
            "PRICE_BOUND_INVALID",
            "PRICE_BOUND_PRECISION_EXCEEDED",
            "ORDERS_ON_FILL_DUPLICATE_CLIENT_ORDER_IDS",
            "TRADE_ON_FILL_CLIENT_EXTENSIONS_NOT_SUPPORTED",
            "CLIENT_ORDER_ID_INVALID",
            "CLIENT_ORDER_ID_ALREADY_EXISTS",
            "CLIENT_ORDER_TAG_INVALID",
            "CLIENT_ORDER_COMMENT_INVALID",
            "CLIENT_TRADE_ID_INVALID",
            "CLIENT_TRADE_ID_ALREADY_EXISTS",
            "CLIENT_TRADE_TAG_INVALID",
            "CLIENT_TRADE_COMMENT_INVALID",
            "ORDER_FILL_POSITION_ACTION_MISSING",
            "ORDER_FILL_POSITION_ACTION_INVALID",
            "TRIGGER_CONDITION_MISSING",
            "TRIGGER_CONDITION_INVALID",
            "ORDER_PARTIAL_FILL_OPTION_MISSING",
            "ORDER_PARTIAL_FILL_OPTION_INVALID",
            "INVALID_REISSUE_IMMEDIATE_PARTIAL_FILL",
            "TAKE_PROFIT_ORDER_ALREADY_EXISTS",
            "TAKE_PROFIT_ON_FILL_PRICE_MISSING",
            "TAKE_PROFIT_ON_FILL_PRICE_INVALID",
            "TAKE_PROFIT_ON_FILL_PRICE_PRECISION_EXCEEDED",
            "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_MISSING",
            "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_INVALID",
            "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_MISSING",
            "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_IN_PAST",
            "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_ID_INVALID",
            "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_TAG_INVALID",
            "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_COMMENT_INVALID",
            "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_MISSING",
            "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_INVALID",
            "STOP_LOSS_ORDER_ALREADY_EXISTS",
            "STOP_LOSS_ORDER_GUARANTEED_REQUIRED",
            "STOP_LOSS_ORDER_GUARANTEED_PRICE_WITHIN_SPREAD",
            "STOP_LOSS_ORDER_GUARANTEED_NOT_ALLOWED",
            "STOP_LOSS_ORDER_GUARANTEED_HALTED_CREATE_VIOLATION",
            "STOP_LOSS_ORDER_GUARANTEED_HALTED_TIGHTEN_VIOLATION",
            "STOP_LOSS_ORDER_GUARANTEED_HEDGING_NOT_ALLOWED",
            "STOP_LOSS_ORDER_GUARANTEED_MINIMUM_DISTANCE_NOT_MET",
            "STOP_LOSS_ORDER_NOT_CANCELABLE",
            "STOP_LOSS_ORDER_NOT_REPLACEABLE",
            "STOP_LOSS_ORDER_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED",
            "STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_SPECIFIED",
            "STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_MISSING",
            "STOP_LOSS_ON_FILL_REQUIRED_FOR_PENDING_ORDER",
            "STOP_LOSS_ON_FILL_GUARANTEED_NOT_ALLOWED",
            "STOP_LOSS_ON_FILL_GUARANTEED_REQUIRED",
            "STOP_LOSS_ON_FILL_PRICE_MISSING",
            "STOP_LOSS_ON_FILL_PRICE_INVALID",
            "STOP_LOSS_ON_FILL_PRICE_PRECISION_EXCEEDED",
            "STOP_LOSS_ON_FILL_GUARANTEED_MINIMUM_DISTANCE_NOT_MET",
            "STOP_LOSS_ON_FILL_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED",
            "STOP_LOSS_ON_FILL_DISTANCE_INVALID",
            "STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED",
            "STOP_LOSS_ON_FILL_DISTANCE_PRECISION_EXCEEDED",
            "STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_SPECIFIED",
            "STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_MISSING",
            "STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING",
            "STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID",
            "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING",
            "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST",
            "STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID",
            "STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID",
            "STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID",
            "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING",
            "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID",
            "TRAILING_STOP_LOSS_ORDER_ALREADY_EXISTS",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_PRECISION_EXCEEDED",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MINIMUM_NOT_MET",
            "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST",
            "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID",
            "TRAILING_STOP_LOSS_ORDERS_NOT_SUPPORTED",
            "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID",
            "CLOSE_TRADE_TYPE_MISSING",
            "CLOSE_TRADE_PARTIAL_UNITS_MISSING",
            "CLOSE_TRADE_UNITS_EXCEED_TRADE_SIZE",
            "CLOSEOUT_POSITION_DOESNT_EXIST",
            "CLOSEOUT_POSITION_INCOMPLETE_SPECIFICATION",
            "CLOSEOUT_POSITION_UNITS_EXCEED_POSITION_SIZE",
            "CLOSEOUT_POSITION_REJECT",
            "CLOSEOUT_POSITION_PARTIAL_UNITS_MISSING",
            "MARKUP_GROUP_ID_INVALID",
            "POSITION_AGGREGATION_MODE_INVALID",
            "ADMIN_CONFIGURE_DATA_MISSING",
            "MARGIN_RATE_INVALID",
            "MARGIN_RATE_WOULD_TRIGGER_CLOSEOUT",
            "ALIAS_INVALID",
            "CLIENT_CONFIGURE_DATA_MISSING",
            "MARGIN_RATE_WOULD_TRIGGER_MARGIN_CALL",
            "AMOUNT_INVALID",
            "INSUFFICIENT_FUNDS",
            "AMOUNT_MISSING",
            "FUNDING_REASON_MISSING",
            "CLIENT_EXTENSIONS_DATA_MISSING",
            "REPLACING_ORDER_INVALID",
            "REPLACING_TRADE_ID_INVALID"
          ]
        }
      }
    },
    "FixedPriceOrderTransaction": {
      "type": "object",
      "description": "A FixedPriceOrderTransaction represents the creation of a Fixed Price Order in the user's account. A Fixed Price Order is an Order that is filled immediately at a specified price.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Transaction's Identifier.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "time": {
          "type": "string",
          "description": "The date/time when the Transaction was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "userID": {
          "type": "integer",
          "description": "The ID of the user that initiated the creation of the Transaction."
        },
        "accountID": {
          "type": "string",
          "description": "The ID of the Account the Transaction was created for.",
          "format": "\"-\"-delimited string with format \"{siteID}-{divisionID}-{userID}-{accountNumber}\""
        },
        "batchID": {
          "type": "string",
          "description": "The ID of the \"batch\" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "requestID": {
          "type": "string",
          "description": "The Request ID of the request which generated the transaction."
        },
        "type": {
          "type": "string",
          "description": "The Type of the Transaction. Always set to \"FIXED_PRICE_ORDER\" in a FixedPriceOrderTransaction.",
          "enum": [
            "CREATE",
            "CLOSE",
            "REOPEN",
            "CLIENT_CONFIGURE",
            "CLIENT_CONFIGURE_REJECT",
            "TRANSFER_FUNDS",
            "TRANSFER_FUNDS_REJECT",
            "MARKET_ORDER",
            "MARKET_ORDER_REJECT",
            "FIXED_PRICE_ORDER",
            "LIMIT_ORDER",
            "LIMIT_ORDER_REJECT",
            "STOP_ORDER",
            "STOP_ORDER_REJECT",
            "MARKET_IF_TOUCHED_ORDER",
            "MARKET_IF_TOUCHED_ORDER_REJECT",
            "TAKE_PROFIT_ORDER",
            "TAKE_PROFIT_ORDER_REJECT",
            "STOP_LOSS_ORDER",
            "STOP_LOSS_ORDER_REJECT",
            "TRAILING_STOP_LOSS_ORDER",
            "TRAILING_STOP_LOSS_ORDER_REJECT",
            "ORDER_FILL",
            "ORDER_CANCEL",
            "ORDER_CANCEL_REJECT",
            "ORDER_CLIENT_EXTENSIONS_MODIFY",
            "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "TRADE_CLIENT_EXTENSIONS_MODIFY",
            "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "MARGIN_CALL_ENTER",
            "MARGIN_CALL_EXTEND",
            "MARGIN_CALL_EXIT",
            "DELAYED_TRADE_CLOSURE",
            "DAILY_FINANCING",
            "RESET_RESETTABLE_PL"
          ]
        },
        "instrument": {
          "type": "string",
          "description": "The Fixed Price Order's Instrument.",
          "format": "A string containing the base currency and quote currency delimited by a \"_\"."
        },
        "units": {
          "type": "string",
          "description": "The quantity requested to be filled by the Fixed Price Order. A posititive number of units results in a long Order, and a negative number of units results in a short Order.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "price": {
          "type": "string",
          "description": "The price specified for the Fixed Price Order. This price is the exact price that the Fixed Price Order will be filled at.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "positionFill": {
          "type": "string",
          "description": "Specification of how Positions in the Account are modified when the Order is filled.",
          "enum": [
            "OPEN_ONLY",
            "REDUCE_FIRST",
            "REDUCE_ONLY",
            "DEFAULT"
          ]
        },
        "tradeState": {
          "type": "string",
          "description": "The state that the trade resulting from the Fixed Price Order should be set to."
        },
        "reason": {
          "type": "string",
          "description": "The reason that the Fixed Price Order was created",
          "enum": [
            "PLATFORM_ACCOUNT_MIGRATION"
          ]
        },
        "clientExtensions": {
          "$ref": "#/definitions/ClientExtensions"
        },
        "takeProfitOnFill": {
          "$ref": "v20_transaction.json#/definitions/TakeProfitDetails"
        },
        "stopLossOnFill": {
          "$ref": "v20_transaction.json#/definitions/StopLossDetails"
        },
        "trailingStopLossOnFill": {
          "$ref": "v20_transaction.json#/definitions/TrailingStopLossDetails"
        },
        "tradeClientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        }
      }
    },
    "LimitOrderReason": {
      "type": "string",
      "description": "The reason that the Limit Order was initiated",
      "enum": [
        "CLIENT_ORDER",
        "REPLACEMENT"
      ]
    },
    "LimitOrderTransaction": {
      "type": "object",
      "description": "A LimitOrderTransaction represents the creation of a Limit Order in the user's Account.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Transaction's Identifier.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "time": {
          "type": "string",
          "description": "The date/time when the Transaction was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "userID": {
          "type": "integer",
          "description": "The ID of the user that initiated the creation of the Transaction."
        },
        "accountID": {
          "type": "string",
          "description": "The ID of the Account the Transaction was created for.",
          "format": "\"-\"-delimited string with format \"{siteID}-{divisionID}-{userID}-{accountNumber}\""
        },
        "batchID": {
          "type": "string",
          "description": "The ID of the \"batch\" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "requestID": {
          "type": "string",
          "description": "The Request ID of the request which generated the transaction."
        },
        "type": {
          "type": "string",
          "description": "The Type of the Transaction. Always set to \"LIMIT_ORDER\" in a LimitOrderTransaction.",
          "enum": [
            "CREATE",
            "CLOSE",
            "REOPEN",
            "CLIENT_CONFIGURE",
            "CLIENT_CONFIGURE_REJECT",
            "TRANSFER_FUNDS",
            "TRANSFER_FUNDS_REJECT",
            "MARKET_ORDER",
            "MARKET_ORDER_REJECT",
            "FIXED_PRICE_ORDER",
            "LIMIT_ORDER",
            "LIMIT_ORDER_REJECT",
            "STOP_ORDER",
            "STOP_ORDER_REJECT",
            "MARKET_IF_TOUCHED_ORDER",
            "MARKET_IF_TOUCHED_ORDER_REJECT",
            "TAKE_PROFIT_ORDER",
            "TAKE_PROFIT_ORDER_REJECT",
            "STOP_LOSS_ORDER",
            "STOP_LOSS_ORDER_REJECT",
            "TRAILING_STOP_LOSS_ORDER",
            "TRAILING_STOP_LOSS_ORDER_REJECT",
            "ORDER_FILL",
            "ORDER_CANCEL",
            "ORDER_CANCEL_REJECT",
            "ORDER_CLIENT_EXTENSIONS_MODIFY",
            "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "TRADE_CLIENT_EXTENSIONS_MODIFY",
            "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "MARGIN_CALL_ENTER",
            "MARGIN_CALL_EXTEND",
            "MARGIN_CALL_EXIT",
            "DELAYED_TRADE_CLOSURE",
            "DAILY_FINANCING",
            "RESET_RESETTABLE_PL"
          ]
        },
        "instrument": {
          "type": "string",
          "description": "The Limit Order's Instrument.",
          "format": "A string containing the base currency and quote currency delimited by a \"_\"."
        },
        "units": {
          "type": "string",
          "description": "The quantity requested to be filled by the Limit Order. A posititive number of units results in a long Order, and a negative number of units results in a short Order.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "price": {
          "type": "string",
          "description": "The price threshold specified for the Limit Order. The Limit Order will only be filled by a market price that is equal to or better than this price.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "timeInForce": {
          "type": "string",
          "description": "The time-in-force requested for the Limit Order.",
          "enum": [
            "GTC",
            "GTD",
            "GFD",
            "FOK",
            "IOC"
          ]
        },
        "gtdTime": {
          "type": "string",
          "description": "The date/time when the Limit Order will be cancelled if its timeInForce is \"GTD\".",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "positionFill": {
          "type": "string",
          "description": "Specification of how Positions in the Account are modified when the Order is filled.",
          "enum": [
            "OPEN_ONLY",
            "REDUCE_FIRST",
            "REDUCE_ONLY",
            "DEFAULT"
          ]
        },
        "triggerCondition": {
          "type": "string",
          "description": "Specification of which price component should be used when determining if an Order should be triggered and filled. This allows Orders to be triggered based on the bid, ask, mid, default (ask for buy, bid for sell) or inverse (ask for sell, bid for buy) price depending on the desired behaviour. Orders are always filled using their default price component.\nThis feature is only provided through the REST API. Clients who choose to specify a non-default trigger condition will not see it reflected in any of OANDA's proprietary or partner trading platforms, their transaction history or their account statements. OANDA platforms always assume that an Order's trigger condition is set to the default value when indicating the distance from an Order's trigger price, and will always provide the default trigger condition when creating or modifying an Order.\nA special restriction applies when creating a guaranteed Stop Loss Order. In this case the TriggerCondition value must either be \"DEFAULT\", or the \"natural\" trigger side \"DEFAULT\" results in. So for a Stop Loss Order for a long trade valid values are \"DEFAULT\" and \"BID\", and for short trades \"DEFAULT\" and \"ASK\" are valid.",
          "enum": [
            "DEFAULT",
            "INVERSE",
            "BID",
            "ASK",
            "MID"
          ]
        },
        "reason": {
          "type": "string",
          "description": "The reason that the Limit Order was initiated",
          "enum": [
            "CLIENT_ORDER",
            "REPLACEMENT"
          ]
        },
        "clientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "takeProfitOnFill": {
          "$ref": "v20_transaction.json#/definitions/TakeProfitDetails"
        },
        "stopLossOnFill": {
          "$ref": "v20_transaction.json#/definitions/StopLossDetails"
        },
        "trailingStopLossOnFill": {
          "$ref": "v20_transaction.json#/definitions/TrailingStopLossDetails"
        },
        "tradeClientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "replacesOrderID": {
          "type": "string",
          "description": "The ID of the Order that this Order replaces (only provided if this Order replaces an existing Order).",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        },
        "cancellingTransactionID": {
          "type": "string",
          "description": "The ID of the Transaction that cancels the replaced Order (only provided if this Order replaces an existing Order).",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        }
      }
    },
    "LimitOrderRejectTransaction": {
      "type": "object",
      "description": "A LimitOrderRejectTransaction represents the rejection of the creation of a Limit Order.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Transaction's Identifier.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "time": {
          "type": "string",
          "description": "The date/time when the Transaction was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "userID": {
          "type": "integer",
          "description": "The ID of the user that initiated the creation of the Transaction."
        },
        "accountID": {
          "type": "string",
          "description": "The ID of the Account the Transaction was created for.",
          "format": "\"-\"-delimited string with format \"{siteID}-{divisionID}-{userID}-{accountNumber}\""
        },
        "batchID": {
          "type": "string",
          "description": "The ID of the \"batch\" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "requestID": {
          "type": "string",
          "description": "The Request ID of the request which generated the transaction."
        },
        "type": {
          "type": "string",
          "description": "The Type of the Transaction. Always set to \"LIMIT_ORDER_REJECT\" in a LimitOrderRejectTransaction.",
          "enum": [
            "CREATE",
            "CLOSE",
            "REOPEN",
            "CLIENT_CONFIGURE",
            "CLIENT_CONFIGURE_REJECT",
            "TRANSFER_FUNDS",
            "TRANSFER_FUNDS_REJECT",
            "MARKET_ORDER",
            "MARKET_ORDER_REJECT",
            "FIXED_PRICE_ORDER",
            "LIMIT_ORDER",
            "LIMIT_ORDER_REJECT",
            "STOP_ORDER",
            "STOP_ORDER_REJECT",
            "MARKET_IF_TOUCHED_ORDER",
            "MARKET_IF_TOUCHED_ORDER_REJECT",
            "TAKE_PROFIT_ORDER",
            "TAKE_PROFIT_ORDER_REJECT",
            "STOP_LOSS_ORDER",
            "STOP_LOSS_ORDER_REJECT",
            "TRAILING_STOP_LOSS_ORDER",
            "TRAILING_STOP_LOSS_ORDER_REJECT",
            "ORDER_FILL",
            "ORDER_CANCEL",
            "ORDER_CANCEL_REJECT",
            "ORDER_CLIENT_EXTENSIONS_MODIFY",
            "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "TRADE_CLIENT_EXTENSIONS_MODIFY",
            "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "MARGIN_CALL_ENTER",
            "MARGIN_CALL_EXTEND",
            "MARGIN_CALL_EXIT",
            "DELAYED_TRADE_CLOSURE",
            "DAILY_FINANCING",
            "RESET_RESETTABLE_PL"
          ]
        },
        "instrument": {
          "type": "string",
          "description": "The Limit Order's Instrument.",
          "format": "A string containing the base currency and quote currency delimited by a \"_\"."
        },
        "units": {
          "type": "string",
          "description": "The quantity requested to be filled by the Limit Order. A posititive number of units results in a long Order, and a negative number of units results in a short Order.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "price": {
          "type": "string",
          "description": "The price threshold specified for the Limit Order. The Limit Order will only be filled by a market price that is equal to or better than this price.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "timeInForce": {
          "type": "string",
          "description": "The time-in-force requested for the Limit Order.",
          "enum": [
            "GTC",
            "GTD",
            "GFD",
            "FOK",
            "IOC"
          ]
        },
        "gtdTime": {
          "type": "string",
          "description": "The date/time when the Limit Order will be cancelled if its timeInForce is \"GTD\".",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "positionFill": {
          "type": "string",
          "description": "Specification of how Positions in the Account are modified when the Order is filled.",
          "enum": [
            "OPEN_ONLY",
            "REDUCE_FIRST",
            "REDUCE_ONLY",
            "DEFAULT"
          ]
        },
        "triggerCondition": {
          "type": "string",
          "description": "Specification of which price component should be used when determining if an Order should be triggered and filled. This allows Orders to be triggered based on the bid, ask, mid, default (ask for buy, bid for sell) or inverse (ask for sell, bid for buy) price depending on the desired behaviour. Orders are always filled using their default price component.\nThis feature is only provided through the REST API. Clients who choose to specify a non-default trigger condition will not see it reflected in any of OANDA's proprietary or partner trading platforms, their transaction history or their account statements. OANDA platforms always assume that an Order's trigger condition is set to the default value when indicating the distance from an Order's trigger price, and will always provide the default trigger condition when creating or modifying an Order.\nA special restriction applies when creating a guaranteed Stop Loss Order. In this case the TriggerCondition value must either be \"DEFAULT\", or the \"natural\" trigger side \"DEFAULT\" results in. So for a Stop Loss Order for a long trade valid values are \"DEFAULT\" and \"BID\", and for short trades \"DEFAULT\" and \"ASK\" are valid.",
          "enum": [
            "DEFAULT",
            "INVERSE",
            "BID",
            "ASK",
            "MID"
          ]
        },
        "reason": {
          "type": "string",
          "description": "The reason that the Limit Order was initiated",
          "enum": [
            "CLIENT_ORDER",
            "REPLACEMENT"
          ]
        },
        "clientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "takeProfitOnFill": {
          "$ref": "v20_transaction.json#/definitions/TakeProfitDetails"
        },
        "stopLossOnFill": {
          "$ref": "v20_transaction.json#/definitions/StopLossDetails"
        },
        "trailingStopLossOnFill": {
          "$ref": "v20_transaction.json#/definitions/TrailingStopLossDetails"
        },
        "tradeClientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "intendedReplacesOrderID": {
          "type": "string",
          "description": "The ID of the Order that this Order was intended to replace (only provided if this Order was intended to replace an existing Order).",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        },
        "rejectReason": {
          "type": "string",
          "description": "The reason that the Reject Transaction was created",
          "enum": [
            "INTERNAL_SERVER_ERROR",
            "INSTRUMENT_PRICE_UNKNOWN",
            "ACCOUNT_NOT_ACTIVE",
            "ACCOUNT_LOCKED",
            "ACCOUNT_ORDER_CREATION_LOCKED",
            "ACCOUNT_CONFIGURATION_LOCKED",
            "ACCOUNT_DEPOSIT_LOCKED",
            "ACCOUNT_WITHDRAWAL_LOCKED",
            "ACCOUNT_ORDER_CANCEL_LOCKED",
            "INSTRUMENT_NOT_TRADEABLE",
            "PENDING_ORDERS_ALLOWED_EXCEEDED",
            "ORDER_ID_UNSPECIFIED",
            "ORDER_DOESNT_EXIST",
            "ORDER_IDENTIFIER_INCONSISTENCY",
            "TRADE_ID_UNSPECIFIED",
            "TRADE_DOESNT_EXIST",
            "TRADE_IDENTIFIER_INCONSISTENCY",
            "INSUFFICIENT_MARGIN",
            "INSTRUMENT_MISSING",
            "INSTRUMENT_UNKNOWN",
            "UNITS_MISSING",
            "UNITS_INVALID",
            "UNITS_PRECISION_EXCEEDED",
            "UNITS_LIMIT_EXCEEDED",
            "UNITS_MIMIMUM_NOT_MET",
            "PRICE_MISSING",
            "PRICE_INVALID",
            "PRICE_PRECISION_EXCEEDED",
            "PRICE_DISTANCE_MISSING",
            "PRICE_DISTANCE_INVALID",
            "PRICE_DISTANCE_PRECISION_EXCEEDED",
            "PRICE_DISTANCE_MAXIMUM_EXCEEDED",
            "PRICE_DISTANCE_MINIMUM_NOT_MET",
            "TIME_IN_FORCE_MISSING",
            "TIME_IN_FORCE_INVALID",
            "TIME_IN_FORCE_GTD_TIMESTAMP_MISSING",
            "TIME_IN_FORCE_GTD_TIMESTAMP_IN_PAST",
            "PRICE_BOUND_INVALID",
            "PRICE_BOUND_PRECISION_EXCEEDED",
            "ORDERS_ON_FILL_DUPLICATE_CLIENT_ORDER_IDS",
            "TRADE_ON_FILL_CLIENT_EXTENSIONS_NOT_SUPPORTED",
            "CLIENT_ORDER_ID_INVALID",
            "CLIENT_ORDER_ID_ALREADY_EXISTS",
            "CLIENT_ORDER_TAG_INVALID",
            "CLIENT_ORDER_COMMENT_INVALID",
            "CLIENT_TRADE_ID_INVALID",
            "CLIENT_TRADE_ID_ALREADY_EXISTS",
            "CLIENT_TRADE_TAG_INVALID",
            "CLIENT_TRADE_COMMENT_INVALID",
            "ORDER_FILL_POSITION_ACTION_MISSING",
            "ORDER_FILL_POSITION_ACTION_INVALID",
            "TRIGGER_CONDITION_MISSING",
            "TRIGGER_CONDITION_INVALID",
            "ORDER_PARTIAL_FILL_OPTION_MISSING",
            "ORDER_PARTIAL_FILL_OPTION_INVALID",
            "INVALID_REISSUE_IMMEDIATE_PARTIAL_FILL",
            "TAKE_PROFIT_ORDER_ALREADY_EXISTS",
            "TAKE_PROFIT_ON_FILL_PRICE_MISSING",
            "TAKE_PROFIT_ON_FILL_PRICE_INVALID",
            "TAKE_PROFIT_ON_FILL_PRICE_PRECISION_EXCEEDED",
            "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_MISSING",
            "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_INVALID",
            "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_MISSING",
            "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_IN_PAST",
            "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_ID_INVALID",
            "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_TAG_INVALID",
            "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_COMMENT_INVALID",
            "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_MISSING",
            "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_INVALID",
            "STOP_LOSS_ORDER_ALREADY_EXISTS",
            "STOP_LOSS_ORDER_GUARANTEED_REQUIRED",
            "STOP_LOSS_ORDER_GUARANTEED_PRICE_WITHIN_SPREAD",
            "STOP_LOSS_ORDER_GUARANTEED_NOT_ALLOWED",
            "STOP_LOSS_ORDER_GUARANTEED_HALTED_CREATE_VIOLATION",
            "STOP_LOSS_ORDER_GUARANTEED_HALTED_TIGHTEN_VIOLATION",
            "STOP_LOSS_ORDER_GUARANTEED_HEDGING_NOT_ALLOWED",
            "STOP_LOSS_ORDER_GUARANTEED_MINIMUM_DISTANCE_NOT_MET",
            "STOP_LOSS_ORDER_NOT_CANCELABLE",
            "STOP_LOSS_ORDER_NOT_REPLACEABLE",
            "STOP_LOSS_ORDER_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED",
            "STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_SPECIFIED",
            "STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_MISSING",
            "STOP_LOSS_ON_FILL_REQUIRED_FOR_PENDING_ORDER",
            "STOP_LOSS_ON_FILL_GUARANTEED_NOT_ALLOWED",
            "STOP_LOSS_ON_FILL_GUARANTEED_REQUIRED",
            "STOP_LOSS_ON_FILL_PRICE_MISSING",
            "STOP_LOSS_ON_FILL_PRICE_INVALID",
            "STOP_LOSS_ON_FILL_PRICE_PRECISION_EXCEEDED",
            "STOP_LOSS_ON_FILL_GUARANTEED_MINIMUM_DISTANCE_NOT_MET",
            "STOP_LOSS_ON_FILL_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED",
            "STOP_LOSS_ON_FILL_DISTANCE_INVALID",
            "STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED",
            "STOP_LOSS_ON_FILL_DISTANCE_PRECISION_EXCEEDED",
            "STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_SPECIFIED",
            "STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_MISSING",
            "STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING",
            "STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID",
            "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING",
            "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST",
            "STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID",
            "STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID",
            "STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID",
            "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING",
            "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID",
            "TRAILING_STOP_LOSS_ORDER_ALREADY_EXISTS",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_PRECISION_EXCEEDED",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MINIMUM_NOT_MET",
            "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST",
            "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID",
            "TRAILING_STOP_LOSS_ORDERS_NOT_SUPPORTED",
            "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID",
            "CLOSE_TRADE_TYPE_MISSING",
            "CLOSE_TRADE_PARTIAL_UNITS_MISSING",
            "CLOSE_TRADE_UNITS_EXCEED_TRADE_SIZE",
            "CLOSEOUT_POSITION_DOESNT_EXIST",
            "CLOSEOUT_POSITION_INCOMPLETE_SPECIFICATION",
            "CLOSEOUT_POSITION_UNITS_EXCEED_POSITION_SIZE",
            "CLOSEOUT_POSITION_REJECT",
            "CLOSEOUT_POSITION_PARTIAL_UNITS_MISSING",
            "MARKUP_GROUP_ID_INVALID",
            "POSITION_AGGREGATION_MODE_INVALID",
            "ADMIN_CONFIGURE_DATA_MISSING",
            "MARGIN_RATE_INVALID",
            "MARGIN_RATE_WOULD_TRIGGER_CLOSEOUT",
            "ALIAS_INVALID",
            "CLIENT_CONFIGURE_DATA_MISSING",
            "MARGIN_RATE_WOULD_TRIGGER_MARGIN_CALL",
            "AMOUNT_INVALID",
            "INSUFFICIENT_FUNDS",
            "AMOUNT_MISSING",
            "FUNDING_REASON_MISSING",
            "CLIENT_EXTENSIONS_DATA_MISSING",
            "REPLACING_ORDER_INVALID",
            "REPLACING_TRADE_ID_INVALID"
          ]
        }
      }
    },
    "StopOrderReason": {
      "type": "string",
      "description": "The reason that the Stop Order was initiated",
      "enum": [
        "CLIENT_ORDER",
        "REPLACEMENT"
      ]
    },
    "StopOrderTransaction": {
      "type": "object",
      "description": "A StopOrderTransaction represents the creation of a Stop Order in the user's Account.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Transaction's Identifier.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "time": {
          "type": "string",
          "description": "The date/time when the Transaction was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "userID": {
          "type": "integer",
          "description": "The ID of the user that initiated the creation of the Transaction."
        },
        "accountID": {
          "type": "string",
          "description": "The ID of the Account the Transaction was created for.",
          "format": "\"-\"-delimited string with format \"{siteID}-{divisionID}-{userID}-{accountNumber}\""
        },
        "batchID": {
          "type": "string",
          "description": "The ID of the \"batch\" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "requestID": {
          "type": "string",
          "description": "The Request ID of the request which generated the transaction."
        },
        "type": {
          "type": "string",
          "description": "The Type of the Transaction. Always set to \"STOP_ORDER\" in a StopOrderTransaction.",
          "enum": [
            "CREATE",
            "CLOSE",
            "REOPEN",
            "CLIENT_CONFIGURE",
            "CLIENT_CONFIGURE_REJECT",
            "TRANSFER_FUNDS",
            "TRANSFER_FUNDS_REJECT",
            "MARKET_ORDER",
            "MARKET_ORDER_REJECT",
            "FIXED_PRICE_ORDER",
            "LIMIT_ORDER",
            "LIMIT_ORDER_REJECT",
            "STOP_ORDER",
            "STOP_ORDER_REJECT",
            "MARKET_IF_TOUCHED_ORDER",
            "MARKET_IF_TOUCHED_ORDER_REJECT",
            "TAKE_PROFIT_ORDER",
            "TAKE_PROFIT_ORDER_REJECT",
            "STOP_LOSS_ORDER",
            "STOP_LOSS_ORDER_REJECT",
            "TRAILING_STOP_LOSS_ORDER",
            "TRAILING_STOP_LOSS_ORDER_REJECT",
            "ORDER_FILL",
            "ORDER_CANCEL",
            "ORDER_CANCEL_REJECT",
            "ORDER_CLIENT_EXTENSIONS_MODIFY",
            "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "TRADE_CLIENT_EXTENSIONS_MODIFY",
            "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "MARGIN_CALL_ENTER",
            "MARGIN_CALL_EXTEND",
            "MARGIN_CALL_EXIT",
            "DELAYED_TRADE_CLOSURE",
            "DAILY_FINANCING",
            "RESET_RESETTABLE_PL"
          ]
        },
        "instrument": {
          "type": "string",
          "description": "The Stop Order's Instrument.",
          "format": "A string containing the base currency and quote currency delimited by a \"_\"."
        },
        "units": {
          "type": "string",
          "description": "The quantity requested to be filled by the Stop Order. A posititive number of units results in a long Order, and a negative number of units results in a short Order.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "price": {
          "type": "string",
          "description": "The price threshold specified for the Stop Order. The Stop Order will only be filled by a market price that is equal to or worse than this price.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "priceBound": {
          "type": "string",
          "description": "The worst market price that may be used to fill this Stop Order. If the market gaps and crosses through both the price and the priceBound, the Stop Order will be cancelled instead of being filled.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "timeInForce": {
          "type": "string",
          "description": "The time-in-force requested for the Stop Order.",
          "enum": [
            "GTC",
            "GTD",
            "GFD",
            "FOK",
            "IOC"
          ]
        },
        "gtdTime": {
          "type": "string",
          "description": "The date/time when the Stop Order will be cancelled if its timeInForce is \"GTD\".",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "positionFill": {
          "type": "string",
          "description": "Specification of how Positions in the Account are modified when the Order is filled.",
          "enum": [
            "OPEN_ONLY",
            "REDUCE_FIRST",
            "REDUCE_ONLY",
            "DEFAULT"
          ]
        },
        "triggerCondition": {
          "type": "string",
          "description": "Specification of which price component should be used when determining if an Order should be triggered and filled. This allows Orders to be triggered based on the bid, ask, mid, default (ask for buy, bid for sell) or inverse (ask for sell, bid for buy) price depending on the desired behaviour. Orders are always filled using their default price component.\nThis feature is only provided through the REST API. Clients who choose to specify a non-default trigger condition will not see it reflected in any of OANDA's proprietary or partner trading platforms, their transaction history or their account statements. OANDA platforms always assume that an Order's trigger condition is set to the default value when indicating the distance from an Order's trigger price, and will always provide the default trigger condition when creating or modifying an Order.\nA special restriction applies when creating a guaranteed Stop Loss Order. In this case the TriggerCondition value must either be \"DEFAULT\", or the \"natural\" trigger side \"DEFAULT\" results in. So for a Stop Loss Order for a long trade valid values are \"DEFAULT\" and \"BID\", and for short trades \"DEFAULT\" and \"ASK\" are valid.",
          "enum": [
            "DEFAULT",
            "INVERSE",
            "BID",
            "ASK",
            "MID"
          ]
        },
        "reason": {
          "type": "string",
          "description": "The reason that the Stop Order was initiated",
          "enum": [
            "CLIENT_ORDER",
            "REPLACEMENT"
          ]
        },
        "clientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "takeProfitOnFill": {
          "$ref": "v20_transaction.json#/definitions/TakeProfitDetails"
        },
        "stopLossOnFill": {
          "$ref": "v20_transaction.json#/definitions/StopLossDetails"
        },
        "trailingStopLossOnFill": {
          "$ref": "v20_transaction.json#/definitions/TrailingStopLossDetails"
        },
        "tradeClientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "replacesOrderID": {
          "type": "string",
          "description": "The ID of the Order that this Order replaces (only provided if this Order replaces an existing Order).",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        },
        "cancellingTransactionID": {
          "type": "string",
          "description": "The ID of the Transaction that cancels the replaced Order (only provided if this Order replaces an existing Order).",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        }
      }
    },
    "StopOrderRejectTransaction": {
      "type": "object",
      "description": "A StopOrderRejectTransaction represents the rejection of the creation of a Stop Order.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Transaction's Identifier.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "time": {
          "type": "string",
          "description": "The date/time when the Transaction was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "userID": {
          "type": "integer",
          "description": "The ID of the user that initiated the creation of the Transaction."
        },
        "accountID": {
          "type": "string",
          "description": "The ID of the Account the Transaction was created for.",
          "format": "\"-\"-delimited string with format \"{siteID}-{divisionID}-{userID}-{accountNumber}\""
        },
        "batchID": {
          "type": "string",
          "description": "The ID of the \"batch\" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "requestID": {
          "type": "string",
          "description": "The Request ID of the request which generated the transaction."
        },
        "type": {
          "type": "string",
          "description": "The Type of the Transaction. Always set to \"STOP_ORDER_REJECT\" in a StopOrderRejectTransaction.",
          "enum": [
            "CREATE",
            "CLOSE",
            "REOPEN",
            "CLIENT_CONFIGURE",
            "CLIENT_CONFIGURE_REJECT",
            "TRANSFER_FUNDS",
            "TRANSFER_FUNDS_REJECT",
            "MARKET_ORDER",
            "MARKET_ORDER_REJECT",
            "FIXED_PRICE_ORDER",
            "LIMIT_ORDER",
            "LIMIT_ORDER_REJECT",
            "STOP_ORDER",
            "STOP_ORDER_REJECT",
            "MARKET_IF_TOUCHED_ORDER",
            "MARKET_IF_TOUCHED_ORDER_REJECT",
            "TAKE_PROFIT_ORDER",
            "TAKE_PROFIT_ORDER_REJECT",
            "STOP_LOSS_ORDER",
            "STOP_LOSS_ORDER_REJECT",
            "TRAILING_STOP_LOSS_ORDER",
            "TRAILING_STOP_LOSS_ORDER_REJECT",
            "ORDER_FILL",
            "ORDER_CANCEL",
            "ORDER_CANCEL_REJECT",
            "ORDER_CLIENT_EXTENSIONS_MODIFY",
            "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "TRADE_CLIENT_EXTENSIONS_MODIFY",
            "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "MARGIN_CALL_ENTER",
            "MARGIN_CALL_EXTEND",
            "MARGIN_CALL_EXIT",
            "DELAYED_TRADE_CLOSURE",
            "DAILY_FINANCING",
            "RESET_RESETTABLE_PL"
          ]
        },
        "instrument": {
          "type": "string",
          "description": "The Stop Order's Instrument.",
          "format": "A string containing the base currency and quote currency delimited by a \"_\"."
        },
        "units": {
          "type": "string",
          "description": "The quantity requested to be filled by the Stop Order. A posititive number of units results in a long Order, and a negative number of units results in a short Order.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "price": {
          "type": "string",
          "description": "The price threshold specified for the Stop Order. The Stop Order will only be filled by a market price that is equal to or worse than this price.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "priceBound": {
          "type": "string",
          "description": "The worst market price that may be used to fill this Stop Order. If the market gaps and crosses through both the price and the priceBound, the Stop Order will be cancelled instead of being filled.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "timeInForce": {
          "type": "string",
          "description": "The time-in-force requested for the Stop Order.",
          "enum": [
            "GTC",
            "GTD",
            "GFD",
            "FOK",
            "IOC"
          ]
        },
        "gtdTime": {
          "type": "string",
          "description": "The date/time when the Stop Order will be cancelled if its timeInForce is \"GTD\".",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "positionFill": {
          "type": "string",
          "description": "Specification of how Positions in the Account are modified when the Order is filled.",
          "enum": [
            "OPEN_ONLY",
            "REDUCE_FIRST",
            "REDUCE_ONLY",
            "DEFAULT"
          ]
        },
        "triggerCondition": {
          "type": "string",
          "description": "Specification of which price component should be used when determining if an Order should be triggered and filled. This allows Orders to be triggered based on the bid, ask, mid, default (ask for buy, bid for sell) or inverse (ask for sell, bid for buy) price depending on the desired behaviour. Orders are always filled using their default price component.\nThis feature is only provided through the REST API. Clients who choose to specify a non-default trigger condition will not see it reflected in any of OANDA's proprietary or partner trading platforms, their transaction history or their account statements. OANDA platforms always assume that an Order's trigger condition is set to the default value when indicating the distance from an Order's trigger price, and will always provide the default trigger condition when creating or modifying an Order.\nA special restriction applies when creating a guaranteed Stop Loss Order. In this case the TriggerCondition value must either be \"DEFAULT\", or the \"natural\" trigger side \"DEFAULT\" results in. So for a Stop Loss Order for a long trade valid values are \"DEFAULT\" and \"BID\", and for short trades \"DEFAULT\" and \"ASK\" are valid.",
          "enum": [
            "DEFAULT",
            "INVERSE",
            "BID",
            "ASK",
            "MID"
          ]
        },
        "reason": {
          "type": "string",
          "description": "The reason that the Stop Order was initiated",
          "enum": [
            "CLIENT_ORDER",
            "REPLACEMENT"
          ]
        },
        "clientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "takeProfitOnFill": {
          "$ref": "v20_transaction.json#/definitions/TakeProfitDetails"
        },
        "stopLossOnFill": {
          "$ref": "v20_transaction.json#/definitions/StopLossDetails"
        },
        "trailingStopLossOnFill": {
          "$ref": "v20_transaction.json#/definitions/TrailingStopLossDetails"
        },
        "tradeClientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "intendedReplacesOrderID": {
          "type": "string",
          "description": "The ID of the Order that this Order was intended to replace (only provided if this Order was intended to replace an existing Order).",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        },
        "rejectReason": {
          "type": "string",
          "description": "The reason that the Reject Transaction was created",
          "enum": [
            "INTERNAL_SERVER_ERROR",
            "INSTRUMENT_PRICE_UNKNOWN",
            "ACCOUNT_NOT_ACTIVE",
            "ACCOUNT_LOCKED",
            "ACCOUNT_ORDER_CREATION_LOCKED",
            "ACCOUNT_CONFIGURATION_LOCKED",
            "ACCOUNT_DEPOSIT_LOCKED",
            "ACCOUNT_WITHDRAWAL_LOCKED",
            "ACCOUNT_ORDER_CANCEL_LOCKED",
            "INSTRUMENT_NOT_TRADEABLE",
            "PENDING_ORDERS_ALLOWED_EXCEEDED",
            "ORDER_ID_UNSPECIFIED",
            "ORDER_DOESNT_EXIST",
            "ORDER_IDENTIFIER_INCONSISTENCY",
            "TRADE_ID_UNSPECIFIED",
            "TRADE_DOESNT_EXIST",
            "TRADE_IDENTIFIER_INCONSISTENCY",
            "INSUFFICIENT_MARGIN",
            "INSTRUMENT_MISSING",
            "INSTRUMENT_UNKNOWN",
            "UNITS_MISSING",
            "UNITS_INVALID",
            "UNITS_PRECISION_EXCEEDED",
            "UNITS_LIMIT_EXCEEDED",
            "UNITS_MIMIMUM_NOT_MET",
            "PRICE_MISSING",
            "PRICE_INVALID",
            "PRICE_PRECISION_EXCEEDED",
            "PRICE_DISTANCE_MISSING",
            "PRICE_DISTANCE_INVALID",
            "PRICE_DISTANCE_PRECISION_EXCEEDED",
            "PRICE_DISTANCE_MAXIMUM_EXCEEDED",
            "PRICE_DISTANCE_MINIMUM_NOT_MET",
            "TIME_IN_FORCE_MISSING",
            "TIME_IN_FORCE_INVALID",
            "TIME_IN_FORCE_GTD_TIMESTAMP_MISSING",
            "TIME_IN_FORCE_GTD_TIMESTAMP_IN_PAST",
            "PRICE_BOUND_INVALID",
            "PRICE_BOUND_PRECISION_EXCEEDED",
            "ORDERS_ON_FILL_DUPLICATE_CLIENT_ORDER_IDS",
            "TRADE_ON_FILL_CLIENT_EXTENSIONS_NOT_SUPPORTED",
            "CLIENT_ORDER_ID_INVALID",
            "CLIENT_ORDER_ID_ALREADY_EXISTS",
            "CLIENT_ORDER_TAG_INVALID",
            "CLIENT_ORDER_COMMENT_INVALID",
            "CLIENT_TRADE_ID_INVALID",
            "CLIENT_TRADE_ID_ALREADY_EXISTS",
            "CLIENT_TRADE_TAG_INVALID",
            "CLIENT_TRADE_COMMENT_INVALID",
            "ORDER_FILL_POSITION_ACTION_MISSING",
            "ORDER_FILL_POSITION_ACTION_INVALID",
            "TRIGGER_CONDITION_MISSING",
            "TRIGGER_CONDITION_INVALID",
            "ORDER_PARTIAL_FILL_OPTION_MISSING",
            "ORDER_PARTIAL_FILL_OPTION_INVALID",
            "INVALID_REISSUE_IMMEDIATE_PARTIAL_FILL",
            "TAKE_PROFIT_ORDER_ALREADY_EXISTS",
            "TAKE_PROFIT_ON_FILL_PRICE_MISSING",
            "TAKE_PROFIT_ON_FILL_PRICE_INVALID",
            "TAKE_PROFIT_ON_FILL_PRICE_PRECISION_EXCEEDED",
            "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_MISSING",
            "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_INVALID",
            "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_MISSING",
            "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_IN_PAST",
            "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_ID_INVALID",
            "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_TAG_INVALID",
            "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_COMMENT_INVALID",
            "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_MISSING",
            "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_INVALID",
            "STOP_LOSS_ORDER_ALREADY_EXISTS",
            "STOP_LOSS_ORDER_GUARANTEED_REQUIRED",
            "STOP_LOSS_ORDER_GUARANTEED_PRICE_WITHIN_SPREAD",
            "STOP_LOSS_ORDER_GUARANTEED_NOT_ALLOWED",
            "STOP_LOSS_ORDER_GUARANTEED_HALTED_CREATE_VIOLATION",
            "STOP_LOSS_ORDER_GUARANTEED_HALTED_TIGHTEN_VIOLATION",
            "STOP_LOSS_ORDER_GUARANTEED_HEDGING_NOT_ALLOWED",
            "STOP_LOSS_ORDER_GUARANTEED_MINIMUM_DISTANCE_NOT_MET",
            "STOP_LOSS_ORDER_NOT_CANCELABLE",
            "STOP_LOSS_ORDER_NOT_REPLACEABLE",
            "STOP_LOSS_ORDER_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED",
            "STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_SPECIFIED",
            "STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_MISSING",
            "STOP_LOSS_ON_FILL_REQUIRED_FOR_PENDING_ORDER",
            "STOP_LOSS_ON_FILL_GUARANTEED_NOT_ALLOWED",
            "STOP_LOSS_ON_FILL_GUARANTEED_REQUIRED",
            "STOP_LOSS_ON_FILL_PRICE_MISSING",
            "STOP_LOSS_ON_FILL_PRICE_INVALID",
            "STOP_LOSS_ON_FILL_PRICE_PRECISION_EXCEEDED",
            "STOP_LOSS_ON_FILL_GUARANTEED_MINIMUM_DISTANCE_NOT_MET",
            "STOP_LOSS_ON_FILL_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED",
            "STOP_LOSS_ON_FILL_DISTANCE_INVALID",
            "STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED",
            "STOP_LOSS_ON_FILL_DISTANCE_PRECISION_EXCEEDED",
            "STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_SPECIFIED",
            "STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_MISSING",
            "STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING",
            "STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID",
            "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING",
            "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST",
            "STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID",
            "STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID",
            "STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID",
            "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING",
            "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID",
            "TRAILING_STOP_LOSS_ORDER_ALREADY_EXISTS",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_PRECISION_EXCEEDED",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MINIMUM_NOT_MET",
            "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST",
            "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID",
            "TRAILING_STOP_LOSS_ORDERS_NOT_SUPPORTED",
            "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID",
            "CLOSE_TRADE_TYPE_MISSING",
            "CLOSE_TRADE_PARTIAL_UNITS_MISSING",
            "CLOSE_TRADE_UNITS_EXCEED_TRADE_SIZE",
            "CLOSEOUT_POSITION_DOESNT_EXIST",
            "CLOSEOUT_POSITION_INCOMPLETE_SPECIFICATION",
            "CLOSEOUT_POSITION_UNITS_EXCEED_POSITION_SIZE",
            "CLOSEOUT_POSITION_REJECT",
            "CLOSEOUT_POSITION_PARTIAL_UNITS_MISSING",
            "MARKUP_GROUP_ID_INVALID",
            "POSITION_AGGREGATION_MODE_INVALID",
            "ADMIN_CONFIGURE_DATA_MISSING",
            "MARGIN_RATE_INVALID",
            "MARGIN_RATE_WOULD_TRIGGER_CLOSEOUT",
            "ALIAS_INVALID",
            "CLIENT_CONFIGURE_DATA_MISSING",
            "MARGIN_RATE_WOULD_TRIGGER_MARGIN_CALL",
            "AMOUNT_INVALID",
            "INSUFFICIENT_FUNDS",
            "AMOUNT_MISSING",
            "FUNDING_REASON_MISSING",
            "CLIENT_EXTENSIONS_DATA_MISSING",
            "REPLACING_ORDER_INVALID",
            "REPLACING_TRADE_ID_INVALID"
          ]
        }
      }
    },
    "MarketIfTouchedOrderReason": {
      "type": "string",
      "description": "The reason that the Market-if-touched Order was initiated",
      "enum": [
        "CLIENT_ORDER",
        "REPLACEMENT"
      ]
    },
    "MarketIfTouchedOrderTransaction": {
      "type": "object",
      "description": "A MarketIfTouchedOrderTransaction represents the creation of a MarketIfTouched Order in the user's Account.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Transaction's Identifier.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "time": {
          "type": "string",
          "description": "The date/time when the Transaction was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "userID": {
          "type": "integer",
          "description": "The ID of the user that initiated the creation of the Transaction."
        },
        "accountID": {
          "type": "string",
          "description": "The ID of the Account the Transaction was created for.",
          "format": "\"-\"-delimited string with format \"{siteID}-{divisionID}-{userID}-{accountNumber}\""
        },
        "batchID": {
          "type": "string",
          "description": "The ID of the \"batch\" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "requestID": {
          "type": "string",
          "description": "The Request ID of the request which generated the transaction."
        },
        "type": {
          "type": "string",
          "description": "The Type of the Transaction. Always set to \"MARKET_IF_TOUCHED_ORDER\" in a MarketIfTouchedOrderTransaction.",
          "enum": [
            "CREATE",
            "CLOSE",
            "REOPEN",
            "CLIENT_CONFIGURE",
            "CLIENT_CONFIGURE_REJECT",
            "TRANSFER_FUNDS",
            "TRANSFER_FUNDS_REJECT",
            "MARKET_ORDER",
            "MARKET_ORDER_REJECT",
            "FIXED_PRICE_ORDER",
            "LIMIT_ORDER",
            "LIMIT_ORDER_REJECT",
            "STOP_ORDER",
            "STOP_ORDER_REJECT",
            "MARKET_IF_TOUCHED_ORDER",
            "MARKET_IF_TOUCHED_ORDER_REJECT",
            "TAKE_PROFIT_ORDER",
            "TAKE_PROFIT_ORDER_REJECT",
            "STOP_LOSS_ORDER",
            "STOP_LOSS_ORDER_REJECT",
            "TRAILING_STOP_LOSS_ORDER",
            "TRAILING_STOP_LOSS_ORDER_REJECT",
            "ORDER_FILL",
            "ORDER_CANCEL",
            "ORDER_CANCEL_REJECT",
            "ORDER_CLIENT_EXTENSIONS_MODIFY",
            "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "TRADE_CLIENT_EXTENSIONS_MODIFY",
            "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "MARGIN_CALL_ENTER",
            "MARGIN_CALL_EXTEND",
            "MARGIN_CALL_EXIT",
            "DELAYED_TRADE_CLOSURE",
            "DAILY_FINANCING",
            "RESET_RESETTABLE_PL"
          ]
        },
        "instrument": {
          "type": "string",
          "description": "The MarketIfTouched Order's Instrument.",
          "format": "A string containing the base currency and quote currency delimited by a \"_\"."
        },
        "units": {
          "type": "string",
          "description": "The quantity requested to be filled by the MarketIfTouched Order. A posititive number of units results in a long Order, and a negative number of units results in a short Order.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "price": {
          "type": "string",
          "description": "The price threshold specified for the MarketIfTouched Order. The MarketIfTouched Order will only be filled by a market price that crosses this price from the direction of the market price at the time when the Order was created (the initialMarketPrice). Depending on the value of the Order's price and initialMarketPrice, the MarketIfTouchedOrder will behave like a Limit or a Stop Order.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "priceBound": {
          "type": "string",
          "description": "The worst market price that may be used to fill this MarketIfTouched Order.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "timeInForce": {
          "type": "string",
          "description": "The time-in-force requested for the MarketIfTouched Order. Restricted to \"GTC\", \"GFD\" and \"GTD\" for MarketIfTouched Orders.",
          "enum": [
            "GTC",
            "GTD",
            "GFD",
            "FOK",
            "IOC"
          ]
        },
        "gtdTime": {
          "type": "string",
          "description": "The date/time when the MarketIfTouched Order will be cancelled if its timeInForce is \"GTD\".",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "positionFill": {
          "type": "string",
          "description": "Specification of how Positions in the Account are modified when the Order is filled.",
          "enum": [
            "OPEN_ONLY",
            "REDUCE_FIRST",
            "REDUCE_ONLY",
            "DEFAULT"
          ]
        },
        "triggerCondition": {
          "type": "string",
          "description": "Specification of which price component should be used when determining if an Order should be triggered and filled. This allows Orders to be triggered based on the bid, ask, mid, default (ask for buy, bid for sell) or inverse (ask for sell, bid for buy) price depending on the desired behaviour. Orders are always filled using their default price component.\nThis feature is only provided through the REST API. Clients who choose to specify a non-default trigger condition will not see it reflected in any of OANDA's proprietary or partner trading platforms, their transaction history or their account statements. OANDA platforms always assume that an Order's trigger condition is set to the default value when indicating the distance from an Order's trigger price, and will always provide the default trigger condition when creating or modifying an Order.\nA special restriction applies when creating a guaranteed Stop Loss Order. In this case the TriggerCondition value must either be \"DEFAULT\", or the \"natural\" trigger side \"DEFAULT\" results in. So for a Stop Loss Order for a long trade valid values are \"DEFAULT\" and \"BID\", and for short trades \"DEFAULT\" and \"ASK\" are valid.",
          "enum": [
            "DEFAULT",
            "INVERSE",
            "BID",
            "ASK",
            "MID"
          ]
        },
        "reason": {
          "type": "string",
          "description": "The reason that the Market-if-touched Order was initiated",
          "enum": [
            "CLIENT_ORDER",
            "REPLACEMENT"
          ]
        },
        "clientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "takeProfitOnFill": {
          "$ref": "v20_transaction.json#/definitions/TakeProfitDetails"
        },
        "stopLossOnFill": {
          "$ref": "v20_transaction.json#/definitions/StopLossDetails"
        },
        "trailingStopLossOnFill": {
          "$ref": "v20_transaction.json#/definitions/TrailingStopLossDetails"
        },
        "tradeClientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "replacesOrderID": {
          "type": "string",
          "description": "The ID of the Order that this Order replaces (only provided if this Order replaces an existing Order).",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        },
        "cancellingTransactionID": {
          "type": "string",
          "description": "The ID of the Transaction that cancels the replaced Order (only provided if this Order replaces an existing Order).",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        }
      }
    },
    "MarketIfTouchedOrderRejectTransaction": {
      "type": "object",
      "description": "A MarketIfTouchedOrderRejectTransaction represents the rejection of the creation of a MarketIfTouched Order.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Transaction's Identifier.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "time": {
          "type": "string",
          "description": "The date/time when the Transaction was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "userID": {
          "type": "integer",
          "description": "The ID of the user that initiated the creation of the Transaction."
        },
        "accountID": {
          "type": "string",
          "description": "The ID of the Account the Transaction was created for.",
          "format": "\"-\"-delimited string with format \"{siteID}-{divisionID}-{userID}-{accountNumber}\""
        },
        "batchID": {
          "type": "string",
          "description": "The ID of the \"batch\" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "requestID": {
          "type": "string",
          "description": "The Request ID of the request which generated the transaction."
        },
        "type": {
          "type": "string",
          "description": "The Type of the Transaction. Always set to \"MARKET_IF_TOUCHED_ORDER_REJECT\" in a MarketIfTouchedOrderRejectTransaction.",
          "enum": [
            "CREATE",
            "CLOSE",
            "REOPEN",
            "CLIENT_CONFIGURE",
            "CLIENT_CONFIGURE_REJECT",
            "TRANSFER_FUNDS",
            "TRANSFER_FUNDS_REJECT",
            "MARKET_ORDER",
            "MARKET_ORDER_REJECT",
            "FIXED_PRICE_ORDER",
            "LIMIT_ORDER",
            "LIMIT_ORDER_REJECT",
            "STOP_ORDER",
            "STOP_ORDER_REJECT",
            "MARKET_IF_TOUCHED_ORDER",
            "MARKET_IF_TOUCHED_ORDER_REJECT",
            "TAKE_PROFIT_ORDER",
            "TAKE_PROFIT_ORDER_REJECT",
            "STOP_LOSS_ORDER",
            "STOP_LOSS_ORDER_REJECT",
            "TRAILING_STOP_LOSS_ORDER",
            "TRAILING_STOP_LOSS_ORDER_REJECT",
            "ORDER_FILL",
            "ORDER_CANCEL",
            "ORDER_CANCEL_REJECT",
            "ORDER_CLIENT_EXTENSIONS_MODIFY",
            "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "TRADE_CLIENT_EXTENSIONS_MODIFY",
            "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "MARGIN_CALL_ENTER",
            "MARGIN_CALL_EXTEND",
            "MARGIN_CALL_EXIT",
            "DELAYED_TRADE_CLOSURE",
            "DAILY_FINANCING",
            "RESET_RESETTABLE_PL"
          ]
        },
        "instrument": {
          "type": "string",
          "description": "The MarketIfTouched Order's Instrument.",
          "format": "A string containing the base currency and quote currency delimited by a \"_\"."
        },
        "units": {
          "type": "string",
          "description": "The quantity requested to be filled by the MarketIfTouched Order. A posititive number of units results in a long Order, and a negative number of units results in a short Order.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "price": {
          "type": "string",
          "description": "The price threshold specified for the MarketIfTouched Order. The MarketIfTouched Order will only be filled by a market price that crosses this price from the direction of the market price at the time when the Order was created (the initialMarketPrice). Depending on the value of the Order's price and initialMarketPrice, the MarketIfTouchedOrder will behave like a Limit or a Stop Order.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "priceBound": {
          "type": "string",
          "description": "The worst market price that may be used to fill this MarketIfTouched Order.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "timeInForce": {
          "type": "string",
          "description": "The time-in-force requested for the MarketIfTouched Order. Restricted to \"GTC\", \"GFD\" and \"GTD\" for MarketIfTouched Orders.",
          "enum": [
            "GTC",
            "GTD",
            "GFD",
            "FOK",
            "IOC"
          ]
        },
        "gtdTime": {
          "type": "string",
          "description": "The date/time when the MarketIfTouched Order will be cancelled if its timeInForce is \"GTD\".",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "positionFill": {
          "type": "string",
          "description": "Specification of how Positions in the Account are modified when the Order is filled.",
          "enum": [
            "OPEN_ONLY",
            "REDUCE_FIRST",
            "REDUCE_ONLY",
            "DEFAULT"
          ]
        },
        "triggerCondition": {
          "type": "string",
          "description": "Specification of which price component should be used when determining if an Order should be triggered and filled. This allows Orders to be triggered based on the bid, ask, mid, default (ask for buy, bid for sell) or inverse (ask for sell, bid for buy) price depending on the desired behaviour. Orders are always filled using their default price component.\nThis feature is only provided through the REST API. Clients who choose to specify a non-default trigger condition will not see it reflected in any of OANDA's proprietary or partner trading platforms, their transaction history or their account statements. OANDA platforms always assume that an Order's trigger condition is set to the default value when indicating the distance from an Order's trigger price, and will always provide the default trigger condition when creating or modifying an Order.\nA special restriction applies when creating a guaranteed Stop Loss Order. In this case the TriggerCondition value must either be \"DEFAULT\", or the \"natural\" trigger side \"DEFAULT\" results in. So for a Stop Loss Order for a long trade valid values are \"DEFAULT\" and \"BID\", and for short trades \"DEFAULT\" and \"ASK\" are valid.",
          "enum": [
            "DEFAULT",
            "INVERSE",
            "BID",
            "ASK",
            "MID"
          ]
        },
        "reason": {
          "type": "string",
          "description": "The reason that the Market-if-touched Order was initiated",
          "enum": [
            "CLIENT_ORDER",
            "REPLACEMENT"
          ]
        },
        "clientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "takeProfitOnFill": {
          "$ref": "v20_transaction.json#/definitions/TakeProfitDetails"
        },
        "stopLossOnFill": {
          "$ref": "v20_transaction.json#/definitions/StopLossDetails"
        },
        "trailingStopLossOnFill": {
          "$ref": "v20_transaction.json#/definitions/TrailingStopLossDetails"
        },
        "tradeClientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "intendedReplacesOrderID": {
          "type": "string",
          "description": "The ID of the Order that this Order was intended to replace (only provided if this Order was intended to replace an existing Order).",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        },
        "rejectReason": {
          "type": "string",
          "description": "The reason that the Reject Transaction was created",
          "enum": [
            "INTERNAL_SERVER_ERROR",
            "INSTRUMENT_PRICE_UNKNOWN",
            "ACCOUNT_NOT_ACTIVE",
            "ACCOUNT_LOCKED",
            "ACCOUNT_ORDER_CREATION_LOCKED",
            "ACCOUNT_CONFIGURATION_LOCKED",
            "ACCOUNT_DEPOSIT_LOCKED",
            "ACCOUNT_WITHDRAWAL_LOCKED",
            "ACCOUNT_ORDER_CANCEL_LOCKED",
            "INSTRUMENT_NOT_TRADEABLE",
            "PENDING_ORDERS_ALLOWED_EXCEEDED",
            "ORDER_ID_UNSPECIFIED",
            "ORDER_DOESNT_EXIST",
            "ORDER_IDENTIFIER_INCONSISTENCY",
            "TRADE_ID_UNSPECIFIED",
            "TRADE_DOESNT_EXIST",
            "TRADE_IDENTIFIER_INCONSISTENCY",
            "INSUFFICIENT_MARGIN",
            "INSTRUMENT_MISSING",
            "INSTRUMENT_UNKNOWN",
            "UNITS_MISSING",
            "UNITS_INVALID",
            "UNITS_PRECISION_EXCEEDED",
            "UNITS_LIMIT_EXCEEDED",
            "UNITS_MIMIMUM_NOT_MET",
            "PRICE_MISSING",
            "PRICE_INVALID",
            "PRICE_PRECISION_EXCEEDED",
            "PRICE_DISTANCE_MISSING",
            "PRICE_DISTANCE_INVALID",
            "PRICE_DISTANCE_PRECISION_EXCEEDED",
            "PRICE_DISTANCE_MAXIMUM_EXCEEDED",
            "PRICE_DISTANCE_MINIMUM_NOT_MET",
            "TIME_IN_FORCE_MISSING",
            "TIME_IN_FORCE_INVALID",
            "TIME_IN_FORCE_GTD_TIMESTAMP_MISSING",
            "TIME_IN_FORCE_GTD_TIMESTAMP_IN_PAST",
            "PRICE_BOUND_INVALID",
            "PRICE_BOUND_PRECISION_EXCEEDED",
            "ORDERS_ON_FILL_DUPLICATE_CLIENT_ORDER_IDS",
            "TRADE_ON_FILL_CLIENT_EXTENSIONS_NOT_SUPPORTED",
            "CLIENT_ORDER_ID_INVALID",
            "CLIENT_ORDER_ID_ALREADY_EXISTS",
            "CLIENT_ORDER_TAG_INVALID",
            "CLIENT_ORDER_COMMENT_INVALID",
            "CLIENT_TRADE_ID_INVALID",
            "CLIENT_TRADE_ID_ALREADY_EXISTS",
            "CLIENT_TRADE_TAG_INVALID",
            "CLIENT_TRADE_COMMENT_INVALID",
            "ORDER_FILL_POSITION_ACTION_MISSING",
            "ORDER_FILL_POSITION_ACTION_INVALID",
            "TRIGGER_CONDITION_MISSING",
            "TRIGGER_CONDITION_INVALID",
            "ORDER_PARTIAL_FILL_OPTION_MISSING",
            "ORDER_PARTIAL_FILL_OPTION_INVALID",
            "INVALID_REISSUE_IMMEDIATE_PARTIAL_FILL",
            "TAKE_PROFIT_ORDER_ALREADY_EXISTS",
            "TAKE_PROFIT_ON_FILL_PRICE_MISSING",
            "TAKE_PROFIT_ON_FILL_PRICE_INVALID",
            "TAKE_PROFIT_ON_FILL_PRICE_PRECISION_EXCEEDED",
            "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_MISSING",
            "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_INVALID",
            "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_MISSING",
            "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_IN_PAST",
            "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_ID_INVALID",
            "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_TAG_INVALID",
            "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_COMMENT_INVALID",
            "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_MISSING",
            "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_INVALID",
            "STOP_LOSS_ORDER_ALREADY_EXISTS",
            "STOP_LOSS_ORDER_GUARANTEED_REQUIRED",
            "STOP_LOSS_ORDER_GUARANTEED_PRICE_WITHIN_SPREAD",
            "STOP_LOSS_ORDER_GUARANTEED_NOT_ALLOWED",
            "STOP_LOSS_ORDER_GUARANTEED_HALTED_CREATE_VIOLATION",
            "STOP_LOSS_ORDER_GUARANTEED_HALTED_TIGHTEN_VIOLATION",
            "STOP_LOSS_ORDER_GUARANTEED_HEDGING_NOT_ALLOWED",
            "STOP_LOSS_ORDER_GUARANTEED_MINIMUM_DISTANCE_NOT_MET",
            "STOP_LOSS_ORDER_NOT_CANCELABLE",
            "STOP_LOSS_ORDER_NOT_REPLACEABLE",
            "STOP_LOSS_ORDER_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED",
            "STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_SPECIFIED",
            "STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_MISSING",
            "STOP_LOSS_ON_FILL_REQUIRED_FOR_PENDING_ORDER",
            "STOP_LOSS_ON_FILL_GUARANTEED_NOT_ALLOWED",
            "STOP_LOSS_ON_FILL_GUARANTEED_REQUIRED",
            "STOP_LOSS_ON_FILL_PRICE_MISSING",
            "STOP_LOSS_ON_FILL_PRICE_INVALID",
            "STOP_LOSS_ON_FILL_PRICE_PRECISION_EXCEEDED",
            "STOP_LOSS_ON_FILL_GUARANTEED_MINIMUM_DISTANCE_NOT_MET",
            "STOP_LOSS_ON_FILL_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED",
            "STOP_LOSS_ON_FILL_DISTANCE_INVALID",
            "STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED",
            "STOP_LOSS_ON_FILL_DISTANCE_PRECISION_EXCEEDED",
            "STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_SPECIFIED",
            "STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_MISSING",
            "STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING",
            "STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID",
            "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING",
            "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST",
            "STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID",
            "STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID",
            "STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID",
            "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING",
            "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID",
            "TRAILING_STOP_LOSS_ORDER_ALREADY_EXISTS",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_PRECISION_EXCEEDED",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MINIMUM_NOT_MET",
            "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST",
            "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID",
            "TRAILING_STOP_LOSS_ORDERS_NOT_SUPPORTED",
            "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID",
            "CLOSE_TRADE_TYPE_MISSING",
            "CLOSE_TRADE_PARTIAL_UNITS_MISSING",
            "CLOSE_TRADE_UNITS_EXCEED_TRADE_SIZE",
            "CLOSEOUT_POSITION_DOESNT_EXIST",
            "CLOSEOUT_POSITION_INCOMPLETE_SPECIFICATION",
            "CLOSEOUT_POSITION_UNITS_EXCEED_POSITION_SIZE",
            "CLOSEOUT_POSITION_REJECT",
            "CLOSEOUT_POSITION_PARTIAL_UNITS_MISSING",
            "MARKUP_GROUP_ID_INVALID",
            "POSITION_AGGREGATION_MODE_INVALID",
            "ADMIN_CONFIGURE_DATA_MISSING",
            "MARGIN_RATE_INVALID",
            "MARGIN_RATE_WOULD_TRIGGER_CLOSEOUT",
            "ALIAS_INVALID",
            "CLIENT_CONFIGURE_DATA_MISSING",
            "MARGIN_RATE_WOULD_TRIGGER_MARGIN_CALL",
            "AMOUNT_INVALID",
            "INSUFFICIENT_FUNDS",
            "AMOUNT_MISSING",
            "FUNDING_REASON_MISSING",
            "CLIENT_EXTENSIONS_DATA_MISSING",
            "REPLACING_ORDER_INVALID",
            "REPLACING_TRADE_ID_INVALID"
          ]
        }
      }
    },
    "TakeProfitOrderReason": {
      "type": "string",
      "description": "The reason that the Take Profit Order was initiated",
      "enum": [
        "CLIENT_ORDER",
        "REPLACEMENT",
        "ON_FILL"
      ]
    },
    "TakeProfitOrderTransaction": {
      "type": "object",
      "description": "A TakeProfitOrderTransaction represents the creation of a TakeProfit Order in the user's Account.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Transaction's Identifier.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "time": {
          "type": "string",
          "description": "The date/time when the Transaction was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "userID": {
          "type": "integer",
          "description": "The ID of the user that initiated the creation of the Transaction."
        },
        "accountID": {
          "type": "string",
          "description": "The ID of the Account the Transaction was created for.",
          "format": "\"-\"-delimited string with format \"{siteID}-{divisionID}-{userID}-{accountNumber}\""
        },
        "batchID": {
          "type": "string",
          "description": "The ID of the \"batch\" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "requestID": {
          "type": "string",
          "description": "The Request ID of the request which generated the transaction."
        },
        "type": {
          "type": "string",
          "description": "The Type of the Transaction. Always set to \"TAKE_PROFIT_ORDER\" in a TakeProfitOrderTransaction.",
          "enum": [
            "CREATE",
            "CLOSE",
            "REOPEN",
            "CLIENT_CONFIGURE",
            "CLIENT_CONFIGURE_REJECT",
            "TRANSFER_FUNDS",
            "TRANSFER_FUNDS_REJECT",
            "MARKET_ORDER",
            "MARKET_ORDER_REJECT",
            "FIXED_PRICE_ORDER",
            "LIMIT_ORDER",
            "LIMIT_ORDER_REJECT",
            "STOP_ORDER",
            "STOP_ORDER_REJECT",
            "MARKET_IF_TOUCHED_ORDER",
            "MARKET_IF_TOUCHED_ORDER_REJECT",
            "TAKE_PROFIT_ORDER",
            "TAKE_PROFIT_ORDER_REJECT",
            "STOP_LOSS_ORDER",
            "STOP_LOSS_ORDER_REJECT",
            "TRAILING_STOP_LOSS_ORDER",
            "TRAILING_STOP_LOSS_ORDER_REJECT",
            "ORDER_FILL",
            "ORDER_CANCEL",
            "ORDER_CANCEL_REJECT",
            "ORDER_CLIENT_EXTENSIONS_MODIFY",
            "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "TRADE_CLIENT_EXTENSIONS_MODIFY",
            "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "MARGIN_CALL_ENTER",
            "MARGIN_CALL_EXTEND",
            "MARGIN_CALL_EXIT",
            "DELAYED_TRADE_CLOSURE",
            "DAILY_FINANCING",
            "RESET_RESETTABLE_PL"
          ]
        },
        "tradeID": {
          "type": "string",
          "description": "The ID of the Trade to close when the price threshold is breached.",
          "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
        },
        "clientTradeID": {
          "type": "string",
          "description": "The client ID of the Trade to be closed when the price threshold is breached."
        },
        "price": {
          "type": "string",
          "description": "The price threshold specified for the TakeProfit Order. The associated Trade will be closed by a market price that is equal to or better than this threshold.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "timeInForce": {
          "type": "string",
          "description": "The time-in-force requested for the TakeProfit Order. Restricted to \"GTC\", \"GFD\" and \"GTD\" for TakeProfit Orders.",
          "enum": [
            "GTC",
            "GTD",
            "GFD",
            "FOK",
            "IOC"
          ]
        },
        "gtdTime": {
          "type": "string",
          "description": "The date/time when the TakeProfit Order will be cancelled if its timeInForce is \"GTD\".",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "triggerCondition": {
          "type": "string",
          "description": "Specification of which price component should be used when determining if an Order should be triggered and filled. This allows Orders to be triggered based on the bid, ask, mid, default (ask for buy, bid for sell) or inverse (ask for sell, bid for buy) price depending on the desired behaviour. Orders are always filled using their default price component.\nThis feature is only provided through the REST API. Clients who choose to specify a non-default trigger condition will not see it reflected in any of OANDA's proprietary or partner trading platforms, their transaction history or their account statements. OANDA platforms always assume that an Order's trigger condition is set to the default value when indicating the distance from an Order's trigger price, and will always provide the default trigger condition when creating or modifying an Order.\nA special restriction applies when creating a guaranteed Stop Loss Order. In this case the TriggerCondition value must either be \"DEFAULT\", or the \"natural\" trigger side \"DEFAULT\" results in. So for a Stop Loss Order for a long trade valid values are \"DEFAULT\" and \"BID\", and for short trades \"DEFAULT\" and \"ASK\" are valid.",
          "enum": [
            "DEFAULT",
            "INVERSE",
            "BID",
            "ASK",
            "MID"
          ]
        },
        "reason": {
          "type": "string",
          "description": "The reason that the Take Profit Order was initiated",
          "enum": [
            "CLIENT_ORDER",
            "REPLACEMENT",
            "ON_FILL"
          ]
        },
        "clientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "orderFillTransactionID": {
          "type": "string",
          "description": "The ID of the OrderFill Transaction that caused this Order to be created (only provided if this Order was created automatically when another Order was filled).",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "replacesOrderID": {
          "type": "string",
          "description": "The ID of the Order that this Order replaces (only provided if this Order replaces an existing Order).",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        },
        "cancellingTransactionID": {
          "type": "string",
          "description": "The ID of the Transaction that cancels the replaced Order (only provided if this Order replaces an existing Order).",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        }
      }
    },
    "TakeProfitOrderRejectTransaction": {
      "type": "object",
      "description": "A TakeProfitOrderRejectTransaction represents the rejection of the creation of a TakeProfit Order.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Transaction's Identifier.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "time": {
          "type": "string",
          "description": "The date/time when the Transaction was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "userID": {
          "type": "integer",
          "description": "The ID of the user that initiated the creation of the Transaction."
        },
        "accountID": {
          "type": "string",
          "description": "The ID of the Account the Transaction was created for.",
          "format": "\"-\"-delimited string with format \"{siteID}-{divisionID}-{userID}-{accountNumber}\""
        },
        "batchID": {
          "type": "string",
          "description": "The ID of the \"batch\" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "requestID": {
          "type": "string",
          "description": "The Request ID of the request which generated the transaction."
        },
        "type": {
          "type": "string",
          "description": "The Type of the Transaction. Always set to \"TAKE_PROFIT_ORDER_REJECT\" in a TakeProfitOrderRejectTransaction.",
          "enum": [
            "CREATE",
            "CLOSE",
            "REOPEN",
            "CLIENT_CONFIGURE",
            "CLIENT_CONFIGURE_REJECT",
            "TRANSFER_FUNDS",
            "TRANSFER_FUNDS_REJECT",
            "MARKET_ORDER",
            "MARKET_ORDER_REJECT",
            "FIXED_PRICE_ORDER",
            "LIMIT_ORDER",
            "LIMIT_ORDER_REJECT",
            "STOP_ORDER",
            "STOP_ORDER_REJECT",
            "MARKET_IF_TOUCHED_ORDER",
            "MARKET_IF_TOUCHED_ORDER_REJECT",
            "TAKE_PROFIT_ORDER",
            "TAKE_PROFIT_ORDER_REJECT",
            "STOP_LOSS_ORDER",
            "STOP_LOSS_ORDER_REJECT",
            "TRAILING_STOP_LOSS_ORDER",
            "TRAILING_STOP_LOSS_ORDER_REJECT",
            "ORDER_FILL",
            "ORDER_CANCEL",
            "ORDER_CANCEL_REJECT",
            "ORDER_CLIENT_EXTENSIONS_MODIFY",
            "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "TRADE_CLIENT_EXTENSIONS_MODIFY",
            "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "MARGIN_CALL_ENTER",
            "MARGIN_CALL_EXTEND",
            "MARGIN_CALL_EXIT",
            "DELAYED_TRADE_CLOSURE",
            "DAILY_FINANCING",
            "RESET_RESETTABLE_PL"
          ]
        },
        "tradeID": {
          "type": "string",
          "description": "The ID of the Trade to close when the price threshold is breached.",
          "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
        },
        "clientTradeID": {
          "type": "string",
          "description": "The client ID of the Trade to be closed when the price threshold is breached."
        },
        "price": {
          "type": "string",
          "description": "The price threshold specified for the TakeProfit Order. The associated Trade will be closed by a market price that is equal to or better than this threshold.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "timeInForce": {
          "type": "string",
          "description": "The time-in-force requested for the TakeProfit Order. Restricted to \"GTC\", \"GFD\" and \"GTD\" for TakeProfit Orders.",
          "enum": [
            "GTC",
            "GTD",
            "GFD",
            "FOK",
            "IOC"
          ]
        },
        "gtdTime": {
          "type": "string",
          "description": "The date/time when the TakeProfit Order will be cancelled if its timeInForce is \"GTD\".",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "triggerCondition": {
          "type": "string",
          "description": "Specification of which price component should be used when determining if an Order should be triggered and filled. This allows Orders to be triggered based on the bid, ask, mid, default (ask for buy, bid for sell) or inverse (ask for sell, bid for buy) price depending on the desired behaviour. Orders are always filled using their default price component.\nThis feature is only provided through the REST API. Clients who choose to specify a non-default trigger condition will not see it reflected in any of OANDA's proprietary or partner trading platforms, their transaction history or their account statements. OANDA platforms always assume that an Order's trigger condition is set to the default value when indicating the distance from an Order's trigger price, and will always provide the default trigger condition when creating or modifying an Order.\nA special restriction applies when creating a guaranteed Stop Loss Order. In this case the TriggerCondition value must either be \"DEFAULT\", or the \"natural\" trigger side \"DEFAULT\" results in. So for a Stop Loss Order for a long trade valid values are \"DEFAULT\" and \"BID\", and for short trades \"DEFAULT\" and \"ASK\" are valid.",
          "enum": [
            "DEFAULT",
            "INVERSE",
            "BID",
            "ASK",
            "MID"
          ]
        },
        "reason": {
          "type": "string",
          "description": "The reason that the Take Profit Order was initiated",
          "enum": [
            "CLIENT_ORDER",
            "REPLACEMENT",
            "ON_FILL"
          ]
        },
        "clientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "orderFillTransactionID": {
          "type": "string",
          "description": "The ID of the OrderFill Transaction that caused this Order to be created (only provided if this Order was created automatically when another Order was filled).",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "intendedReplacesOrderID": {
          "type": "string",
          "description": "The ID of the Order that this Order was intended to replace (only provided if this Order was intended to replace an existing Order).",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        },
        "rejectReason": {
          "type": "string",
          "description": "The reason that the Reject Transaction was created",
          "enum": [
            "INTERNAL_SERVER_ERROR",
            "INSTRUMENT_PRICE_UNKNOWN",
            "ACCOUNT_NOT_ACTIVE",
            "ACCOUNT_LOCKED",
            "ACCOUNT_ORDER_CREATION_LOCKED",
            "ACCOUNT_CONFIGURATION_LOCKED",
            "ACCOUNT_DEPOSIT_LOCKED",
            "ACCOUNT_WITHDRAWAL_LOCKED",
            "ACCOUNT_ORDER_CANCEL_LOCKED",
            "INSTRUMENT_NOT_TRADEABLE",
            "PENDING_ORDERS_ALLOWED_EXCEEDED",
            "ORDER_ID_UNSPECIFIED",
            "ORDER_DOESNT_EXIST",
            "ORDER_IDENTIFIER_INCONSISTENCY",
            "TRADE_ID_UNSPECIFIED",
            "TRADE_DOESNT_EXIST",
            "TRADE_IDENTIFIER_INCONSISTENCY",
            "INSUFFICIENT_MARGIN",
            "INSTRUMENT_MISSING",
            "INSTRUMENT_UNKNOWN",
            "UNITS_MISSING",
            "UNITS_INVALID",
            "UNITS_PRECISION_EXCEEDED",
            "UNITS_LIMIT_EXCEEDED",
            "UNITS_MIMIMUM_NOT_MET",
            "PRICE_MISSING",
            "PRICE_INVALID",
            "PRICE_PRECISION_EXCEEDED",
            "PRICE_DISTANCE_MISSING",
            "PRICE_DISTANCE_INVALID",
            "PRICE_DISTANCE_PRECISION_EXCEEDED",
            "PRICE_DISTANCE_MAXIMUM_EXCEEDED",
            "PRICE_DISTANCE_MINIMUM_NOT_MET",
            "TIME_IN_FORCE_MISSING",
            "TIME_IN_FORCE_INVALID",
            "TIME_IN_FORCE_GTD_TIMESTAMP_MISSING",
            "TIME_IN_FORCE_GTD_TIMESTAMP_IN_PAST",
            "PRICE_BOUND_INVALID",
            "PRICE_BOUND_PRECISION_EXCEEDED",
            "ORDERS_ON_FILL_DUPLICATE_CLIENT_ORDER_IDS",
            "TRADE_ON_FILL_CLIENT_EXTENSIONS_NOT_SUPPORTED",
            "CLIENT_ORDER_ID_INVALID",
            "CLIENT_ORDER_ID_ALREADY_EXISTS",
            "CLIENT_ORDER_TAG_INVALID",
            "CLIENT_ORDER_COMMENT_INVALID",
            "CLIENT_TRADE_ID_INVALID",
            "CLIENT_TRADE_ID_ALREADY_EXISTS",
            "CLIENT_TRADE_TAG_INVALID",
            "CLIENT_TRADE_COMMENT_INVALID",
            "ORDER_FILL_POSITION_ACTION_MISSING",
            "ORDER_FILL_POSITION_ACTION_INVALID",
            "TRIGGER_CONDITION_MISSING",
            "TRIGGER_CONDITION_INVALID",
            "ORDER_PARTIAL_FILL_OPTION_MISSING",
            "ORDER_PARTIAL_FILL_OPTION_INVALID",
            "INVALID_REISSUE_IMMEDIATE_PARTIAL_FILL",
            "TAKE_PROFIT_ORDER_ALREADY_EXISTS",
            "TAKE_PROFIT_ON_FILL_PRICE_MISSING",
            "TAKE_PROFIT_ON_FILL_PRICE_INVALID",
            "TAKE_PROFIT_ON_FILL_PRICE_PRECISION_EXCEEDED",
            "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_MISSING",
            "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_INVALID",
            "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_MISSING",
            "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_IN_PAST",
            "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_ID_INVALID",
            "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_TAG_INVALID",
            "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_COMMENT_INVALID",
            "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_MISSING",
            "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_INVALID",
            "STOP_LOSS_ORDER_ALREADY_EXISTS",
            "STOP_LOSS_ORDER_GUARANTEED_REQUIRED",
            "STOP_LOSS_ORDER_GUARANTEED_PRICE_WITHIN_SPREAD",
            "STOP_LOSS_ORDER_GUARANTEED_NOT_ALLOWED",
            "STOP_LOSS_ORDER_GUARANTEED_HALTED_CREATE_VIOLATION",
            "STOP_LOSS_ORDER_GUARANTEED_HALTED_TIGHTEN_VIOLATION",
            "STOP_LOSS_ORDER_GUARANTEED_HEDGING_NOT_ALLOWED",
            "STOP_LOSS_ORDER_GUARANTEED_MINIMUM_DISTANCE_NOT_MET",
            "STOP_LOSS_ORDER_NOT_CANCELABLE",
            "STOP_LOSS_ORDER_NOT_REPLACEABLE",
            "STOP_LOSS_ORDER_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED",
            "STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_SPECIFIED",
            "STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_MISSING",
            "STOP_LOSS_ON_FILL_REQUIRED_FOR_PENDING_ORDER",
            "STOP_LOSS_ON_FILL_GUARANTEED_NOT_ALLOWED",
            "STOP_LOSS_ON_FILL_GUARANTEED_REQUIRED",
            "STOP_LOSS_ON_FILL_PRICE_MISSING",
            "STOP_LOSS_ON_FILL_PRICE_INVALID",
            "STOP_LOSS_ON_FILL_PRICE_PRECISION_EXCEEDED",
            "STOP_LOSS_ON_FILL_GUARANTEED_MINIMUM_DISTANCE_NOT_MET",
            "STOP_LOSS_ON_FILL_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED",
            "STOP_LOSS_ON_FILL_DISTANCE_INVALID",
            "STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED",
            "STOP_LOSS_ON_FILL_DISTANCE_PRECISION_EXCEEDED",
            "STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_SPECIFIED",
            "STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_MISSING",
            "STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING",
            "STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID",
            "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING",
            "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST",
            "STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID",
            "STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID",
            "STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID",
            "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING",
            "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID",
            "TRAILING_STOP_LOSS_ORDER_ALREADY_EXISTS",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_PRECISION_EXCEEDED",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MINIMUM_NOT_MET",
            "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST",
            "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID",
            "TRAILING_STOP_LOSS_ORDERS_NOT_SUPPORTED",
            "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID",
            "CLOSE_TRADE_TYPE_MISSING",
            "CLOSE_TRADE_PARTIAL_UNITS_MISSING",
            "CLOSE_TRADE_UNITS_EXCEED_TRADE_SIZE",
            "CLOSEOUT_POSITION_DOESNT_EXIST",
            "CLOSEOUT_POSITION_INCOMPLETE_SPECIFICATION",
            "CLOSEOUT_POSITION_UNITS_EXCEED_POSITION_SIZE",
            "CLOSEOUT_POSITION_REJECT",
            "CLOSEOUT_POSITION_PARTIAL_UNITS_MISSING",
            "MARKUP_GROUP_ID_INVALID",
            "POSITION_AGGREGATION_MODE_INVALID",
            "ADMIN_CONFIGURE_DATA_MISSING",
            "MARGIN_RATE_INVALID",
            "MARGIN_RATE_WOULD_TRIGGER_CLOSEOUT",
            "ALIAS_INVALID",
            "CLIENT_CONFIGURE_DATA_MISSING",
            "MARGIN_RATE_WOULD_TRIGGER_MARGIN_CALL",
            "AMOUNT_INVALID",
            "INSUFFICIENT_FUNDS",
            "AMOUNT_MISSING",
            "FUNDING_REASON_MISSING",
            "CLIENT_EXTENSIONS_DATA_MISSING",
            "REPLACING_ORDER_INVALID",
            "REPLACING_TRADE_ID_INVALID"
          ]
        }
      }
    },
    "StopLossOrderReason": {
      "type": "string",
      "description": "The reason that the Stop Loss Order was initiated",
      "enum": [
        "CLIENT_ORDER",
        "REPLACEMENT",
        "ON_FILL"
      ]
    },
    "StopLossOrderTransaction": {
      "type": "object",
      "description": "A StopLossOrderTransaction represents the creation of a StopLoss Order in the user's Account.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Transaction's Identifier.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "time": {
          "type": "string",
          "description": "The date/time when the Transaction was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "userID": {
          "type": "integer",
          "description": "The ID of the user that initiated the creation of the Transaction."
        },
        "accountID": {
          "type": "string",
          "description": "The ID of the Account the Transaction was created for.",
          "format": "\"-\"-delimited string with format \"{siteID}-{divisionID}-{userID}-{accountNumber}\""
        },
        "batchID": {
          "type": "string",
          "description": "The ID of the \"batch\" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "requestID": {
          "type": "string",
          "description": "The Request ID of the request which generated the transaction."
        },
        "type": {
          "type": "string",
          "description": "The Type of the Transaction. Always set to \"STOP_LOSS_ORDER\" in a StopLossOrderTransaction.",
          "enum": [
            "CREATE",
            "CLOSE",
            "REOPEN",
            "CLIENT_CONFIGURE",
            "CLIENT_CONFIGURE_REJECT",
            "TRANSFER_FUNDS",
            "TRANSFER_FUNDS_REJECT",
            "MARKET_ORDER",
            "MARKET_ORDER_REJECT",
            "FIXED_PRICE_ORDER",
            "LIMIT_ORDER",
            "LIMIT_ORDER_REJECT",
            "STOP_ORDER",
            "STOP_ORDER_REJECT",
            "MARKET_IF_TOUCHED_ORDER",
            "MARKET_IF_TOUCHED_ORDER_REJECT",
            "TAKE_PROFIT_ORDER",
            "TAKE_PROFIT_ORDER_REJECT",
            "STOP_LOSS_ORDER",
            "STOP_LOSS_ORDER_REJECT",
            "TRAILING_STOP_LOSS_ORDER",
            "TRAILING_STOP_LOSS_ORDER_REJECT",
            "ORDER_FILL",
            "ORDER_CANCEL",
            "ORDER_CANCEL_REJECT",
            "ORDER_CLIENT_EXTENSIONS_MODIFY",
            "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "TRADE_CLIENT_EXTENSIONS_MODIFY",
            "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "MARGIN_CALL_ENTER",
            "MARGIN_CALL_EXTEND",
            "MARGIN_CALL_EXIT",
            "DELAYED_TRADE_CLOSURE",
            "DAILY_FINANCING",
            "RESET_RESETTABLE_PL"
          ]
        },
        "tradeID": {
          "type": "string",
          "description": "The ID of the Trade to close when the price threshold is breached.",
          "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
        },
        "clientTradeID": {
          "type": "string",
          "description": "The client ID of the Trade to be closed when the price threshold is breached."
        },
        "price": {
          "type": "string",
          "description": "The price threshold specified for the Stop Loss Order. If the guaranteed flag is false, the associated Trade will be closed by a market price that is equal to or worse than this threshold. If the flag is true the associated Trade will be closed at this price.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "distance": {
          "type": "string",
          "description": "Specifies the distance (in price units) from the Account's current price to use as the Stop Loss Order price. If the Trade is short the Instrument's bid price is used, and for long Trades the ask is used.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "timeInForce": {
          "type": "string",
          "description": "The time-in-force requested for the StopLoss Order. Restricted to \"GTC\", \"GFD\" and \"GTD\" for StopLoss Orders.",
          "enum": [
            "GTC",
            "GTD",
            "GFD",
            "FOK",
            "IOC"
          ]
        },
        "gtdTime": {
          "type": "string",
          "description": "The date/time when the StopLoss Order will be cancelled if its timeInForce is \"GTD\".",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "triggerCondition": {
          "type": "string",
          "description": "Specification of which price component should be used when determining if an Order should be triggered and filled. This allows Orders to be triggered based on the bid, ask, mid, default (ask for buy, bid for sell) or inverse (ask for sell, bid for buy) price depending on the desired behaviour. Orders are always filled using their default price component.\nThis feature is only provided through the REST API. Clients who choose to specify a non-default trigger condition will not see it reflected in any of OANDA's proprietary or partner trading platforms, their transaction history or their account statements. OANDA platforms always assume that an Order's trigger condition is set to the default value when indicating the distance from an Order's trigger price, and will always provide the default trigger condition when creating or modifying an Order.\nA special restriction applies when creating a guaranteed Stop Loss Order. In this case the TriggerCondition value must either be \"DEFAULT\", or the \"natural\" trigger side \"DEFAULT\" results in. So for a Stop Loss Order for a long trade valid values are \"DEFAULT\" and \"BID\", and for short trades \"DEFAULT\" and \"ASK\" are valid.",
          "enum": [
            "DEFAULT",
            "INVERSE",
            "BID",
            "ASK",
            "MID"
          ]
        },
        "guaranteed": {
          "type": "boolean",
          "description": "Flag indicating that the Stop Loss Order is guaranteed. The default value depends on the GuaranteedStopLossOrderMode of the account, if it is REQUIRED, the default will be true, for DISABLED or ENABLED the default is false."
        },
        "guaranteedExecutionPremium": {
          "type": "string",
          "description": "The fee that will be charged if the Stop Loss Order is guaranteed and the Order is filled at the guaranteed price. The value is determined at Order creation time. It is in price units and is charged for each unit of the Trade.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "reason": {
          "type": "string",
          "description": "The reason that the Stop Loss Order was initiated",
          "enum": [
            "CLIENT_ORDER",
            "REPLACEMENT",
            "ON_FILL"
          ]
        },
        "clientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "orderFillTransactionID": {
          "type": "string",
          "description": "The ID of the OrderFill Transaction that caused this Order to be created (only provided if this Order was created automatically when another Order was filled).",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "replacesOrderID": {
          "type": "string",
          "description": "The ID of the Order that this Order replaces (only provided if this Order replaces an existing Order).",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        },
        "cancellingTransactionID": {
          "type": "string",
          "description": "The ID of the Transaction that cancels the replaced Order (only provided if this Order replaces an existing Order).",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        }
      }
    },
    "StopLossOrderRejectTransaction": {
      "type": "object",
      "description": "A StopLossOrderRejectTransaction represents the rejection of the creation of a StopLoss Order.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Transaction's Identifier.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "time": {
          "type": "string",
          "description": "The date/time when the Transaction was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "userID": {
          "type": "integer",
          "description": "The ID of the user that initiated the creation of the Transaction."
        },
        "accountID": {
          "type": "string",
          "description": "The ID of the Account the Transaction was created for.",
          "format": "\"-\"-delimited string with format \"{siteID}-{divisionID}-{userID}-{accountNumber}\""
        },
        "batchID": {
          "type": "string",
          "description": "The ID of the \"batch\" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "requestID": {
          "type": "string",
          "description": "The Request ID of the request which generated the transaction."
        },
        "type": {
          "type": "string",
          "description": "The Type of the Transaction. Always set to \"STOP_LOSS_ORDER_REJECT\" in a StopLossOrderRejectTransaction.",
          "enum": [
            "CREATE",
            "CLOSE",
            "REOPEN",
            "CLIENT_CONFIGURE",
            "CLIENT_CONFIGURE_REJECT",
            "TRANSFER_FUNDS",
            "TRANSFER_FUNDS_REJECT",
            "MARKET_ORDER",
            "MARKET_ORDER_REJECT",
            "FIXED_PRICE_ORDER",
            "LIMIT_ORDER",
            "LIMIT_ORDER_REJECT",
            "STOP_ORDER",
            "STOP_ORDER_REJECT",
            "MARKET_IF_TOUCHED_ORDER",
            "MARKET_IF_TOUCHED_ORDER_REJECT",
            "TAKE_PROFIT_ORDER",
            "TAKE_PROFIT_ORDER_REJECT",
            "STOP_LOSS_ORDER",
            "STOP_LOSS_ORDER_REJECT",
            "TRAILING_STOP_LOSS_ORDER",
            "TRAILING_STOP_LOSS_ORDER_REJECT",
            "ORDER_FILL",
            "ORDER_CANCEL",
            "ORDER_CANCEL_REJECT",
            "ORDER_CLIENT_EXTENSIONS_MODIFY",
            "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "TRADE_CLIENT_EXTENSIONS_MODIFY",
            "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "MARGIN_CALL_ENTER",
            "MARGIN_CALL_EXTEND",
            "MARGIN_CALL_EXIT",
            "DELAYED_TRADE_CLOSURE",
            "DAILY_FINANCING",
            "RESET_RESETTABLE_PL"
          ]
        },
        "tradeID": {
          "type": "string",
          "description": "The ID of the Trade to close when the price threshold is breached.",
          "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
        },
        "clientTradeID": {
          "type": "string",
          "description": "The client ID of the Trade to be closed when the price threshold is breached."
        },
        "price": {
          "type": "string",
          "description": "The price threshold specified for the Stop Loss Order. If the guaranteed flag is false, the associated Trade will be closed by a market price that is equal to or worse than this threshold. If the flag is true the associated Trade will be closed at this price.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "distance": {
          "type": "string",
          "description": "Specifies the distance (in price units) from the Account's current price to use as the Stop Loss Order price. If the Trade is short the Instrument's bid price is used, and for long Trades the ask is used.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "timeInForce": {
          "type": "string",
          "description": "The time-in-force requested for the StopLoss Order. Restricted to \"GTC\", \"GFD\" and \"GTD\" for StopLoss Orders.",
          "enum": [
            "GTC",
            "GTD",
            "GFD",
            "FOK",
            "IOC"
          ]
        },
        "gtdTime": {
          "type": "string",
          "description": "The date/time when the StopLoss Order will be cancelled if its timeInForce is \"GTD\".",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "triggerCondition": {
          "type": "string",
          "description": "Specification of which price component should be used when determining if an Order should be triggered and filled. This allows Orders to be triggered based on the bid, ask, mid, default (ask for buy, bid for sell) or inverse (ask for sell, bid for buy) price depending on the desired behaviour. Orders are always filled using their default price component.\nThis feature is only provided through the REST API. Clients who choose to specify a non-default trigger condition will not see it reflected in any of OANDA's proprietary or partner trading platforms, their transaction history or their account statements. OANDA platforms always assume that an Order's trigger condition is set to the default value when indicating the distance from an Order's trigger price, and will always provide the default trigger condition when creating or modifying an Order.\nA special restriction applies when creating a guaranteed Stop Loss Order. In this case the TriggerCondition value must either be \"DEFAULT\", or the \"natural\" trigger side \"DEFAULT\" results in. So for a Stop Loss Order for a long trade valid values are \"DEFAULT\" and \"BID\", and for short trades \"DEFAULT\" and \"ASK\" are valid.",
          "enum": [
            "DEFAULT",
            "INVERSE",
            "BID",
            "ASK",
            "MID"
          ]
        },
        "guaranteed": {
          "type": "boolean",
          "description": "Flag indicating that the Stop Loss Order is guaranteed. The default value depends on the GuaranteedStopLossOrderMode of the account, if it is REQUIRED, the default will be true, for DISABLED or ENABLED the default is false."
        },
        "reason": {
          "type": "string",
          "description": "The reason that the Stop Loss Order was initiated",
          "enum": [
            "CLIENT_ORDER",
            "REPLACEMENT",
            "ON_FILL"
          ]
        },
        "clientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "orderFillTransactionID": {
          "type": "string",
          "description": "The ID of the OrderFill Transaction that caused this Order to be created (only provided if this Order was created automatically when another Order was filled).",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "intendedReplacesOrderID": {
          "type": "string",
          "description": "The ID of the Order that this Order was intended to replace (only provided if this Order was intended to replace an existing Order).",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        },
        "rejectReason": {
          "type": "string",
          "description": "The reason that the Reject Transaction was created",
          "enum": [
            "INTERNAL_SERVER_ERROR",
            "INSTRUMENT_PRICE_UNKNOWN",
            "ACCOUNT_NOT_ACTIVE",
            "ACCOUNT_LOCKED",
            "ACCOUNT_ORDER_CREATION_LOCKED",
            "ACCOUNT_CONFIGURATION_LOCKED",
            "ACCOUNT_DEPOSIT_LOCKED",
            "ACCOUNT_WITHDRAWAL_LOCKED",
            "ACCOUNT_ORDER_CANCEL_LOCKED",
            "INSTRUMENT_NOT_TRADEABLE",
            "PENDING_ORDERS_ALLOWED_EXCEEDED",
            "ORDER_ID_UNSPECIFIED",
            "ORDER_DOESNT_EXIST",
            "ORDER_IDENTIFIER_INCONSISTENCY",
            "TRADE_ID_UNSPECIFIED",
            "TRADE_DOESNT_EXIST",
            "TRADE_IDENTIFIER_INCONSISTENCY",
            "INSUFFICIENT_MARGIN",
            "INSTRUMENT_MISSING",
            "INSTRUMENT_UNKNOWN",
            "UNITS_MISSING",
            "UNITS_INVALID",
            "UNITS_PRECISION_EXCEEDED",
            "UNITS_LIMIT_EXCEEDED",
            "UNITS_MIMIMUM_NOT_MET",
            "PRICE_MISSING",
            "PRICE_INVALID",
            "PRICE_PRECISION_EXCEEDED",
            "PRICE_DISTANCE_MISSING",
            "PRICE_DISTANCE_INVALID",
            "PRICE_DISTANCE_PRECISION_EXCEEDED",
            "PRICE_DISTANCE_MAXIMUM_EXCEEDED",
            "PRICE_DISTANCE_MINIMUM_NOT_MET",
            "TIME_IN_FORCE_MISSING",
            "TIME_IN_FORCE_INVALID",
            "TIME_IN_FORCE_GTD_TIMESTAMP_MISSING",
            "TIME_IN_FORCE_GTD_TIMESTAMP_IN_PAST",
            "PRICE_BOUND_INVALID",
            "PRICE_BOUND_PRECISION_EXCEEDED",
            "ORDERS_ON_FILL_DUPLICATE_CLIENT_ORDER_IDS",
            "TRADE_ON_FILL_CLIENT_EXTENSIONS_NOT_SUPPORTED",
            "CLIENT_ORDER_ID_INVALID",
            "CLIENT_ORDER_ID_ALREADY_EXISTS",
            "CLIENT_ORDER_TAG_INVALID",
            "CLIENT_ORDER_COMMENT_INVALID",
            "CLIENT_TRADE_ID_INVALID",
            "CLIENT_TRADE_ID_ALREADY_EXISTS",
            "CLIENT_TRADE_TAG_INVALID",
            "CLIENT_TRADE_COMMENT_INVALID",
            "ORDER_FILL_POSITION_ACTION_MISSING",
            "ORDER_FILL_POSITION_ACTION_INVALID",
            "TRIGGER_CONDITION_MISSING",
            "TRIGGER_CONDITION_INVALID",
            "ORDER_PARTIAL_FILL_OPTION_MISSING",
            "ORDER_PARTIAL_FILL_OPTION_INVALID",
            "INVALID_REISSUE_IMMEDIATE_PARTIAL_FILL",
            "TAKE_PROFIT_ORDER_ALREADY_EXISTS",
            "TAKE_PROFIT_ON_FILL_PRICE_MISSING",
            "TAKE_PROFIT_ON_FILL_PRICE_INVALID",
            "TAKE_PROFIT_ON_FILL_PRICE_PRECISION_EXCEEDED",
            "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_MISSING",
            "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_INVALID",
            "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_MISSING",
            "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_IN_PAST",
            "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_ID_INVALID",
            "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_TAG_INVALID",
            "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_COMMENT_INVALID",
            "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_MISSING",
            "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_INVALID",
            "STOP_LOSS_ORDER_ALREADY_EXISTS",
            "STOP_LOSS_ORDER_GUARANTEED_REQUIRED",
            "STOP_LOSS_ORDER_GUARANTEED_PRICE_WITHIN_SPREAD",
            "STOP_LOSS_ORDER_GUARANTEED_NOT_ALLOWED",
            "STOP_LOSS_ORDER_GUARANTEED_HALTED_CREATE_VIOLATION",
            "STOP_LOSS_ORDER_GUARANTEED_HALTED_TIGHTEN_VIOLATION",
            "STOP_LOSS_ORDER_GUARANTEED_HEDGING_NOT_ALLOWED",
            "STOP_LOSS_ORDER_GUARANTEED_MINIMUM_DISTANCE_NOT_MET",
            "STOP_LOSS_ORDER_NOT_CANCELABLE",
            "STOP_LOSS_ORDER_NOT_REPLACEABLE",
            "STOP_LOSS_ORDER_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED",
            "STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_SPECIFIED",
            "STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_MISSING",
            "STOP_LOSS_ON_FILL_REQUIRED_FOR_PENDING_ORDER",
            "STOP_LOSS_ON_FILL_GUARANTEED_NOT_ALLOWED",
            "STOP_LOSS_ON_FILL_GUARANTEED_REQUIRED",
            "STOP_LOSS_ON_FILL_PRICE_MISSING",
            "STOP_LOSS_ON_FILL_PRICE_INVALID",
            "STOP_LOSS_ON_FILL_PRICE_PRECISION_EXCEEDED",
            "STOP_LOSS_ON_FILL_GUARANTEED_MINIMUM_DISTANCE_NOT_MET",
            "STOP_LOSS_ON_FILL_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED",
            "STOP_LOSS_ON_FILL_DISTANCE_INVALID",
            "STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED",
            "STOP_LOSS_ON_FILL_DISTANCE_PRECISION_EXCEEDED",
            "STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_SPECIFIED",
            "STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_MISSING",
            "STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING",
            "STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID",
            "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING",
            "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST",
            "STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID",
            "STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID",
            "STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID",
            "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING",
            "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID",
            "TRAILING_STOP_LOSS_ORDER_ALREADY_EXISTS",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_PRECISION_EXCEEDED",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MINIMUM_NOT_MET",
            "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST",
            "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID",
            "TRAILING_STOP_LOSS_ORDERS_NOT_SUPPORTED",
            "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID",
            "CLOSE_TRADE_TYPE_MISSING",
            "CLOSE_TRADE_PARTIAL_UNITS_MISSING",
            "CLOSE_TRADE_UNITS_EXCEED_TRADE_SIZE",
            "CLOSEOUT_POSITION_DOESNT_EXIST",
            "CLOSEOUT_POSITION_INCOMPLETE_SPECIFICATION",
            "CLOSEOUT_POSITION_UNITS_EXCEED_POSITION_SIZE",
            "CLOSEOUT_POSITION_REJECT",
            "CLOSEOUT_POSITION_PARTIAL_UNITS_MISSING",
            "MARKUP_GROUP_ID_INVALID",
            "POSITION_AGGREGATION_MODE_INVALID",
            "ADMIN_CONFIGURE_DATA_MISSING",
            "MARGIN_RATE_INVALID",
            "MARGIN_RATE_WOULD_TRIGGER_CLOSEOUT",
            "ALIAS_INVALID",
            "CLIENT_CONFIGURE_DATA_MISSING",
            "MARGIN_RATE_WOULD_TRIGGER_MARGIN_CALL",
            "AMOUNT_INVALID",
            "INSUFFICIENT_FUNDS",
            "AMOUNT_MISSING",
            "FUNDING_REASON_MISSING",
            "CLIENT_EXTENSIONS_DATA_MISSING",
            "REPLACING_ORDER_INVALID",
            "REPLACING_TRADE_ID_INVALID"
          ]
        }
      }
    },
    "TrailingStopLossOrderReason": {
      "type": "string",
      "description": "The reason that the Trailing Stop Loss Order was initiated",
      "enum": [
        "CLIENT_ORDER",
        "REPLACEMENT",
        "ON_FILL"
      ]
    },
    "TrailingStopLossOrderTransaction": {
      "type": "object",
      "description": "A TrailingStopLossOrderTransaction represents the creation of a TrailingStopLoss Order in the user's Account.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Transaction's Identifier.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "time": {
          "type": "string",
          "description": "The date/time when the Transaction was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "userID": {
          "type": "integer",
          "description": "The ID of the user that initiated the creation of the Transaction."
        },
        "accountID": {
          "type": "string",
          "description": "The ID of the Account the Transaction was created for.",
          "format": "\"-\"-delimited string with format \"{siteID}-{divisionID}-{userID}-{accountNumber}\""
        },
        "batchID": {
          "type": "string",
          "description": "The ID of the \"batch\" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "requestID": {
          "type": "string",
          "description": "The Request ID of the request which generated the transaction."
        },
        "type": {
          "type": "string",
          "description": "The Type of the Transaction. Always set to \"TRAILING_STOP_LOSS_ORDER\" in a TrailingStopLossOrderTransaction.",
          "enum": [
            "CREATE",
            "CLOSE",
            "REOPEN",
            "CLIENT_CONFIGURE",
            "CLIENT_CONFIGURE_REJECT",
            "TRANSFER_FUNDS",
            "TRANSFER_FUNDS_REJECT",
            "MARKET_ORDER",
            "MARKET_ORDER_REJECT",
            "FIXED_PRICE_ORDER",
            "LIMIT_ORDER",
            "LIMIT_ORDER_REJECT",
            "STOP_ORDER",
            "STOP_ORDER_REJECT",
            "MARKET_IF_TOUCHED_ORDER",
            "MARKET_IF_TOUCHED_ORDER_REJECT",
            "TAKE_PROFIT_ORDER",
            "TAKE_PROFIT_ORDER_REJECT",
            "STOP_LOSS_ORDER",
            "STOP_LOSS_ORDER_REJECT",
            "TRAILING_STOP_LOSS_ORDER",
            "TRAILING_STOP_LOSS_ORDER_REJECT",
            "ORDER_FILL",
            "ORDER_CANCEL",
            "ORDER_CANCEL_REJECT",
            "ORDER_CLIENT_EXTENSIONS_MODIFY",
            "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "TRADE_CLIENT_EXTENSIONS_MODIFY",
            "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "MARGIN_CALL_ENTER",
            "MARGIN_CALL_EXTEND",
            "MARGIN_CALL_EXIT",
            "DELAYED_TRADE_CLOSURE",
            "DAILY_FINANCING",
            "RESET_RESETTABLE_PL"
          ]
        },
        "tradeID": {
          "type": "string",
          "description": "The ID of the Trade to close when the price threshold is breached.",
          "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
        },
        "clientTradeID": {
          "type": "string",
          "description": "The client ID of the Trade to be closed when the price threshold is breached."
        },
        "distance": {
          "type": "string",
          "description": "The price distance (in price units) specified for the TrailingStopLoss Order.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "timeInForce": {
          "type": "string",
          "description": "The time-in-force requested for the TrailingStopLoss Order. Restricted to \"GTC\", \"GFD\" and \"GTD\" for TrailingStopLoss Orders.",
          "enum": [
            "GTC",
            "GTD",
            "GFD",
            "FOK",
            "IOC"
          ]
        },
        "gtdTime": {
          "type": "string",
          "description": "The date/time when the StopLoss Order will be cancelled if its timeInForce is \"GTD\".",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "triggerCondition": {
          "type": "string",
          "description": "Specification of which price component should be used when determining if an Order should be triggered and filled. This allows Orders to be triggered based on the bid, ask, mid, default (ask for buy, bid for sell) or inverse (ask for sell, bid for buy) price depending on the desired behaviour. Orders are always filled using their default price component.\nThis feature is only provided through the REST API. Clients who choose to specify a non-default trigger condition will not see it reflected in any of OANDA's proprietary or partner trading platforms, their transaction history or their account statements. OANDA platforms always assume that an Order's trigger condition is set to the default value when indicating the distance from an Order's trigger price, and will always provide the default trigger condition when creating or modifying an Order.\nA special restriction applies when creating a guaranteed Stop Loss Order. In this case the TriggerCondition value must either be \"DEFAULT\", or the \"natural\" trigger side \"DEFAULT\" results in. So for a Stop Loss Order for a long trade valid values are \"DEFAULT\" and \"BID\", and for short trades \"DEFAULT\" and \"ASK\" are valid.",
          "enum": [
            "DEFAULT",
            "INVERSE",
            "BID",
            "ASK",
            "MID"
          ]
        },
        "reason": {
          "type": "string",
          "description": "The reason that the Trailing Stop Loss Order was initiated",
          "enum": [
            "CLIENT_ORDER",
            "REPLACEMENT",
            "ON_FILL"
          ]
        },
        "clientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "orderFillTransactionID": {
          "type": "string",
          "description": "The ID of the OrderFill Transaction that caused this Order to be created (only provided if this Order was created automatically when another Order was filled).",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "replacesOrderID": {
          "type": "string",
          "description": "The ID of the Order that this Order replaces (only provided if this Order replaces an existing Order).",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        },
        "cancellingTransactionID": {
          "type": "string",
          "description": "The ID of the Transaction that cancels the replaced Order (only provided if this Order replaces an existing Order).",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        }
      }
    },
    "TrailingStopLossOrderRejectTransaction": {
      "type": "object",
      "description": "A TrailingStopLossOrderRejectTransaction represents the rejection of the creation of a TrailingStopLoss Order.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Transaction's Identifier.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "time": {
          "type": "string",
          "description": "The date/time when the Transaction was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "userID": {
          "type": "integer",
          "description": "The ID of the user that initiated the creation of the Transaction."
        },
        "accountID": {
          "type": "string",
          "description": "The ID of the Account the Transaction was created for.",
          "format": "\"-\"-delimited string with format \"{siteID}-{divisionID}-{userID}-{accountNumber}\""
        },
        "batchID": {
          "type": "string",
          "description": "The ID of the \"batch\" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "requestID": {
          "type": "string",
          "description": "The Request ID of the request which generated the transaction."
        },
        "type": {
          "type": "string",
          "description": "The Type of the Transaction. Always set to \"TRAILING_STOP_LOSS_ORDER_REJECT\" in a TrailingStopLossOrderRejectTransaction.",
          "enum": [
            "CREATE",
            "CLOSE",
            "REOPEN",
            "CLIENT_CONFIGURE",
            "CLIENT_CONFIGURE_REJECT",
            "TRANSFER_FUNDS",
            "TRANSFER_FUNDS_REJECT",
            "MARKET_ORDER",
            "MARKET_ORDER_REJECT",
            "FIXED_PRICE_ORDER",
            "LIMIT_ORDER",
            "LIMIT_ORDER_REJECT",
            "STOP_ORDER",
            "STOP_ORDER_REJECT",
            "MARKET_IF_TOUCHED_ORDER",
            "MARKET_IF_TOUCHED_ORDER_REJECT",
            "TAKE_PROFIT_ORDER",
            "TAKE_PROFIT_ORDER_REJECT",
            "STOP_LOSS_ORDER",
            "STOP_LOSS_ORDER_REJECT",
            "TRAILING_STOP_LOSS_ORDER",
            "TRAILING_STOP_LOSS_ORDER_REJECT",
            "ORDER_FILL",
            "ORDER_CANCEL",
            "ORDER_CANCEL_REJECT",
            "ORDER_CLIENT_EXTENSIONS_MODIFY",
            "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "TRADE_CLIENT_EXTENSIONS_MODIFY",
            "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "MARGIN_CALL_ENTER",
            "MARGIN_CALL_EXTEND",
            "MARGIN_CALL_EXIT",
            "DELAYED_TRADE_CLOSURE",
            "DAILY_FINANCING",
            "RESET_RESETTABLE_PL"
          ]
        },
        "tradeID": {
          "type": "string",
          "description": "The ID of the Trade to close when the price threshold is breached.",
          "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
        },
        "clientTradeID": {
          "type": "string",
          "description": "The client ID of the Trade to be closed when the price threshold is breached."
        },
        "distance": {
          "type": "string",
          "description": "The price distance (in price units) specified for the TrailingStopLoss Order.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "timeInForce": {
          "type": "string",
          "description": "The time-in-force requested for the TrailingStopLoss Order. Restricted to \"GTC\", \"GFD\" and \"GTD\" for TrailingStopLoss Orders.",
          "enum": [
            "GTC",
            "GTD",
            "GFD",
            "FOK",
            "IOC"
          ]
        },
        "gtdTime": {
          "type": "string",
          "description": "The date/time when the StopLoss Order will be cancelled if its timeInForce is \"GTD\".",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "triggerCondition": {
          "type": "string",
          "description": "Specification of which price component should be used when determining if an Order should be triggered and filled. This allows Orders to be triggered based on the bid, ask, mid, default (ask for buy, bid for sell) or inverse (ask for sell, bid for buy) price depending on the desired behaviour. Orders are always filled using their default price component.\nThis feature is only provided through the REST API. Clients who choose to specify a non-default trigger condition will not see it reflected in any of OANDA's proprietary or partner trading platforms, their transaction history or their account statements. OANDA platforms always assume that an Order's trigger condition is set to the default value when indicating the distance from an Order's trigger price, and will always provide the default trigger condition when creating or modifying an Order.\nA special restriction applies when creating a guaranteed Stop Loss Order. In this case the TriggerCondition value must either be \"DEFAULT\", or the \"natural\" trigger side \"DEFAULT\" results in. So for a Stop Loss Order for a long trade valid values are \"DEFAULT\" and \"BID\", and for short trades \"DEFAULT\" and \"ASK\" are valid.",
          "enum": [
            "DEFAULT",
            "INVERSE",
            "BID",
            "ASK",
            "MID"
          ]
        },
        "reason": {
          "type": "string",
          "description": "The reason that the Trailing Stop Loss Order was initiated",
          "enum": [
            "CLIENT_ORDER",
            "REPLACEMENT",
            "ON_FILL"
          ]
        },
        "clientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "orderFillTransactionID": {
          "type": "string",
          "description": "The ID of the OrderFill Transaction that caused this Order to be created (only provided if this Order was created automatically when another Order was filled).",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "intendedReplacesOrderID": {
          "type": "string",
          "description": "The ID of the Order that this Order was intended to replace (only provided if this Order was intended to replace an existing Order).",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        },
        "rejectReason": {
          "type": "string",
          "description": "The reason that the Reject Transaction was created",
          "enum": [
            "INTERNAL_SERVER_ERROR",
            "INSTRUMENT_PRICE_UNKNOWN",
            "ACCOUNT_NOT_ACTIVE",
            "ACCOUNT_LOCKED",
            "ACCOUNT_ORDER_CREATION_LOCKED",
            "ACCOUNT_CONFIGURATION_LOCKED",
            "ACCOUNT_DEPOSIT_LOCKED",
            "ACCOUNT_WITHDRAWAL_LOCKED",
            "ACCOUNT_ORDER_CANCEL_LOCKED",
            "INSTRUMENT_NOT_TRADEABLE",
            "PENDING_ORDERS_ALLOWED_EXCEEDED",
            "ORDER_ID_UNSPECIFIED",
            "ORDER_DOESNT_EXIST",
            "ORDER_IDENTIFIER_INCONSISTENCY",
            "TRADE_ID_UNSPECIFIED",
            "TRADE_DOESNT_EXIST",
            "TRADE_IDENTIFIER_INCONSISTENCY",
            "INSUFFICIENT_MARGIN",
            "INSTRUMENT_MISSING",
            "INSTRUMENT_UNKNOWN",
            "UNITS_MISSING",
            "UNITS_INVALID",
            "UNITS_PRECISION_EXCEEDED",
            "UNITS_LIMIT_EXCEEDED",
            "UNITS_MIMIMUM_NOT_MET",
            "PRICE_MISSING",
            "PRICE_INVALID",
            "PRICE_PRECISION_EXCEEDED",
            "PRICE_DISTANCE_MISSING",
            "PRICE_DISTANCE_INVALID",
            "PRICE_DISTANCE_PRECISION_EXCEEDED",
            "PRICE_DISTANCE_MAXIMUM_EXCEEDED",
            "PRICE_DISTANCE_MINIMUM_NOT_MET",
            "TIME_IN_FORCE_MISSING",
            "TIME_IN_FORCE_INVALID",
            "TIME_IN_FORCE_GTD_TIMESTAMP_MISSING",
            "TIME_IN_FORCE_GTD_TIMESTAMP_IN_PAST",
            "PRICE_BOUND_INVALID",
            "PRICE_BOUND_PRECISION_EXCEEDED",
            "ORDERS_ON_FILL_DUPLICATE_CLIENT_ORDER_IDS",
            "TRADE_ON_FILL_CLIENT_EXTENSIONS_NOT_SUPPORTED",
            "CLIENT_ORDER_ID_INVALID",
            "CLIENT_ORDER_ID_ALREADY_EXISTS",
            "CLIENT_ORDER_TAG_INVALID",
            "CLIENT_ORDER_COMMENT_INVALID",
            "CLIENT_TRADE_ID_INVALID",
            "CLIENT_TRADE_ID_ALREADY_EXISTS",
            "CLIENT_TRADE_TAG_INVALID",
            "CLIENT_TRADE_COMMENT_INVALID",
            "ORDER_FILL_POSITION_ACTION_MISSING",
            "ORDER_FILL_POSITION_ACTION_INVALID",
            "TRIGGER_CONDITION_MISSING",
            "TRIGGER_CONDITION_INVALID",
            "ORDER_PARTIAL_FILL_OPTION_MISSING",
            "ORDER_PARTIAL_FILL_OPTION_INVALID",
            "INVALID_REISSUE_IMMEDIATE_PARTIAL_FILL",
            "TAKE_PROFIT_ORDER_ALREADY_EXISTS",
            "TAKE_PROFIT_ON_FILL_PRICE_MISSING",
            "TAKE_PROFIT_ON_FILL_PRICE_INVALID",
            "TAKE_PROFIT_ON_FILL_PRICE_PRECISION_EXCEEDED",
            "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_MISSING",
            "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_INVALID",
            "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_MISSING",
            "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_IN_PAST",
            "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_ID_INVALID",
            "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_TAG_INVALID",
            "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_COMMENT_INVALID",
            "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_MISSING",
            "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_INVALID",
            "STOP_LOSS_ORDER_ALREADY_EXISTS",
            "STOP_LOSS_ORDER_GUARANTEED_REQUIRED",
            "STOP_LOSS_ORDER_GUARANTEED_PRICE_WITHIN_SPREAD",
            "STOP_LOSS_ORDER_GUARANTEED_NOT_ALLOWED",
            "STOP_LOSS_ORDER_GUARANTEED_HALTED_CREATE_VIOLATION",
            "STOP_LOSS_ORDER_GUARANTEED_HALTED_TIGHTEN_VIOLATION",
            "STOP_LOSS_ORDER_GUARANTEED_HEDGING_NOT_ALLOWED",
            "STOP_LOSS_ORDER_GUARANTEED_MINIMUM_DISTANCE_NOT_MET",
            "STOP_LOSS_ORDER_NOT_CANCELABLE",
            "STOP_LOSS_ORDER_NOT_REPLACEABLE",
            "STOP_LOSS_ORDER_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED",
            "STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_SPECIFIED",
            "STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_MISSING",
            "STOP_LOSS_ON_FILL_REQUIRED_FOR_PENDING_ORDER",
            "STOP_LOSS_ON_FILL_GUARANTEED_NOT_ALLOWED",
            "STOP_LOSS_ON_FILL_GUARANTEED_REQUIRED",
            "STOP_LOSS_ON_FILL_PRICE_MISSING",
            "STOP_LOSS_ON_FILL_PRICE_INVALID",
            "STOP_LOSS_ON_FILL_PRICE_PRECISION_EXCEEDED",
            "STOP_LOSS_ON_FILL_GUARANTEED_MINIMUM_DISTANCE_NOT_MET",
            "STOP_LOSS_ON_FILL_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED",
            "STOP_LOSS_ON_FILL_DISTANCE_INVALID",
            "STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED",
            "STOP_LOSS_ON_FILL_DISTANCE_PRECISION_EXCEEDED",
            "STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_SPECIFIED",
            "STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_MISSING",
            "STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING",
            "STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID",
            "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING",
            "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST",
            "STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID",
            "STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID",
            "STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID",
            "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING",
            "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID",
            "TRAILING_STOP_LOSS_ORDER_ALREADY_EXISTS",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_PRECISION_EXCEEDED",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MINIMUM_NOT_MET",
            "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST",
            "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID",
            "TRAILING_STOP_LOSS_ORDERS_NOT_SUPPORTED",
            "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID",
            "CLOSE_TRADE_TYPE_MISSING",
            "CLOSE_TRADE_PARTIAL_UNITS_MISSING",
            "CLOSE_TRADE_UNITS_EXCEED_TRADE_SIZE",
            "CLOSEOUT_POSITION_DOESNT_EXIST",
            "CLOSEOUT_POSITION_INCOMPLETE_SPECIFICATION",
            "CLOSEOUT_POSITION_UNITS_EXCEED_POSITION_SIZE",
            "CLOSEOUT_POSITION_REJECT",
            "CLOSEOUT_POSITION_PARTIAL_UNITS_MISSING",
            "MARKUP_GROUP_ID_INVALID",
            "POSITION_AGGREGATION_MODE_INVALID",
            "ADMIN_CONFIGURE_DATA_MISSING",
            "MARGIN_RATE_INVALID",
            "MARGIN_RATE_WOULD_TRIGGER_CLOSEOUT",
            "ALIAS_INVALID",
            "CLIENT_CONFIGURE_DATA_MISSING",
            "MARGIN_RATE_WOULD_TRIGGER_MARGIN_CALL",
            "AMOUNT_INVALID",
            "INSUFFICIENT_FUNDS",
            "AMOUNT_MISSING",
            "FUNDING_REASON_MISSING",
            "CLIENT_EXTENSIONS_DATA_MISSING",
            "REPLACING_ORDER_INVALID",
            "REPLACING_TRADE_ID_INVALID"
          ]
        }
      }
    },
    "OrderFillReason": {
      "type": "string",
      "description": "The reason that an Order was filled",
      "enum": [
        "LIMIT_ORDER",
        "STOP_ORDER",
        "MARKET_IF_TOUCHED_ORDER",
        "TAKE_PROFIT_ORDER",
        "STOP_LOSS_ORDER",
        "TRAILING_STOP_LOSS_ORDER",
        "MARKET_ORDER",
        "MARKET_ORDER_TRADE_CLOSE",
        "MARKET_ORDER_POSITION_CLOSEOUT",
        "MARKET_ORDER_MARGIN_CLOSEOUT",
        "MARKET_ORDER_DELAYED_TRADE_CLOSE"
      ]
    },
    "OrderFillTransaction": {
      "type": "object",
      "description": "An OrderFillTransaction represents the filling of an Order in the client's Account.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Transaction's Identifier.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "time": {
          "type": "string",
          "description": "The date/time when the Transaction was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "userID": {
          "type": "integer",
          "description": "The ID of the user that initiated the creation of the Transaction."
        },
        "accountID": {
          "type": "string",
          "description": "The ID of the Account the Transaction was created for.",
          "format": "\"-\"-delimited string with format \"{siteID}-{divisionID}-{userID}-{accountNumber}\""
        },
        "batchID": {
          "type": "string",
          "description": "The ID of the \"batch\" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "requestID": {
          "type": "string",
          "description": "The Request ID of the request which generated the transaction."
        },
        "type": {
          "type": "string",
          "description": "The Type of the Transaction. Always set to \"ORDER_FILL\" for an OrderFillTransaction.",
          "enum": [
            "CREATE",
            "CLOSE",
            "REOPEN",
            "CLIENT_CONFIGURE",
            "CLIENT_CONFIGURE_REJECT",
            "TRANSFER_FUNDS",
            "TRANSFER_FUNDS_REJECT",
            "MARKET_ORDER",
            "MARKET_ORDER_REJECT",
            "FIXED_PRICE_ORDER",
            "LIMIT_ORDER",
            "LIMIT_ORDER_REJECT",
            "STOP_ORDER",
            "STOP_ORDER_REJECT",
            "MARKET_IF_TOUCHED_ORDER",
            "MARKET_IF_TOUCHED_ORDER_REJECT",
            "TAKE_PROFIT_ORDER",
            "TAKE_PROFIT_ORDER_REJECT",
            "STOP_LOSS_ORDER",
            "STOP_LOSS_ORDER_REJECT",
            "TRAILING_STOP_LOSS_ORDER",
            "TRAILING_STOP_LOSS_ORDER_REJECT",
            "ORDER_FILL",
            "ORDER_CANCEL",
            "ORDER_CANCEL_REJECT",
            "ORDER_CLIENT_EXTENSIONS_MODIFY",
            "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "TRADE_CLIENT_EXTENSIONS_MODIFY",
            "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "MARGIN_CALL_ENTER",
            "MARGIN_CALL_EXTEND",
            "MARGIN_CALL_EXIT",
            "DELAYED_TRADE_CLOSURE",
            "DAILY_FINANCING",
            "RESET_RESETTABLE_PL"
          ]
        },
        "orderID": {
          "type": "string",
          "description": "The ID of the Order filled.",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        },
        "clientOrderID": {
          "type": "string",
          "description": "The client Order ID of the Order filled (only provided if the client has assigned one)."
        },
        "instrument": {
          "type": "string",
          "description": "The name of the filled Order's instrument.",
          "format": "A string containing the base currency and quote currency delimited by a \"_\"."
        },
        "units": {
          "type": "string",
          "description": "The number of units filled by the OrderFill.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "gainQuoteHomeConversionFactor": {
          "type": "string",
          "description": "This is the conversion factor in effect for the Account at the time of the OrderFill for converting any gains realized in Instrument quote units into units of the Account's home currency.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "lossQuoteHomeConversionFactor": {
          "type": "string",
          "description": "This is the conversion factor in effect for the Account at the time of the OrderFill for converting any losses realized in Instrument quote units into units of the Account's home currency.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "price": {
          "type": "string",
          "description": "This field is now deprecated and should no longer be used. The individual tradesClosed, tradeReduced and tradeOpened fields contain the exact/official price each unit was filled at.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "fullVWAP": {
          "type": "string",
          "description": "The price that all of the units of the OrderFill should have been filled at, in the absence of guaranteed price execution. This factors in the Account's current ClientPrice, used liquidity and the units of the OrderFill only. If no Trades were closed with their price clamped for guaranteed stop loss enforcement, then this value will match the price fields of each Trade opened, closed, and reduced, and they will all be the exact same.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "fullPrice": {
          "$ref": "v20_pricing.json#/definitions/ClientPrice"
        },
        "reason": {
          "type": "string",
          "description": "The reason that an Order was filled",
          "enum": [
            "LIMIT_ORDER",
            "STOP_ORDER",
            "MARKET_IF_TOUCHED_ORDER",
            "TAKE_PROFIT_ORDER",
            "STOP_LOSS_ORDER",
            "TRAILING_STOP_LOSS_ORDER",
            "MARKET_ORDER",
            "MARKET_ORDER_TRADE_CLOSE",
            "MARKET_ORDER_POSITION_CLOSEOUT",
            "MARKET_ORDER_MARGIN_CLOSEOUT",
            "MARKET_ORDER_DELAYED_TRADE_CLOSE"
          ]
        },
        "pl": {
          "type": "string",
          "description": "The profit or loss incurred when the Order was filled.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on the Account's home currency."
        },
        "financing": {
          "type": "string",
          "description": "The financing paid or collected when the Order was filled.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on the Account's home currency."
        },
        "commission": {
          "type": "string",
          "description": "The commission charged in the Account's home currency as a result of filling the Order. The commission is always represented as a positive quantity of the Account's home currency, however it reduces the balance in the Account.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on the Account's home currency."
        },
        "guaranteedExecutionFee": {
          "type": "string",
          "description": "The total guaranteed execution fees charged for all Trades opened, closed or reduced with guaranteed Stop Loss Orders.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on the Account's home currency."
        },
        "accountBalance": {
          "type": "string",
          "description": "The Account's balance after the Order was filled.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on the Account's home currency."
        },
        "tradeOpened": {
          "$ref": "#/definitions/TradeOpen"
        },
        "tradesClosed": {
          "type": "array",
          "description": "The Trades that were closed when the Order was filled (only provided if filling the Order resulted in a closing open Trades).",
          "items": {
            "$ref": "#/definitions/TradeReduce"
          }
        },
        "tradeReduced": {
          "$ref": "#/definitions/TradeReduce"
        },
        "halfSpreadCost": {
          "type": "string",
          "description": "The half spread cost for the OrderFill, which is the sum of the halfSpreadCost values in the tradeOpened, tradesClosed and tradeReduced fields. This can be a positive or negative value and is represented in the home currency of the Account.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on the Account's home currency."
        }
      }
    },
    "OrderCancelReason": {
      "type": "string",
      "description": "The reason that an Order was cancelled.",
      "enum": [
        "INTERNAL_SERVER_ERROR",
        "ACCOUNT_LOCKED",
        "ACCOUNT_NEW_POSITIONS_LOCKED",
        "ACCOUNT_ORDER_CREATION_LOCKED",
        "ACCOUNT_ORDER_FILL_LOCKED",
        "CLIENT_REQUEST",
        "MIGRATION",
        "MARKET_HALTED",
        "LINKED_TRADE_CLOSED",
        "TIME_IN_FORCE_EXPIRED",
        "INSUFFICIENT_MARGIN",
        "FIFO_VIOLATION",
        "BOUNDS_VIOLATION",
        "CLIENT_REQUEST_REPLACED",
        "INSUFFICIENT_LIQUIDITY",
        "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_IN_PAST",
        "TAKE_PROFIT_ON_FILL_LOSS",
        "LOSING_TAKE_PROFIT",
        "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST",
        "STOP_LOSS_ON_FILL_LOSS",
        "STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED",
        "STOP_LOSS_ON_FILL_REQUIRED",
        "STOP_LOSS_ON_FILL_GUARANTEED_REQUIRED",
        "STOP_LOSS_ON_FILL_GUARANTEED_NOT_ALLOWED",
        "STOP_LOSS_ON_FILL_GUARANTEED_MINIMUM_DISTANCE_NOT_MET",
        "STOP_LOSS_ON_FILL_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED",
        "STOP_LOSS_ON_FILL_GUARANTEED_HEDGING_NOT_ALLOWED",
        "STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID",
        "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID",
        "TAKE_PROFIT_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED",
        "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST",
        "CLIENT_TRADE_ID_ALREADY_EXISTS",
        "POSITION_CLOSEOUT_FAILED",
        "OPEN_TRADES_ALLOWED_EXCEEDED",
        "PENDING_ORDERS_ALLOWED_EXCEEDED",
        "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_ID_ALREADY_EXISTS",
        "STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_ALREADY_EXISTS",
        "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_ALREADY_EXISTS",
        "POSITION_SIZE_EXCEEDED",
        "HEDGING_GSLO_VIOLATION",
        "ACCOUNT_POSITION_VALUE_LIMIT_EXCEEDED",
        "INSTRUMENT_BID_REDUCE_ONLY",
        "INSTRUMENT_ASK_REDUCE_ONLY",
        "INSTRUMENT_BID_HALTED",
        "INSTRUMENT_ASK_HALTED",
        "STOP_LOSS_ON_FILL_GUARANTEED_BID_HALTED",
        "STOP_LOSS_ON_FILL_GUARANTEED_ASK_HALTED"
      ]
    },
    "OrderCancelTransaction": {
      "type": "object",
      "description": "An OrderCancelTransaction represents the cancellation of an Order in the client's Account.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Transaction's Identifier.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "time": {
          "type": "string",
          "description": "The date/time when the Transaction was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "userID": {
          "type": "integer",
          "description": "The ID of the user that initiated the creation of the Transaction."
        },
        "accountID": {
          "type": "string",
          "description": "The ID of the Account the Transaction was created for.",
          "format": "\"-\"-delimited string with format \"{siteID}-{divisionID}-{userID}-{accountNumber}\""
        },
        "batchID": {
          "type": "string",
          "description": "The ID of the \"batch\" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "requestID": {
          "type": "string",
          "description": "The Request ID of the request which generated the transaction."
        },
        "type": {
          "type": "string",
          "description": "The Type of the Transaction. Always set to \"ORDER_CANCEL\" for an OrderCancelTransaction.",
          "enum": [
            "CREATE",
            "CLOSE",
            "REOPEN",
            "CLIENT_CONFIGURE",
            "CLIENT_CONFIGURE_REJECT",
            "TRANSFER_FUNDS",
            "TRANSFER_FUNDS_REJECT",
            "MARKET_ORDER",
            "MARKET_ORDER_REJECT",
            "FIXED_PRICE_ORDER",
            "LIMIT_ORDER",
            "LIMIT_ORDER_REJECT",
            "STOP_ORDER",
            "STOP_ORDER_REJECT",
            "MARKET_IF_TOUCHED_ORDER",
            "MARKET_IF_TOUCHED_ORDER_REJECT",
            "TAKE_PROFIT_ORDER",
            "TAKE_PROFIT_ORDER_REJECT",
            "STOP_LOSS_ORDER",
            "STOP_LOSS_ORDER_REJECT",
            "TRAILING_STOP_LOSS_ORDER",
            "TRAILING_STOP_LOSS_ORDER_REJECT",
            "ORDER_FILL",
            "ORDER_CANCEL",
            "ORDER_CANCEL_REJECT",
            "ORDER_CLIENT_EXTENSIONS_MODIFY",
            "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "TRADE_CLIENT_EXTENSIONS_MODIFY",
            "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "MARGIN_CALL_ENTER",
            "MARGIN_CALL_EXTEND",
            "MARGIN_CALL_EXIT",
            "DELAYED_TRADE_CLOSURE",
            "DAILY_FINANCING",
            "RESET_RESETTABLE_PL"
          ]
        },
        "orderID": {
          "type": "string",
          "description": "The ID of the Order cancelled",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        },
        "clientOrderID": {
          "type": "string",
          "description": "The client ID of the Order cancelled (only provided if the Order has a client Order ID).",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        },
        "reason": {
          "type": "string",
          "description": "The reason that the Order was cancelled.",
          "enum": [
            "INTERNAL_SERVER_ERROR",
            "ACCOUNT_LOCKED",
            "ACCOUNT_NEW_POSITIONS_LOCKED",
            "ACCOUNT_ORDER_CREATION_LOCKED",
            "ACCOUNT_ORDER_FILL_LOCKED",
            "CLIENT_REQUEST",
            "MIGRATION",
            "MARKET_HALTED",
            "LINKED_TRADE_CLOSED",
            "TIME_IN_FORCE_EXPIRED",
            "INSUFFICIENT_MARGIN",
            "FIFO_VIOLATION",
            "BOUNDS_VIOLATION",
            "CLIENT_REQUEST_REPLACED",
            "INSUFFICIENT_LIQUIDITY",
            "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_IN_PAST",
            "TAKE_PROFIT_ON_FILL_LOSS",
            "LOSING_TAKE_PROFIT",
            "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST",
            "STOP_LOSS_ON_FILL_LOSS",
            "STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED",
            "STOP_LOSS_ON_FILL_REQUIRED",
            "STOP_LOSS_ON_FILL_GUARANTEED_REQUIRED",
            "STOP_LOSS_ON_FILL_GUARANTEED_NOT_ALLOWED",
            "STOP_LOSS_ON_FILL_GUARANTEED_MINIMUM_DISTANCE_NOT_MET",
            "STOP_LOSS_ON_FILL_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED",
            "STOP_LOSS_ON_FILL_GUARANTEED_HEDGING_NOT_ALLOWED",
            "STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID",
            "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID",
            "TAKE_PROFIT_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED",
            "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST",
            "CLIENT_TRADE_ID_ALREADY_EXISTS",
            "POSITION_CLOSEOUT_FAILED",
            "OPEN_TRADES_ALLOWED_EXCEEDED",
            "PENDING_ORDERS_ALLOWED_EXCEEDED",
            "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_ID_ALREADY_EXISTS",
            "STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_ALREADY_EXISTS",
            "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_ALREADY_EXISTS",
            "POSITION_SIZE_EXCEEDED",
            "HEDGING_GSLO_VIOLATION",
            "ACCOUNT_POSITION_VALUE_LIMIT_EXCEEDED",
            "INSTRUMENT_BID_REDUCE_ONLY",
            "INSTRUMENT_ASK_REDUCE_ONLY",
            "INSTRUMENT_BID_HALTED",
            "INSTRUMENT_ASK_HALTED",
            "STOP_LOSS_ON_FILL_GUARANTEED_BID_HALTED",
            "STOP_LOSS_ON_FILL_GUARANTEED_ASK_HALTED"
          ]
        },
        "replacedByOrderID": {
          "type": "string",
          "description": "The ID of the Order that replaced this Order (only provided if this Order was cancelled for replacement).",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        }
      }
    },
    "OrderCancelRejectTransaction": {
      "type": "object",
      "description": "An OrderCancelRejectTransaction represents the rejection of the cancellation of an Order in the client's Account.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Transaction's Identifier.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "time": {
          "type": "string",
          "description": "The date/time when the Transaction was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "userID": {
          "type": "integer",
          "description": "The ID of the user that initiated the creation of the Transaction."
        },
        "accountID": {
          "type": "string",
          "description": "The ID of the Account the Transaction was created for.",
          "format": "\"-\"-delimited string with format \"{siteID}-{divisionID}-{userID}-{accountNumber}\""
        },
        "batchID": {
          "type": "string",
          "description": "The ID of the \"batch\" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "requestID": {
          "type": "string",
          "description": "The Request ID of the request which generated the transaction."
        },
        "type": {
          "type": "string",
          "description": "The Type of the Transaction. Always set to \"ORDER_CANCEL_REJECT\" for an OrderCancelRejectTransaction.",
          "enum": [
            "CREATE",
            "CLOSE",
            "REOPEN",
            "CLIENT_CONFIGURE",
            "CLIENT_CONFIGURE_REJECT",
            "TRANSFER_FUNDS",
            "TRANSFER_FUNDS_REJECT",
            "MARKET_ORDER",
            "MARKET_ORDER_REJECT",
            "FIXED_PRICE_ORDER",
            "LIMIT_ORDER",
            "LIMIT_ORDER_REJECT",
            "STOP_ORDER",
            "STOP_ORDER_REJECT",
            "MARKET_IF_TOUCHED_ORDER",
            "MARKET_IF_TOUCHED_ORDER_REJECT",
            "TAKE_PROFIT_ORDER",
            "TAKE_PROFIT_ORDER_REJECT",
            "STOP_LOSS_ORDER",
            "STOP_LOSS_ORDER_REJECT",
            "TRAILING_STOP_LOSS_ORDER",
            "TRAILING_STOP_LOSS_ORDER_REJECT",
            "ORDER_FILL",
            "ORDER_CANCEL",
            "ORDER_CANCEL_REJECT",
            "ORDER_CLIENT_EXTENSIONS_MODIFY",
            "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "TRADE_CLIENT_EXTENSIONS_MODIFY",
            "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "MARGIN_CALL_ENTER",
            "MARGIN_CALL_EXTEND",
            "MARGIN_CALL_EXIT",
            "DELAYED_TRADE_CLOSURE",
            "DAILY_FINANCING",
            "RESET_RESETTABLE_PL"
          ]
        },
        "orderID": {
          "type": "string",
          "description": "The ID of the Order intended to be cancelled",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        },
        "clientOrderID": {
          "type": "string",
          "description": "The client ID of the Order intended to be cancelled (only provided if the Order has a client Order ID).",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        },
        "rejectReason": {
          "type": "string",
          "description": "The reason that the Reject Transaction was created",
          "enum": [
            "INTERNAL_SERVER_ERROR",
            "INSTRUMENT_PRICE_UNKNOWN",
            "ACCOUNT_NOT_ACTIVE",
            "ACCOUNT_LOCKED",
            "ACCOUNT_ORDER_CREATION_LOCKED",
            "ACCOUNT_CONFIGURATION_LOCKED",
            "ACCOUNT_DEPOSIT_LOCKED",
            "ACCOUNT_WITHDRAWAL_LOCKED",
            "ACCOUNT_ORDER_CANCEL_LOCKED",
            "INSTRUMENT_NOT_TRADEABLE",
            "PENDING_ORDERS_ALLOWED_EXCEEDED",
            "ORDER_ID_UNSPECIFIED",
            "ORDER_DOESNT_EXIST",
            "ORDER_IDENTIFIER_INCONSISTENCY",
            "TRADE_ID_UNSPECIFIED",
            "TRADE_DOESNT_EXIST",
            "TRADE_IDENTIFIER_INCONSISTENCY",
            "INSUFFICIENT_MARGIN",
            "INSTRUMENT_MISSING",
            "INSTRUMENT_UNKNOWN",
            "UNITS_MISSING",
            "UNITS_INVALID",
            "UNITS_PRECISION_EXCEEDED",
            "UNITS_LIMIT_EXCEEDED",
            "UNITS_MIMIMUM_NOT_MET",
            "PRICE_MISSING",
            "PRICE_INVALID",
            "PRICE_PRECISION_EXCEEDED",
            "PRICE_DISTANCE_MISSING",
            "PRICE_DISTANCE_INVALID",
            "PRICE_DISTANCE_PRECISION_EXCEEDED",
            "PRICE_DISTANCE_MAXIMUM_EXCEEDED",
            "PRICE_DISTANCE_MINIMUM_NOT_MET",
            "TIME_IN_FORCE_MISSING",
            "TIME_IN_FORCE_INVALID",
            "TIME_IN_FORCE_GTD_TIMESTAMP_MISSING",
            "TIME_IN_FORCE_GTD_TIMESTAMP_IN_PAST",
            "PRICE_BOUND_INVALID",
            "PRICE_BOUND_PRECISION_EXCEEDED",
            "ORDERS_ON_FILL_DUPLICATE_CLIENT_ORDER_IDS",
            "TRADE_ON_FILL_CLIENT_EXTENSIONS_NOT_SUPPORTED",
            "CLIENT_ORDER_ID_INVALID",
            "CLIENT_ORDER_ID_ALREADY_EXISTS",
            "CLIENT_ORDER_TAG_INVALID",
            "CLIENT_ORDER_COMMENT_INVALID",
            "CLIENT_TRADE_ID_INVALID",
            "CLIENT_TRADE_ID_ALREADY_EXISTS",
            "CLIENT_TRADE_TAG_INVALID",
            "CLIENT_TRADE_COMMENT_INVALID",
            "ORDER_FILL_POSITION_ACTION_MISSING",
            "ORDER_FILL_POSITION_ACTION_INVALID",
            "TRIGGER_CONDITION_MISSING",
            "TRIGGER_CONDITION_INVALID",
            "ORDER_PARTIAL_FILL_OPTION_MISSING",
            "ORDER_PARTIAL_FILL_OPTION_INVALID",
            "INVALID_REISSUE_IMMEDIATE_PARTIAL_FILL",
            "TAKE_PROFIT_ORDER_ALREADY_EXISTS",
            "TAKE_PROFIT_ON_FILL_PRICE_MISSING",
            "TAKE_PROFIT_ON_FILL_PRICE_INVALID",
            "TAKE_PROFIT_ON_FILL_PRICE_PRECISION_EXCEEDED",
            "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_MISSING",
            "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_INVALID",
            "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_MISSING",
            "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_IN_PAST",
            "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_ID_INVALID",
            "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_TAG_INVALID",
            "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_COMMENT_INVALID",
            "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_MISSING",
            "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_INVALID",
            "STOP_LOSS_ORDER_ALREADY_EXISTS",
            "STOP_LOSS_ORDER_GUARANTEED_REQUIRED",
            "STOP_LOSS_ORDER_GUARANTEED_PRICE_WITHIN_SPREAD",
            "STOP_LOSS_ORDER_GUARANTEED_NOT_ALLOWED",
            "STOP_LOSS_ORDER_GUARANTEED_HALTED_CREATE_VIOLATION",
            "STOP_LOSS_ORDER_GUARANTEED_HALTED_TIGHTEN_VIOLATION",
            "STOP_LOSS_ORDER_GUARANTEED_HEDGING_NOT_ALLOWED",
            "STOP_LOSS_ORDER_GUARANTEED_MINIMUM_DISTANCE_NOT_MET",
            "STOP_LOSS_ORDER_NOT_CANCELABLE",
            "STOP_LOSS_ORDER_NOT_REPLACEABLE",
            "STOP_LOSS_ORDER_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED",
            "STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_SPECIFIED",
            "STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_MISSING",
            "STOP_LOSS_ON_FILL_REQUIRED_FOR_PENDING_ORDER",
            "STOP_LOSS_ON_FILL_GUARANTEED_NOT_ALLOWED",
            "STOP_LOSS_ON_FILL_GUARANTEED_REQUIRED",
            "STOP_LOSS_ON_FILL_PRICE_MISSING",
            "STOP_LOSS_ON_FILL_PRICE_INVALID",
            "STOP_LOSS_ON_FILL_PRICE_PRECISION_EXCEEDED",
            "STOP_LOSS_ON_FILL_GUARANTEED_MINIMUM_DISTANCE_NOT_MET",
            "STOP_LOSS_ON_FILL_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED",
            "STOP_LOSS_ON_FILL_DISTANCE_INVALID",
            "STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED",
            "STOP_LOSS_ON_FILL_DISTANCE_PRECISION_EXCEEDED",
            "STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_SPECIFIED",
            "STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_MISSING",
            "STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING",
            "STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID",
            "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING",
            "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST",
            "STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID",
            "STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID",
            "STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID",
            "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING",
            "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID",
            "TRAILING_STOP_LOSS_ORDER_ALREADY_EXISTS",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_PRECISION_EXCEEDED",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MINIMUM_NOT_MET",
            "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST",
            "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID",
            "TRAILING_STOP_LOSS_ORDERS_NOT_SUPPORTED",
            "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID",
            "CLOSE_TRADE_TYPE_MISSING",
            "CLOSE_TRADE_PARTIAL_UNITS_MISSING",
            "CLOSE_TRADE_UNITS_EXCEED_TRADE_SIZE",
            "CLOSEOUT_POSITION_DOESNT_EXIST",
            "CLOSEOUT_POSITION_INCOMPLETE_SPECIFICATION",
            "CLOSEOUT_POSITION_UNITS_EXCEED_POSITION_SIZE",
            "CLOSEOUT_POSITION_REJECT",
            "CLOSEOUT_POSITION_PARTIAL_UNITS_MISSING",
            "MARKUP_GROUP_ID_INVALID",
            "POSITION_AGGREGATION_MODE_INVALID",
            "ADMIN_CONFIGURE_DATA_MISSING",
            "MARGIN_RATE_INVALID",
            "MARGIN_RATE_WOULD_TRIGGER_CLOSEOUT",
            "ALIAS_INVALID",
            "CLIENT_CONFIGURE_DATA_MISSING",
            "MARGIN_RATE_WOULD_TRIGGER_MARGIN_CALL",
            "AMOUNT_INVALID",
            "INSUFFICIENT_FUNDS",
            "AMOUNT_MISSING",
            "FUNDING_REASON_MISSING",
            "CLIENT_EXTENSIONS_DATA_MISSING",
            "REPLACING_ORDER_INVALID",
            "REPLACING_TRADE_ID_INVALID"
          ]
        }
      }
    },
    "OrderClientExtensionsModifyTransaction": {
      "type": "object",
      "description": "A OrderClientExtensionsModifyTransaction represents the modification of an Order's Client Extensions.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Transaction's Identifier.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "time": {
          "type": "string",
          "description": "The date/time when the Transaction was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "userID": {
          "type": "integer",
          "description": "The ID of the user that initiated the creation of the Transaction."
        },
        "accountID": {
          "type": "string",
          "description": "The ID of the Account the Transaction was created for.",
          "format": "\"-\"-delimited string with format \"{siteID}-{divisionID}-{userID}-{accountNumber}\""
        },
        "batchID": {
          "type": "string",
          "description": "The ID of the \"batch\" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "requestID": {
          "type": "string",
          "description": "The Request ID of the request which generated the transaction."
        },
        "type": {
          "type": "string",
          "description": "The Type of the Transaction. Always set to \"ORDER_CLIENT_EXTENSIONS_MODIFY\" for a OrderClienteExtensionsModifyTransaction.",
          "enum": [
            "CREATE",
            "CLOSE",
            "REOPEN",
            "CLIENT_CONFIGURE",
            "CLIENT_CONFIGURE_REJECT",
            "TRANSFER_FUNDS",
            "TRANSFER_FUNDS_REJECT",
            "MARKET_ORDER",
            "MARKET_ORDER_REJECT",
            "FIXED_PRICE_ORDER",
            "LIMIT_ORDER",
            "LIMIT_ORDER_REJECT",
            "STOP_ORDER",
            "STOP_ORDER_REJECT",
            "MARKET_IF_TOUCHED_ORDER",
            "MARKET_IF_TOUCHED_ORDER_REJECT",
            "TAKE_PROFIT_ORDER",
            "TAKE_PROFIT_ORDER_REJECT",
            "STOP_LOSS_ORDER",
            "STOP_LOSS_ORDER_REJECT",
            "TRAILING_STOP_LOSS_ORDER",
            "TRAILING_STOP_LOSS_ORDER_REJECT",
            "ORDER_FILL",
            "ORDER_CANCEL",
            "ORDER_CANCEL_REJECT",
            "ORDER_CLIENT_EXTENSIONS_MODIFY",
            "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "TRADE_CLIENT_EXTENSIONS_MODIFY",
            "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "MARGIN_CALL_ENTER",
            "MARGIN_CALL_EXTEND",
            "MARGIN_CALL_EXIT",
            "DELAYED_TRADE_CLOSURE",
            "DAILY_FINANCING",
            "RESET_RESETTABLE_PL"
          ]
        },
        "orderID": {
          "type": "string",
          "description": "The ID of the Order who's client extensions are to be modified.",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        },
        "clientOrderID": {
          "type": "string",
          "description": "The original Client ID of the Order who's client extensions are to be modified."
        },
        "clientExtensionsModify": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "tradeClientExtensionsModify": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        }
      }
    },
    "OrderClientExtensionsModifyRejectTransaction": {
      "type": "object",
      "description": "A OrderClientExtensionsModifyRejectTransaction represents the rejection of the modification of an Order's Client Extensions.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Transaction's Identifier.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "time": {
          "type": "string",
          "description": "The date/time when the Transaction was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "userID": {
          "type": "integer",
          "description": "The ID of the user that initiated the creation of the Transaction."
        },
        "accountID": {
          "type": "string",
          "description": "The ID of the Account the Transaction was created for.",
          "format": "\"-\"-delimited string with format \"{siteID}-{divisionID}-{userID}-{accountNumber}\""
        },
        "batchID": {
          "type": "string",
          "description": "The ID of the \"batch\" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "requestID": {
          "type": "string",
          "description": "The Request ID of the request which generated the transaction."
        },
        "type": {
          "type": "string",
          "description": "The Type of the Transaction. Always set to \"ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT\" for a OrderClientExtensionsModifyRejectTransaction.",
          "enum": [
            "CREATE",
            "CLOSE",
            "REOPEN",
            "CLIENT_CONFIGURE",
            "CLIENT_CONFIGURE_REJECT",
            "TRANSFER_FUNDS",
            "TRANSFER_FUNDS_REJECT",
            "MARKET_ORDER",
            "MARKET_ORDER_REJECT",
            "FIXED_PRICE_ORDER",
            "LIMIT_ORDER",
            "LIMIT_ORDER_REJECT",
            "STOP_ORDER",
            "STOP_ORDER_REJECT",
            "MARKET_IF_TOUCHED_ORDER",
            "MARKET_IF_TOUCHED_ORDER_REJECT",
            "TAKE_PROFIT_ORDER",
            "TAKE_PROFIT_ORDER_REJECT",
            "STOP_LOSS_ORDER",
            "STOP_LOSS_ORDER_REJECT",
            "TRAILING_STOP_LOSS_ORDER",
            "TRAILING_STOP_LOSS_ORDER_REJECT",
            "ORDER_FILL",
            "ORDER_CANCEL",
            "ORDER_CANCEL_REJECT",
            "ORDER_CLIENT_EXTENSIONS_MODIFY",
            "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "TRADE_CLIENT_EXTENSIONS_MODIFY",
            "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "MARGIN_CALL_ENTER",
            "MARGIN_CALL_EXTEND",
            "MARGIN_CALL_EXIT",
            "DELAYED_TRADE_CLOSURE",
            "DAILY_FINANCING",
            "RESET_RESETTABLE_PL"
          ]
        },
        "orderID": {
          "type": "string",
          "description": "The ID of the Order who's client extensions are to be modified.",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        },
        "clientOrderID": {
          "type": "string",
          "description": "The original Client ID of the Order who's client extensions are to be modified."
        },
        "clientExtensionsModify": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "tradeClientExtensionsModify": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "rejectReason": {
          "type": "string",
          "description": "The reason that the Reject Transaction was created",
          "enum": [
            "INTERNAL_SERVER_ERROR",
            "INSTRUMENT_PRICE_UNKNOWN",
            "ACCOUNT_NOT_ACTIVE",
            "ACCOUNT_LOCKED",
            "ACCOUNT_ORDER_CREATION_LOCKED",
            "ACCOUNT_CONFIGURATION_LOCKED",
            "ACCOUNT_DEPOSIT_LOCKED",
            "ACCOUNT_WITHDRAWAL_LOCKED",
            "ACCOUNT_ORDER_CANCEL_LOCKED",
            "INSTRUMENT_NOT_TRADEABLE",
            "PENDING_ORDERS_ALLOWED_EXCEEDED",
            "ORDER_ID_UNSPECIFIED",
            "ORDER_DOESNT_EXIST",
            "ORDER_IDENTIFIER_INCONSISTENCY",
            "TRADE_ID_UNSPECIFIED",
            "TRADE_DOESNT_EXIST",
            "TRADE_IDENTIFIER_INCONSISTENCY",
            "INSUFFICIENT_MARGIN",
            "INSTRUMENT_MISSING",
            "INSTRUMENT_UNKNOWN",
            "UNITS_MISSING",
            "UNITS_INVALID",
            "UNITS_PRECISION_EXCEEDED",
            "UNITS_LIMIT_EXCEEDED",
            "UNITS_MIMIMUM_NOT_MET",
            "PRICE_MISSING",
            "PRICE_INVALID",
            "PRICE_PRECISION_EXCEEDED",
            "PRICE_DISTANCE_MISSING",
            "PRICE_DISTANCE_INVALID",
            "PRICE_DISTANCE_PRECISION_EXCEEDED",
            "PRICE_DISTANCE_MAXIMUM_EXCEEDED",
            "PRICE_DISTANCE_MINIMUM_NOT_MET",
            "TIME_IN_FORCE_MISSING",
            "TIME_IN_FORCE_INVALID",
            "TIME_IN_FORCE_GTD_TIMESTAMP_MISSING",
            "TIME_IN_FORCE_GTD_TIMESTAMP_IN_PAST",
            "PRICE_BOUND_INVALID",
            "PRICE_BOUND_PRECISION_EXCEEDED",
            "ORDERS_ON_FILL_DUPLICATE_CLIENT_ORDER_IDS",
            "TRADE_ON_FILL_CLIENT_EXTENSIONS_NOT_SUPPORTED",
            "CLIENT_ORDER_ID_INVALID",
            "CLIENT_ORDER_ID_ALREADY_EXISTS",
            "CLIENT_ORDER_TAG_INVALID",
            "CLIENT_ORDER_COMMENT_INVALID",
            "CLIENT_TRADE_ID_INVALID",
            "CLIENT_TRADE_ID_ALREADY_EXISTS",
            "CLIENT_TRADE_TAG_INVALID",
            "CLIENT_TRADE_COMMENT_INVALID",
            "ORDER_FILL_POSITION_ACTION_MISSING",
            "ORDER_FILL_POSITION_ACTION_INVALID",
            "TRIGGER_CONDITION_MISSING",
            "TRIGGER_CONDITION_INVALID",
            "ORDER_PARTIAL_FILL_OPTION_MISSING",
            "ORDER_PARTIAL_FILL_OPTION_INVALID",
            "INVALID_REISSUE_IMMEDIATE_PARTIAL_FILL",
            "TAKE_PROFIT_ORDER_ALREADY_EXISTS",
            "TAKE_PROFIT_ON_FILL_PRICE_MISSING",
            "TAKE_PROFIT_ON_FILL_PRICE_INVALID",
            "TAKE_PROFIT_ON_FILL_PRICE_PRECISION_EXCEEDED",
            "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_MISSING",
            "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_INVALID",
            "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_MISSING",
            "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_IN_PAST",
            "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_ID_INVALID",
            "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_TAG_INVALID",
            "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_COMMENT_INVALID",
            "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_MISSING",
            "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_INVALID",
            "STOP_LOSS_ORDER_ALREADY_EXISTS",
            "STOP_LOSS_ORDER_GUARANTEED_REQUIRED",
            "STOP_LOSS_ORDER_GUARANTEED_PRICE_WITHIN_SPREAD",
            "STOP_LOSS_ORDER_GUARANTEED_NOT_ALLOWED",
            "STOP_LOSS_ORDER_GUARANTEED_HALTED_CREATE_VIOLATION",
            "STOP_LOSS_ORDER_GUARANTEED_HALTED_TIGHTEN_VIOLATION",
            "STOP_LOSS_ORDER_GUARANTEED_HEDGING_NOT_ALLOWED",
            "STOP_LOSS_ORDER_GUARANTEED_MINIMUM_DISTANCE_NOT_MET",
            "STOP_LOSS_ORDER_NOT_CANCELABLE",
            "STOP_LOSS_ORDER_NOT_REPLACEABLE",
            "STOP_LOSS_ORDER_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED",
            "STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_SPECIFIED",
            "STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_MISSING",
            "STOP_LOSS_ON_FILL_REQUIRED_FOR_PENDING_ORDER",
            "STOP_LOSS_ON_FILL_GUARANTEED_NOT_ALLOWED",
            "STOP_LOSS_ON_FILL_GUARANTEED_REQUIRED",
            "STOP_LOSS_ON_FILL_PRICE_MISSING",
            "STOP_LOSS_ON_FILL_PRICE_INVALID",
            "STOP_LOSS_ON_FILL_PRICE_PRECISION_EXCEEDED",
            "STOP_LOSS_ON_FILL_GUARANTEED_MINIMUM_DISTANCE_NOT_MET",
            "STOP_LOSS_ON_FILL_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED",
            "STOP_LOSS_ON_FILL_DISTANCE_INVALID",
            "STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED",
            "STOP_LOSS_ON_FILL_DISTANCE_PRECISION_EXCEEDED",
            "STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_SPECIFIED",
            "STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_MISSING",
            "STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING",
            "STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID",
            "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING",
            "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST",
            "STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID",
            "STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID",
            "STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID",
            "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING",
            "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID",
            "TRAILING_STOP_LOSS_ORDER_ALREADY_EXISTS",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_PRECISION_EXCEEDED",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MINIMUM_NOT_MET",
            "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST",
            "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID",
            "TRAILING_STOP_LOSS_ORDERS_NOT_SUPPORTED",
            "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID",
            "CLOSE_TRADE_TYPE_MISSING",
            "CLOSE_TRADE_PARTIAL_UNITS_MISSING",
            "CLOSE_TRADE_UNITS_EXCEED_TRADE_SIZE",
            "CLOSEOUT_POSITION_DOESNT_EXIST",
            "CLOSEOUT_POSITION_INCOMPLETE_SPECIFICATION",
            "CLOSEOUT_POSITION_UNITS_EXCEED_POSITION_SIZE",
            "CLOSEOUT_POSITION_REJECT",
            "CLOSEOUT_POSITION_PARTIAL_UNITS_MISSING",
            "MARKUP_GROUP_ID_INVALID",
            "POSITION_AGGREGATION_MODE_INVALID",
            "ADMIN_CONFIGURE_DATA_MISSING",
            "MARGIN_RATE_INVALID",
            "MARGIN_RATE_WOULD_TRIGGER_CLOSEOUT",
            "ALIAS_INVALID",
            "CLIENT_CONFIGURE_DATA_MISSING",
            "MARGIN_RATE_WOULD_TRIGGER_MARGIN_CALL",
            "AMOUNT_INVALID",
            "INSUFFICIENT_FUNDS",
            "AMOUNT_MISSING",
            "FUNDING_REASON_MISSING",
            "CLIENT_EXTENSIONS_DATA_MISSING",
            "REPLACING_ORDER_INVALID",
            "REPLACING_TRADE_ID_INVALID"
          ]
        }
      }
    },
    "TradeClientExtensionsModifyTransaction": {
      "type": "object",
      "description": "A TradeClientExtensionsModifyTransaction represents the modification of a Trade's Client Extensions.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Transaction's Identifier.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "time": {
          "type": "string",
          "description": "The date/time when the Transaction was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "userID": {
          "type": "integer",
          "description": "The ID of the user that initiated the creation of the Transaction."
        },
        "accountID": {
          "type": "string",
          "description": "The ID of the Account the Transaction was created for.",
          "format": "\"-\"-delimited string with format \"{siteID}-{divisionID}-{userID}-{accountNumber}\""
        },
        "batchID": {
          "type": "string",
          "description": "The ID of the \"batch\" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "requestID": {
          "type": "string",
          "description": "The Request ID of the request which generated the transaction."
        },
        "type": {
          "type": "string",
          "description": "The Type of the Transaction. Always set to \"TRADE_CLIENT_EXTENSIONS_MODIFY\" for a TradeClientExtensionsModifyTransaction.",
          "enum": [
            "CREATE",
            "CLOSE",
            "REOPEN",
            "CLIENT_CONFIGURE",
            "CLIENT_CONFIGURE_REJECT",
            "TRANSFER_FUNDS",
            "TRANSFER_FUNDS_REJECT",
            "MARKET_ORDER",
            "MARKET_ORDER_REJECT",
            "FIXED_PRICE_ORDER",
            "LIMIT_ORDER",
            "LIMIT_ORDER_REJECT",
            "STOP_ORDER",
            "STOP_ORDER_REJECT",
            "MARKET_IF_TOUCHED_ORDER",
            "MARKET_IF_TOUCHED_ORDER_REJECT",
            "TAKE_PROFIT_ORDER",
            "TAKE_PROFIT_ORDER_REJECT",
            "STOP_LOSS_ORDER",
            "STOP_LOSS_ORDER_REJECT",
            "TRAILING_STOP_LOSS_ORDER",
            "TRAILING_STOP_LOSS_ORDER_REJECT",
            "ORDER_FILL",
            "ORDER_CANCEL",
            "ORDER_CANCEL_REJECT",
            "ORDER_CLIENT_EXTENSIONS_MODIFY",
            "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "TRADE_CLIENT_EXTENSIONS_MODIFY",
            "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "MARGIN_CALL_ENTER",
            "MARGIN_CALL_EXTEND",
            "MARGIN_CALL_EXIT",
            "DELAYED_TRADE_CLOSURE",
            "DAILY_FINANCING",
            "RESET_RESETTABLE_PL"
          ]
        },
        "tradeID": {
          "type": "string",
          "description": "The ID of the Trade who's client extensions are to be modified.",
          "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
        },
        "clientTradeID": {
          "type": "string",
          "description": "The original Client ID of the Trade who's client extensions are to be modified."
        },
        "tradeClientExtensionsModify": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        }
      }
    },
    "TradeClientExtensionsModifyRejectTransaction": {
      "type": "object",
      "description": "A TradeClientExtensionsModifyRejectTransaction represents the rejection of the modification of a Trade's Client Extensions.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Transaction's Identifier.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "time": {
          "type": "string",
          "description": "The date/time when the Transaction was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "userID": {
          "type": "integer",
          "description": "The ID of the user that initiated the creation of the Transaction."
        },
        "accountID": {
          "type": "string",
          "description": "The ID of the Account the Transaction was created for.",
          "format": "\"-\"-delimited string with format \"{siteID}-{divisionID}-{userID}-{accountNumber}\""
        },
        "batchID": {
          "type": "string",
          "description": "The ID of the \"batch\" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "requestID": {
          "type": "string",
          "description": "The Request ID of the request which generated the transaction."
        },
        "type": {
          "type": "string",
          "description": "The Type of the Transaction. Always set to \"TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT\" for a TradeClientExtensionsModifyRejectTransaction.",
          "enum": [
            "CREATE",
            "CLOSE",
            "REOPEN",
            "CLIENT_CONFIGURE",
            "CLIENT_CONFIGURE_REJECT",
            "TRANSFER_FUNDS",
            "TRANSFER_FUNDS_REJECT",
            "MARKET_ORDER",
            "MARKET_ORDER_REJECT",
            "FIXED_PRICE_ORDER",
            "LIMIT_ORDER",
            "LIMIT_ORDER_REJECT",
            "STOP_ORDER",
            "STOP_ORDER_REJECT",
            "MARKET_IF_TOUCHED_ORDER",
            "MARKET_IF_TOUCHED_ORDER_REJECT",
            "TAKE_PROFIT_ORDER",
            "TAKE_PROFIT_ORDER_REJECT",
            "STOP_LOSS_ORDER",
            "STOP_LOSS_ORDER_REJECT",
            "TRAILING_STOP_LOSS_ORDER",
            "TRAILING_STOP_LOSS_ORDER_REJECT",
            "ORDER_FILL",
            "ORDER_CANCEL",
            "ORDER_CANCEL_REJECT",
            "ORDER_CLIENT_EXTENSIONS_MODIFY",
            "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "TRADE_CLIENT_EXTENSIONS_MODIFY",
            "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "MARGIN_CALL_ENTER",
            "MARGIN_CALL_EXTEND",
            "MARGIN_CALL_EXIT",
            "DELAYED_TRADE_CLOSURE",
            "DAILY_FINANCING",
            "RESET_RESETTABLE_PL"
          ]
        },
        "tradeID": {
          "type": "string",
          "description": "The ID of the Trade who's client extensions are to be modified.",
          "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
        },
        "clientTradeID": {
          "type": "string",
          "description": "The original Client ID of the Trade who's client extensions are to be modified."
        },
        "tradeClientExtensionsModify": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "rejectReason": {
          "type": "string",
          "description": "The reason that the Reject Transaction was created",
          "enum": [
            "INTERNAL_SERVER_ERROR",
            "INSTRUMENT_PRICE_UNKNOWN",
            "ACCOUNT_NOT_ACTIVE",
            "ACCOUNT_LOCKED",
            "ACCOUNT_ORDER_CREATION_LOCKED",
            "ACCOUNT_CONFIGURATION_LOCKED",
            "ACCOUNT_DEPOSIT_LOCKED",
            "ACCOUNT_WITHDRAWAL_LOCKED",
            "ACCOUNT_ORDER_CANCEL_LOCKED",
            "INSTRUMENT_NOT_TRADEABLE",
            "PENDING_ORDERS_ALLOWED_EXCEEDED",
            "ORDER_ID_UNSPECIFIED",
            "ORDER_DOESNT_EXIST",
            "ORDER_IDENTIFIER_INCONSISTENCY",
            "TRADE_ID_UNSPECIFIED",
            "TRADE_DOESNT_EXIST",
            "TRADE_IDENTIFIER_INCONSISTENCY",
            "INSUFFICIENT_MARGIN",
            "INSTRUMENT_MISSING",
            "INSTRUMENT_UNKNOWN",
            "UNITS_MISSING",
            "UNITS_INVALID",
            "UNITS_PRECISION_EXCEEDED",
            "UNITS_LIMIT_EXCEEDED",
            "UNITS_MIMIMUM_NOT_MET",
            "PRICE_MISSING",
            "PRICE_INVALID",
            "PRICE_PRECISION_EXCEEDED",
            "PRICE_DISTANCE_MISSING",
            "PRICE_DISTANCE_INVALID",
            "PRICE_DISTANCE_PRECISION_EXCEEDED",
            "PRICE_DISTANCE_MAXIMUM_EXCEEDED",
            "PRICE_DISTANCE_MINIMUM_NOT_MET",
            "TIME_IN_FORCE_MISSING",
            "TIME_IN_FORCE_INVALID",
            "TIME_IN_FORCE_GTD_TIMESTAMP_MISSING",
            "TIME_IN_FORCE_GTD_TIMESTAMP_IN_PAST",
            "PRICE_BOUND_INVALID",
            "PRICE_BOUND_PRECISION_EXCEEDED",
            "ORDERS_ON_FILL_DUPLICATE_CLIENT_ORDER_IDS",
            "TRADE_ON_FILL_CLIENT_EXTENSIONS_NOT_SUPPORTED",
            "CLIENT_ORDER_ID_INVALID",
            "CLIENT_ORDER_ID_ALREADY_EXISTS",
            "CLIENT_ORDER_TAG_INVALID",
            "CLIENT_ORDER_COMMENT_INVALID",
            "CLIENT_TRADE_ID_INVALID",
            "CLIENT_TRADE_ID_ALREADY_EXISTS",
            "CLIENT_TRADE_TAG_INVALID",
            "CLIENT_TRADE_COMMENT_INVALID",
            "ORDER_FILL_POSITION_ACTION_MISSING",
            "ORDER_FILL_POSITION_ACTION_INVALID",
            "TRIGGER_CONDITION_MISSING",
            "TRIGGER_CONDITION_INVALID",
            "ORDER_PARTIAL_FILL_OPTION_MISSING",
            "ORDER_PARTIAL_FILL_OPTION_INVALID",
            "INVALID_REISSUE_IMMEDIATE_PARTIAL_FILL",
            "TAKE_PROFIT_ORDER_ALREADY_EXISTS",
            "TAKE_PROFIT_ON_FILL_PRICE_MISSING",
            "TAKE_PROFIT_ON_FILL_PRICE_INVALID",
            "TAKE_PROFIT_ON_FILL_PRICE_PRECISION_EXCEEDED",
            "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_MISSING",
            "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_INVALID",
            "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_MISSING",
            "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_IN_PAST",
            "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_ID_INVALID",
            "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_TAG_INVALID",
            "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_COMMENT_INVALID",
            "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_MISSING",
            "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_INVALID",
            "STOP_LOSS_ORDER_ALREADY_EXISTS",
            "STOP_LOSS_ORDER_GUARANTEED_REQUIRED",
            "STOP_LOSS_ORDER_GUARANTEED_PRICE_WITHIN_SPREAD",
            "STOP_LOSS_ORDER_GUARANTEED_NOT_ALLOWED",
            "STOP_LOSS_ORDER_GUARANTEED_HALTED_CREATE_VIOLATION",
            "STOP_LOSS_ORDER_GUARANTEED_HALTED_TIGHTEN_VIOLATION",
            "STOP_LOSS_ORDER_GUARANTEED_HEDGING_NOT_ALLOWED",
            "STOP_LOSS_ORDER_GUARANTEED_MINIMUM_DISTANCE_NOT_MET",
            "STOP_LOSS_ORDER_NOT_CANCELABLE",
            "STOP_LOSS_ORDER_NOT_REPLACEABLE",
            "STOP_LOSS_ORDER_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED",
            "STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_SPECIFIED",
            "STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_MISSING",
            "STOP_LOSS_ON_FILL_REQUIRED_FOR_PENDING_ORDER",
            "STOP_LOSS_ON_FILL_GUARANTEED_NOT_ALLOWED",
            "STOP_LOSS_ON_FILL_GUARANTEED_REQUIRED",
            "STOP_LOSS_ON_FILL_PRICE_MISSING",
            "STOP_LOSS_ON_FILL_PRICE_INVALID",
            "STOP_LOSS_ON_FILL_PRICE_PRECISION_EXCEEDED",
            "STOP_LOSS_ON_FILL_GUARANTEED_MINIMUM_DISTANCE_NOT_MET",
            "STOP_LOSS_ON_FILL_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED",
            "STOP_LOSS_ON_FILL_DISTANCE_INVALID",
            "STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED",
            "STOP_LOSS_ON_FILL_DISTANCE_PRECISION_EXCEEDED",
            "STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_SPECIFIED",
            "STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_MISSING",
            "STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING",
            "STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID",
            "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING",
            "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST",
            "STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID",
            "STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID",
            "STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID",
            "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING",
            "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID",
            "TRAILING_STOP_LOSS_ORDER_ALREADY_EXISTS",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_PRECISION_EXCEEDED",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED",
            "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MINIMUM_NOT_MET",
            "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST",
            "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID",
            "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID",
            "TRAILING_STOP_LOSS_ORDERS_NOT_SUPPORTED",
            "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING",
            "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID",
            "CLOSE_TRADE_TYPE_MISSING",
            "CLOSE_TRADE_PARTIAL_UNITS_MISSING",
            "CLOSE_TRADE_UNITS_EXCEED_TRADE_SIZE",
            "CLOSEOUT_POSITION_DOESNT_EXIST",
            "CLOSEOUT_POSITION_INCOMPLETE_SPECIFICATION",
            "CLOSEOUT_POSITION_UNITS_EXCEED_POSITION_SIZE",
            "CLOSEOUT_POSITION_REJECT",
            "CLOSEOUT_POSITION_PARTIAL_UNITS_MISSING",
            "MARKUP_GROUP_ID_INVALID",
            "POSITION_AGGREGATION_MODE_INVALID",
            "ADMIN_CONFIGURE_DATA_MISSING",
            "MARGIN_RATE_INVALID",
            "MARGIN_RATE_WOULD_TRIGGER_CLOSEOUT",
            "ALIAS_INVALID",
            "CLIENT_CONFIGURE_DATA_MISSING",
            "MARGIN_RATE_WOULD_TRIGGER_MARGIN_CALL",
            "AMOUNT_INVALID",
            "INSUFFICIENT_FUNDS",
            "AMOUNT_MISSING",
            "FUNDING_REASON_MISSING",
            "CLIENT_EXTENSIONS_DATA_MISSING",
            "REPLACING_ORDER_INVALID",
            "REPLACING_TRADE_ID_INVALID"
          ]
        }
      }
    },
    "MarginCallEnterTransaction": {
      "type": "object",
      "description": "A MarginCallEnterTransaction is created when an Account enters the margin call state.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Transaction's Identifier.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "time": {
          "type": "string",
          "description": "The date/time when the Transaction was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "userID": {
          "type": "integer",
          "description": "The ID of the user that initiated the creation of the Transaction."
        },
        "accountID": {
          "type": "string",
          "description": "The ID of the Account the Transaction was created for.",
          "format": "\"-\"-delimited string with format \"{siteID}-{divisionID}-{userID}-{accountNumber}\""
        },
        "batchID": {
          "type": "string",
          "description": "The ID of the \"batch\" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "requestID": {
          "type": "string",
          "description": "The Request ID of the request which generated the transaction."
        },
        "type": {
          "type": "string",
          "description": "The Type of the Transaction. Always set to \"MARGIN_CALL_ENTER\" for an MarginCallEnterTransaction.",
          "enum": [
            "CREATE",
            "CLOSE",
            "REOPEN",
            "CLIENT_CONFIGURE",
            "CLIENT_CONFIGURE_REJECT",
            "TRANSFER_FUNDS",
            "TRANSFER_FUNDS_REJECT",
            "MARKET_ORDER",
            "MARKET_ORDER_REJECT",
            "FIXED_PRICE_ORDER",
            "LIMIT_ORDER",
            "LIMIT_ORDER_REJECT",
            "STOP_ORDER",
            "STOP_ORDER_REJECT",
            "MARKET_IF_TOUCHED_ORDER",
            "MARKET_IF_TOUCHED_ORDER_REJECT",
            "TAKE_PROFIT_ORDER",
            "TAKE_PROFIT_ORDER_REJECT",
            "STOP_LOSS_ORDER",
            "STOP_LOSS_ORDER_REJECT",
            "TRAILING_STOP_LOSS_ORDER",
            "TRAILING_STOP_LOSS_ORDER_REJECT",
            "ORDER_FILL",
            "ORDER_CANCEL",
            "ORDER_CANCEL_REJECT",
            "ORDER_CLIENT_EXTENSIONS_MODIFY",
            "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "TRADE_CLIENT_EXTENSIONS_MODIFY",
            "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "MARGIN_CALL_ENTER",
            "MARGIN_CALL_EXTEND",
            "MARGIN_CALL_EXIT",
            "DELAYED_TRADE_CLOSURE",
            "DAILY_FINANCING",
            "RESET_RESETTABLE_PL"
          ]
        }
      }
    },
    "MarginCallExtendTransaction": {
      "type": "object",
      "description": "A MarginCallExtendTransaction is created when the margin call state for an Account has been extended.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Transaction's Identifier.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "time": {
          "type": "string",
          "description": "The date/time when the Transaction was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "userID": {
          "type": "integer",
          "description": "The ID of the user that initiated the creation of the Transaction."
        },
        "accountID": {
          "type": "string",
          "description": "The ID of the Account the Transaction was created for.",
          "format": "\"-\"-delimited string with format \"{siteID}-{divisionID}-{userID}-{accountNumber}\""
        },
        "batchID": {
          "type": "string",
          "description": "The ID of the \"batch\" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "requestID": {
          "type": "string",
          "description": "The Request ID of the request which generated the transaction."
        },
        "type": {
          "type": "string",
          "description": "The Type of the Transaction. Always set to \"MARGIN_CALL_EXTEND\" for an MarginCallExtendTransaction.",
          "enum": [
            "CREATE",
            "CLOSE",
            "REOPEN",
            "CLIENT_CONFIGURE",
            "CLIENT_CONFIGURE_REJECT",
            "TRANSFER_FUNDS",
            "TRANSFER_FUNDS_REJECT",
            "MARKET_ORDER",
            "MARKET_ORDER_REJECT",
            "FIXED_PRICE_ORDER",
            "LIMIT_ORDER",
            "LIMIT_ORDER_REJECT",
            "STOP_ORDER",
            "STOP_ORDER_REJECT",
            "MARKET_IF_TOUCHED_ORDER",
            "MARKET_IF_TOUCHED_ORDER_REJECT",
            "TAKE_PROFIT_ORDER",
            "TAKE_PROFIT_ORDER_REJECT",
            "STOP_LOSS_ORDER",
            "STOP_LOSS_ORDER_REJECT",
            "TRAILING_STOP_LOSS_ORDER",
            "TRAILING_STOP_LOSS_ORDER_REJECT",
            "ORDER_FILL",
            "ORDER_CANCEL",
            "ORDER_CANCEL_REJECT",
            "ORDER_CLIENT_EXTENSIONS_MODIFY",
            "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "TRADE_CLIENT_EXTENSIONS_MODIFY",
            "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "MARGIN_CALL_ENTER",
            "MARGIN_CALL_EXTEND",
            "MARGIN_CALL_EXIT",
            "DELAYED_TRADE_CLOSURE",
            "DAILY_FINANCING",
            "RESET_RESETTABLE_PL"
          ]
        },
        "extensionNumber": {
          "type": "integer",
          "description": "The number of the extensions to the Account's current margin call that have been applied. This value will be set to 1 for the first MarginCallExtend Transaction"
        }
      }
    },
    "MarginCallExitTransaction": {
      "type": "object",
      "description": "A MarginCallExitnterTransaction is created when an Account leaves the margin call state.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Transaction's Identifier.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "time": {
          "type": "string",
          "description": "The date/time when the Transaction was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "userID": {
          "type": "integer",
          "description": "The ID of the user that initiated the creation of the Transaction."
        },
        "accountID": {
          "type": "string",
          "description": "The ID of the Account the Transaction was created for.",
          "format": "\"-\"-delimited string with format \"{siteID}-{divisionID}-{userID}-{accountNumber}\""
        },
        "batchID": {
          "type": "string",
          "description": "The ID of the \"batch\" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "requestID": {
          "type": "string",
          "description": "The Request ID of the request which generated the transaction."
        },
        "type": {
          "type": "string",
          "description": "The Type of the Transaction. Always set to \"MARGIN_CALL_EXIT\" for an MarginCallExitTransaction.",
          "enum": [
            "CREATE",
            "CLOSE",
            "REOPEN",
            "CLIENT_CONFIGURE",
            "CLIENT_CONFIGURE_REJECT",
            "TRANSFER_FUNDS",
            "TRANSFER_FUNDS_REJECT",
            "MARKET_ORDER",
            "MARKET_ORDER_REJECT",
            "FIXED_PRICE_ORDER",
            "LIMIT_ORDER",
            "LIMIT_ORDER_REJECT",
            "STOP_ORDER",
            "STOP_ORDER_REJECT",
            "MARKET_IF_TOUCHED_ORDER",
            "MARKET_IF_TOUCHED_ORDER_REJECT",
            "TAKE_PROFIT_ORDER",
            "TAKE_PROFIT_ORDER_REJECT",
            "STOP_LOSS_ORDER",
            "STOP_LOSS_ORDER_REJECT",
            "TRAILING_STOP_LOSS_ORDER",
            "TRAILING_STOP_LOSS_ORDER_REJECT",
            "ORDER_FILL",
            "ORDER_CANCEL",
            "ORDER_CANCEL_REJECT",
            "ORDER_CLIENT_EXTENSIONS_MODIFY",
            "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "TRADE_CLIENT_EXTENSIONS_MODIFY",
            "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "MARGIN_CALL_ENTER",
            "MARGIN_CALL_EXTEND",
            "MARGIN_CALL_EXIT",
            "DELAYED_TRADE_CLOSURE",
            "DAILY_FINANCING",
            "RESET_RESETTABLE_PL"
          ]
        }
      }
    },
    "DelayedTradeClosureTransaction": {
      "type": "object",
      "description": "A DelayedTradeClosure Transaction is created administratively to indicate open trades that should have been closed but weren't because the open trades' instruments were untradeable at the time. Open trades listed in this transaction will be closed once their respective instruments become tradeable.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Transaction's Identifier.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "time": {
          "type": "string",
          "description": "The date/time when the Transaction was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "userID": {
          "type": "integer",
          "description": "The ID of the user that initiated the creation of the Transaction."
        },
        "accountID": {
          "type": "string",
          "description": "The ID of the Account the Transaction was created for.",
          "format": "\"-\"-delimited string with format \"{siteID}-{divisionID}-{userID}-{accountNumber}\""
        },
        "batchID": {
          "type": "string",
          "description": "The ID of the \"batch\" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "requestID": {
          "type": "string",
          "description": "The Request ID of the request which generated the transaction."
        },
        "type": {
          "type": "string",
          "description": "The Type of the Transaction. Always set to \"DELAYED_TRADE_CLOSURE\" for an DelayedTradeClosureTransaction.",
          "enum": [
            "CREATE",
            "CLOSE",
            "REOPEN",
            "CLIENT_CONFIGURE",
            "CLIENT_CONFIGURE_REJECT",
            "TRANSFER_FUNDS",
            "TRANSFER_FUNDS_REJECT",
            "MARKET_ORDER",
            "MARKET_ORDER_REJECT",
            "FIXED_PRICE_ORDER",
            "LIMIT_ORDER",
            "LIMIT_ORDER_REJECT",
            "STOP_ORDER",
            "STOP_ORDER_REJECT",
            "MARKET_IF_TOUCHED_ORDER",
            "MARKET_IF_TOUCHED_ORDER_REJECT",
            "TAKE_PROFIT_ORDER",
            "TAKE_PROFIT_ORDER_REJECT",
            "STOP_LOSS_ORDER",
            "STOP_LOSS_ORDER_REJECT",
            "TRAILING_STOP_LOSS_ORDER",
            "TRAILING_STOP_LOSS_ORDER_REJECT",
            "ORDER_FILL",
            "ORDER_CANCEL",
            "ORDER_CANCEL_REJECT",
            "ORDER_CLIENT_EXTENSIONS_MODIFY",
            "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "TRADE_CLIENT_EXTENSIONS_MODIFY",
            "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "MARGIN_CALL_ENTER",
            "MARGIN_CALL_EXTEND",
            "MARGIN_CALL_EXIT",
            "DELAYED_TRADE_CLOSURE",
            "DAILY_FINANCING",
            "RESET_RESETTABLE_PL"
          ]
        },
        "reason": {
          "type": "string",
          "description": "The reason for the delayed trade closure",
          "enum": [
            "CLIENT_ORDER",
            "TRADE_CLOSE",
            "POSITION_CLOSEOUT",
            "MARGIN_CLOSEOUT",
            "DELAYED_TRADE_CLOSE"
          ]
        },
        "tradeIDs": {
          "type": "string",
          "description": "List of Trade ID's identifying the open trades that will be closed when their respective instruments become tradeable",
          "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
        }
      }
    },
    "DailyFinancingTransaction": {
      "type": "object",
      "description": "A DailyFinancingTransaction represents the daily payment/collection of financing for an Account.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Transaction's Identifier.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "time": {
          "type": "string",
          "description": "The date/time when the Transaction was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "userID": {
          "type": "integer",
          "description": "The ID of the user that initiated the creation of the Transaction."
        },
        "accountID": {
          "type": "string",
          "description": "The ID of the Account the Transaction was created for.",
          "format": "\"-\"-delimited string with format \"{siteID}-{divisionID}-{userID}-{accountNumber}\""
        },
        "batchID": {
          "type": "string",
          "description": "The ID of the \"batch\" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "requestID": {
          "type": "string",
          "description": "The Request ID of the request which generated the transaction."
        },
        "type": {
          "type": "string",
          "description": "The Type of the Transaction. Always set to \"DAILY_FINANCING\" for a DailyFinancingTransaction.",
          "enum": [
            "CREATE",
            "CLOSE",
            "REOPEN",
            "CLIENT_CONFIGURE",
            "CLIENT_CONFIGURE_REJECT",
            "TRANSFER_FUNDS",
            "TRANSFER_FUNDS_REJECT",
            "MARKET_ORDER",
            "MARKET_ORDER_REJECT",
            "FIXED_PRICE_ORDER",
            "LIMIT_ORDER",
            "LIMIT_ORDER_REJECT",
            "STOP_ORDER",
            "STOP_ORDER_REJECT",
            "MARKET_IF_TOUCHED_ORDER",
            "MARKET_IF_TOUCHED_ORDER_REJECT",
            "TAKE_PROFIT_ORDER",
            "TAKE_PROFIT_ORDER_REJECT",
            "STOP_LOSS_ORDER",
            "STOP_LOSS_ORDER_REJECT",
            "TRAILING_STOP_LOSS_ORDER",
            "TRAILING_STOP_LOSS_ORDER_REJECT",
            "ORDER_FILL",
            "ORDER_CANCEL",
            "ORDER_CANCEL_REJECT",
            "ORDER_CLIENT_EXTENSIONS_MODIFY",
            "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "TRADE_CLIENT_EXTENSIONS_MODIFY",
            "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "MARGIN_CALL_ENTER",
            "MARGIN_CALL_EXTEND",
            "MARGIN_CALL_EXIT",
            "DELAYED_TRADE_CLOSURE",
            "DAILY_FINANCING",
            "RESET_RESETTABLE_PL"
          ]
        },
        "financing": {
          "type": "string",
          "description": "The amount of financing paid/collected for the Account.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on the Account's home currency."
        },
        "accountBalance": {
          "type": "string",
          "description": "The Account's balance after daily financing.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on the Account's home currency."
        },
        "accountFinancingMode": {
          "type": "string",
          "description": "The account financing mode at the time of the daily financing.",
          "enum": [
            "NO_FINANCING",
            "SECOND_BY_SECOND",
            "DAILY"
          ]
        },
        "positionFinancings": {
          "type": "array",
          "description": "The financing paid/collected for each Position in the Account.",
          "items": {
            "$ref": "#/definitions/PositionFinancing"
          }
        }
      }
    },
    "ResetResettablePLTransaction": {
      "type": "object",
      "description": "A ResetResettablePLTransaction represents the resetting of the Account's resettable PL counters.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Transaction's Identifier.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "time": {
          "type": "string",
          "description": "The date/time when the Transaction was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "userID": {
          "type": "integer",
          "description": "The ID of the user that initiated the creation of the Transaction."
        },
        "accountID": {
          "type": "string",
          "description": "The ID of the Account the Transaction was created for.",
          "format": "\"-\"-delimited string with format \"{siteID}-{divisionID}-{userID}-{accountNumber}\""
        },
        "batchID": {
          "type": "string",
          "description": "The ID of the \"batch\" that the Transaction belongs to. Transactions in the same batch are applied to the Account simultaneously.",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "requestID": {
          "type": "string",
          "description": "The Request ID of the request which generated the transaction."
        },
        "type": {
          "type": "string",
          "description": "The Type of the Transaction. Always set to \"RESET_RESETTABLE_PL\" for a ResetResettablePLTransaction.",
          "enum": [
            "CREATE",
            "CLOSE",
            "REOPEN",
            "CLIENT_CONFIGURE",
            "CLIENT_CONFIGURE_REJECT",
            "TRANSFER_FUNDS",
            "TRANSFER_FUNDS_REJECT",
            "MARKET_ORDER",
            "MARKET_ORDER_REJECT",
            "FIXED_PRICE_ORDER",
            "LIMIT_ORDER",
            "LIMIT_ORDER_REJECT",
            "STOP_ORDER",
            "STOP_ORDER_REJECT",
            "MARKET_IF_TOUCHED_ORDER",
            "MARKET_IF_TOUCHED_ORDER_REJECT",
            "TAKE_PROFIT_ORDER",
            "TAKE_PROFIT_ORDER_REJECT",
            "STOP_LOSS_ORDER",
            "STOP_LOSS_ORDER_REJECT",
            "TRAILING_STOP_LOSS_ORDER",
            "TRAILING_STOP_LOSS_ORDER_REJECT",
            "ORDER_FILL",
            "ORDER_CANCEL",
            "ORDER_CANCEL_REJECT",
            "ORDER_CLIENT_EXTENSIONS_MODIFY",
            "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "TRADE_CLIENT_EXTENSIONS_MODIFY",
            "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT",
            "MARGIN_CALL_ENTER",
            "MARGIN_CALL_EXTEND",
            "MARGIN_CALL_EXIT",
            "DELAYED_TRADE_CLOSURE",
            "DAILY_FINANCING",
            "RESET_RESETTABLE_PL"
          ]
        }
      }
    },
    "ClientID": {
      "type": "string",
      "description": "A client-provided identifier, used by clients to refer to their Orders or Trades with an identifier that they have provided."
    },
    "ClientTag": {
      "type": "string",
      "description": "A client-provided tag that can contain any data and may be assigned to their Orders or Trades. Tags are typically used to associate groups of Trades and/or Orders together."
    },
    "ClientComment": {
      "type": "string",
      "description": "A client-provided comment that can contain any data and may be assigned to their Orders or Trades. Comments are typically used to provide extra context or meaning to an Order or Trade."
    },
    "ClientExtensions": {
      "type": "object",
      "description": "A ClientExtensions object allows a client to attach a clientID, tag and comment to Orders and Trades in their Account.  Do not set, modify, or delete this field if your account is associated with MT4.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Client ID of the Order/Trade"
        },
        "tag": {
          "type": "string",
          "description": "A tag associated with the Order/Trade"
        },
        "comment": {
          "type": "string",
          "description": "A comment associated with the Order/Trade"
        }
      }
    },
    "TakeProfitDetails": {
      "type": "object",
      "description": "TakeProfitDetails specifies the details of a Take Profit Order to be created on behalf of a client. This may happen when an Order is filled that opens a Trade requiring a Take Profit, or when a Trade's dependent Take Profit Order is modified directly through the Trade.",
      "properties": {
        "price": {
          "type": "string",
          "description": "The price that the Take Profit Order will be triggered at. Only one of the price and distance fields may be specified.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "timeInForce": {
          "type": "string",
          "description": "The time in force for the created Take Profit Order. This may only be GTC, GTD or GFD.",
          "enum": [
            "GTC",
            "GTD",
            "GFD",
            "FOK",
            "IOC"
          ]
        },
        "gtdTime": {
          "type": "string",
          "description": "The date when the Take Profit Order will be cancelled on if timeInForce is GTD.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "clientExtensions": {
          "$ref": "#/definitions/ClientExtensions"
        }
      }
    },
    "StopLossDetails": {
      "type": "object",
      "description": "StopLossDetails specifies the details of a Stop Loss Order to be created on behalf of a client. This may happen when an Order is filled that opens a Trade requiring a Stop Loss, or when a Trade's dependent Stop Loss Order is modified directly through the Trade.",
      "properties": {
        "price": {
          "type": "string",
          "description": "The price that the Stop Loss Order will be triggered at. Only one of the price and distance fields may be specified.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "distance": {
          "type": "string",
          "description": "Specifies the distance (in price units) from the Trade's open price to use as the Stop Loss Order price. Only one of the distance and price fields may be specified.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "timeInForce": {
          "type": "string",
          "description": "The time in force for the created Stop Loss Order. This may only be GTC, GTD or GFD.",
          "enum": [
            "GTC",
            "GTD",
            "GFD",
            "FOK",
            "IOC"
          ]
        },
        "gtdTime": {
          "type": "string",
          "description": "The date when the Stop Loss Order will be cancelled on if timeInForce is GTD.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "clientExtensions": {
          "$ref": "#/definitions/ClientExtensions"
        },
        "guaranteed": {
          "type": "boolean",
          "description": "Flag indicating that the price for the Stop Loss Order is guaranteed. The default value depends on the GuaranteedStopLossOrderMode of the account, if it is REQUIRED, the default will be true, for DISABLED or ENABLED the default is false."
        }
      }
    },
    "TrailingStopLossDetails": {
      "type": "object",
      "description": "TrailingStopLossDetails specifies the details of a Trailing Stop Loss Order to be created on behalf of a client. This may happen when an Order is filled that opens a Trade requiring a Trailing Stop Loss, or when a Trade's dependent Trailing Stop Loss Order is modified directly through the Trade.",
      "properties": {
        "distance": {
          "type": "string",
          "description": "The distance (in price units) from the Trade's fill price that the Trailing Stop Loss Order will be triggered at.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "timeInForce": {
          "type": "string",
          "description": "The time in force for the created Trailing Stop Loss Order. This may only be GTC, GTD or GFD.",
          "enum": [
            "GTC",
            "GTD",
            "GFD",
            "FOK",
            "IOC"
          ]
        },
        "gtdTime": {
          "type": "string",
          "description": "The date when the Trailing Stop Loss Order will be cancelled on if timeInForce is GTD.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "clientExtensions": {
          "$ref": "#/definitions/ClientExtensions"
        }
      }
    },
    "TradeOpen": {
      "type": "object",
      "description": "A TradeOpen object represents a Trade for an instrument that was opened in an Account. It is found embedded in Transactions that affect the position of an instrument in the Account, specifically the OrderFill Transaction.",
      "properties": {
        "tradeID": {
          "type": "string",
          "description": "The ID of the Trade that was opened",
          "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
        },
        "units": {
          "type": "string",
          "description": "The number of units opened by the Trade",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "price": {
          "type": "string",
          "description": "The average price that the units were opened at.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "guaranteedExecutionFee": {
          "type": "string",
          "description": "This is the fee charged for opening the trade if it has a guaranteed Stop Loss Order attached to it.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on the Account's home currency."
        },
        "clientExtensions": {
          "$ref": "#/definitions/ClientExtensions"
        },
        "halfSpreadCost": {
          "type": "string",
          "description": "The half spread cost for the trade open. This can be a positive or negative value and is represented in the home currency of the Account.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on the Account's home currency."
        },
        "initialMarginRequired": {
          "type": "string",
          "description": "The margin required at the time the Trade was created. Note, this is the 'pure' margin required, it is not the 'effective' margin used that factors in the trade risk if a GSLO is attached to the trade.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on the Account's home currency."
        }
      }
    },
    "TradeReduce": {
      "type": "object",
      "description": "A TradeReduce object represents a Trade for an instrument that was reduced (either partially or fully) in an Account. It is found embedded in Transactions that affect the position of an instrument in the account, specifically the OrderFill Transaction.",
      "properties": {
        "tradeID": {
          "type": "string",
          "description": "The ID of the Trade that was reduced or closed",
          "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
        },
        "units": {
          "type": "string",
          "description": "The number of units that the Trade was reduced by",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "price": {
          "type": "string",
          "description": "The average price that the units were closed at. This price may be clamped for guaranteed Stop Loss Orders.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "realizedPL": {
          "type": "string",
          "description": "The PL realized when reducing the Trade",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on the Account's home currency."
        },
        "financing": {
          "type": "string",
          "description": "The financing paid/collected when reducing the Trade",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on the Account's home currency."
        },
        "guaranteedExecutionFee": {
          "type": "string",
          "description": "This is the fee that is charged for closing the Trade if it has a guaranteed Stop Loss Order attached to it.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on the Account's home currency."
        },
        "halfSpreadCost": {
          "type": "string",
          "description": "The half spread cost for the trade reduce/close. This can be a positive or negative value and is represented in the home currency of the Account.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on the Account's home currency."
        }
      }
    },
    "MarketOrderTradeClose": {
      "type": "object",
      "description": "A MarketOrderTradeClose specifies the extensions to a Market Order that has been created specifically to close a Trade.",
      "properties": {
        "tradeID": {
          "type": "string",
          "description": "The ID of the Trade requested to be closed",
          "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
        },
        "clientTradeID": {
          "type": "string",
          "description": "The client ID of the Trade requested to be closed"
        },
        "units": {
          "type": "string",
          "description": "Indication of how much of the Trade to close. Either \"ALL\", or a DecimalNumber reflection a partial close of the Trade."
        }
      }
    },
    "MarketOrderMarginCloseout": {
      "type": "object",
      "description": "Details for the Market Order extensions specific to a Market Order placed that is part of a Market Order Margin Closeout in a client's account",
      "properties": {
        "reason": {
          "type": "string",
          "description": "The reason the Market Order was created to perform a margin closeout",
          "enum": [
            "MARGIN_CHECK_VIOLATION",
            "REGULATORY_MARGIN_CALL_VIOLATION",
            "REGULATORY_MARGIN_CHECK_VIOLATION"
          ]
        }
      }
    },
    "MarketOrderMarginCloseoutReason": {
      "type": "string",
      "description": "The reason that the Market Order was created to perform a margin closeout",
      "enum": [
        "MARGIN_CHECK_VIOLATION",
        "REGULATORY_MARGIN_CALL_VIOLATION",
        "REGULATORY_MARGIN_CHECK_VIOLATION"
      ]
    },
    "MarketOrderDelayedTradeClose": {
      "type": "object",
      "description": "Details for the Market Order extensions specific to a Market Order placed with the intent of fully closing a specific open trade that should have already been closed but wasn't due to halted market conditions",
      "properties": {
        "tradeID": {
          "type": "string",
          "description": "The ID of the Trade being closed",
          "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
        },
        "clientTradeID": {
          "type": "string",
          "description": "The Client ID of the Trade being closed",
          "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
        },
        "sourceTransactionID": {
          "type": "string",
          "description": "The Transaction ID of the DelayedTradeClosure transaction to which this Delayed Trade Close belongs to",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        }
      }
    },
    "MarketOrderPositionCloseout": {
      "type": "object",
      "description": "A MarketOrderPositionCloseout specifies the extensions to a Market Order when it has been created to closeout a specific Position.",
      "properties": {
        "instrument": {
          "type": "string",
          "description": "The instrument of the Position being closed out.",
          "format": "A string containing the base currency and quote currency delimited by a \"_\"."
        },
        "units": {
          "type": "string",
          "description": "Indication of how much of the Position to close. Either \"ALL\", or a DecimalNumber reflection a partial close of the Trade. The DecimalNumber must always be positive, and represent a number that doesn't exceed the absolute size of the Position."
        }
      }
    },
    "LiquidityRegenerationSchedule": {
      "type": "object",
      "description": "A LiquidityRegenerationSchedule indicates how liquidity that is used when filling an Order for an instrument is regenerated following the fill.  A liquidity regeneration schedule will be in effect until the timestamp of its final step, but may be replaced by a schedule created for an Order of the same instrument that is filled while it is still in effect.",
      "properties": {
        "steps": {
          "type": "array",
          "description": "The steps in the Liquidity Regeneration Schedule",
          "items": {
            "$ref": "#/definitions/LiquidityRegenerationScheduleStep"
          }
        }
      }
    },
    "LiquidityRegenerationScheduleStep": {
      "type": "object",
      "description": "A liquidity regeneration schedule Step indicates the amount of bid and ask liquidity that is used by the Account at a certain time. These amounts will only change at the timestamp of the following step.",
      "properties": {
        "timestamp": {
          "type": "string",
          "description": "The timestamp of the schedule step.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "bidLiquidityUsed": {
          "type": "string",
          "description": "The amount of bid liquidity used at this step in the schedule.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "askLiquidityUsed": {
          "type": "string",
          "description": "The amount of ask liquidity used at this step in the schedule.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        }
      }
    },
    "OpenTradeFinancing": {
      "type": "object",
      "description": "OpenTradeFinancing is used to pay/collect daily financing charge for an open Trade within an Account",
      "properties": {
        "tradeID": {
          "type": "string",
          "description": "The ID of the Trade that financing is being paid/collected for.",
          "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
        },
        "financing": {
          "type": "string",
          "description": "The amount of financing paid/collected for the Trade.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on the Account's home currency."
        }
      }
    },
    "PositionFinancing": {
      "type": "object",
      "description": "OpenTradeFinancing is used to pay/collect daily financing charge for a Position within an Account",
      "properties": {
        "instrument": {
          "type": "string",
          "description": "The instrument of the Position that financing is being paid/collected for.",
          "format": "A string containing the base currency and quote currency delimited by a \"_\"."
        },
        "financing": {
          "type": "string",
          "description": "The amount of financing paid/collected for the Position.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on the Account's home currency."
        },
        "openTradeFinancings": {
          "type": "array",
          "description": "The financing paid/collecte for each open Trade within the Position.",
          "items": {
            "$ref": "#/definitions/OpenTradeFinancing"
          }
        }
      }
    },
    "RequestID": {
      "type": "string",
      "description": "The request identifier."
    },
    "ClientRequestID": {
      "type": "string",
      "description": "A client provided request identifier."
    },
    "TransactionRejectReason": {
      "type": "string",
      "description": "The reason that a Transaction was rejected.",
      "enum": [
        "INTERNAL_SERVER_ERROR",
        "INSTRUMENT_PRICE_UNKNOWN",
        "ACCOUNT_NOT_ACTIVE",
        "ACCOUNT_LOCKED",
        "ACCOUNT_ORDER_CREATION_LOCKED",
        "ACCOUNT_CONFIGURATION_LOCKED",
        "ACCOUNT_DEPOSIT_LOCKED",
        "ACCOUNT_WITHDRAWAL_LOCKED",
        "ACCOUNT_ORDER_CANCEL_LOCKED",
        "INSTRUMENT_NOT_TRADEABLE",
        "PENDING_ORDERS_ALLOWED_EXCEEDED",
        "ORDER_ID_UNSPECIFIED",
        "ORDER_DOESNT_EXIST",
        "ORDER_IDENTIFIER_INCONSISTENCY",
        "TRADE_ID_UNSPECIFIED",
        "TRADE_DOESNT_EXIST",
        "TRADE_IDENTIFIER_INCONSISTENCY",
        "INSUFFICIENT_MARGIN",
        "INSTRUMENT_MISSING",
        "INSTRUMENT_UNKNOWN",
        "UNITS_MISSING",
        "UNITS_INVALID",
        "UNITS_PRECISION_EXCEEDED",
        "UNITS_LIMIT_EXCEEDED",
        "UNITS_MIMIMUM_NOT_MET",
        "PRICE_MISSING",
        "PRICE_INVALID",
        "PRICE_PRECISION_EXCEEDED",
        "PRICE_DISTANCE_MISSING",
        "PRICE_DISTANCE_INVALID",
        "PRICE_DISTANCE_PRECISION_EXCEEDED",
        "PRICE_DISTANCE_MAXIMUM_EXCEEDED",
        "PRICE_DISTANCE_MINIMUM_NOT_MET",
        "TIME_IN_FORCE_MISSING",
        "TIME_IN_FORCE_INVALID",
        "TIME_IN_FORCE_GTD_TIMESTAMP_MISSING",
        "TIME_IN_FORCE_GTD_TIMESTAMP_IN_PAST",
        "PRICE_BOUND_INVALID",
        "PRICE_BOUND_PRECISION_EXCEEDED",
        "ORDERS_ON_FILL_DUPLICATE_CLIENT_ORDER_IDS",
        "TRADE_ON_FILL_CLIENT_EXTENSIONS_NOT_SUPPORTED",
        "CLIENT_ORDER_ID_INVALID",
        "CLIENT_ORDER_ID_ALREADY_EXISTS",
        "CLIENT_ORDER_TAG_INVALID",
        "CLIENT_ORDER_COMMENT_INVALID",
        "CLIENT_TRADE_ID_INVALID",
        "CLIENT_TRADE_ID_ALREADY_EXISTS",
        "CLIENT_TRADE_TAG_INVALID",
        "CLIENT_TRADE_COMMENT_INVALID",
        "ORDER_FILL_POSITION_ACTION_MISSING",
        "ORDER_FILL_POSITION_ACTION_INVALID",
        "TRIGGER_CONDITION_MISSING",
        "TRIGGER_CONDITION_INVALID",
        "ORDER_PARTIAL_FILL_OPTION_MISSING",
        "ORDER_PARTIAL_FILL_OPTION_INVALID",
        "INVALID_REISSUE_IMMEDIATE_PARTIAL_FILL",
        "TAKE_PROFIT_ORDER_ALREADY_EXISTS",
        "TAKE_PROFIT_ON_FILL_PRICE_MISSING",
        "TAKE_PROFIT_ON_FILL_PRICE_INVALID",
        "TAKE_PROFIT_ON_FILL_PRICE_PRECISION_EXCEEDED",
        "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_MISSING",
        "TAKE_PROFIT_ON_FILL_TIME_IN_FORCE_INVALID",
        "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_MISSING",
        "TAKE_PROFIT_ON_FILL_GTD_TIMESTAMP_IN_PAST",
        "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_ID_INVALID",
        "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_TAG_INVALID",
        "TAKE_PROFIT_ON_FILL_CLIENT_ORDER_COMMENT_INVALID",
        "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_MISSING",
        "TAKE_PROFIT_ON_FILL_TRIGGER_CONDITION_INVALID",
        "STOP_LOSS_ORDER_ALREADY_EXISTS",
        "STOP_LOSS_ORDER_GUARANTEED_REQUIRED",
        "STOP_LOSS_ORDER_GUARANTEED_PRICE_WITHIN_SPREAD",
        "STOP_LOSS_ORDER_GUARANTEED_NOT_ALLOWED",
        "STOP_LOSS_ORDER_GUARANTEED_HALTED_CREATE_VIOLATION",
        "STOP_LOSS_ORDER_GUARANTEED_HALTED_TIGHTEN_VIOLATION",
        "STOP_LOSS_ORDER_GUARANTEED_HEDGING_NOT_ALLOWED",
        "STOP_LOSS_ORDER_GUARANTEED_MINIMUM_DISTANCE_NOT_MET",
        "STOP_LOSS_ORDER_NOT_CANCELABLE",
        "STOP_LOSS_ORDER_NOT_REPLACEABLE",
        "STOP_LOSS_ORDER_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED",
        "STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_SPECIFIED",
        "STOP_LOSS_ORDER_PRICE_AND_DISTANCE_BOTH_MISSING",
        "STOP_LOSS_ON_FILL_REQUIRED_FOR_PENDING_ORDER",
        "STOP_LOSS_ON_FILL_GUARANTEED_NOT_ALLOWED",
        "STOP_LOSS_ON_FILL_GUARANTEED_REQUIRED",
        "STOP_LOSS_ON_FILL_PRICE_MISSING",
        "STOP_LOSS_ON_FILL_PRICE_INVALID",
        "STOP_LOSS_ON_FILL_PRICE_PRECISION_EXCEEDED",
        "STOP_LOSS_ON_FILL_GUARANTEED_MINIMUM_DISTANCE_NOT_MET",
        "STOP_LOSS_ON_FILL_GUARANTEED_LEVEL_RESTRICTION_EXCEEDED",
        "STOP_LOSS_ON_FILL_DISTANCE_INVALID",
        "STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED",
        "STOP_LOSS_ON_FILL_DISTANCE_PRECISION_EXCEEDED",
        "STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_SPECIFIED",
        "STOP_LOSS_ON_FILL_PRICE_AND_DISTANCE_BOTH_MISSING",
        "STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING",
        "STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID",
        "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING",
        "STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST",
        "STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID",
        "STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID",
        "STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID",
        "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING",
        "STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID",
        "TRAILING_STOP_LOSS_ORDER_ALREADY_EXISTS",
        "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MISSING",
        "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_INVALID",
        "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_PRECISION_EXCEEDED",
        "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MAXIMUM_EXCEEDED",
        "TRAILING_STOP_LOSS_ON_FILL_PRICE_DISTANCE_MINIMUM_NOT_MET",
        "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_MISSING",
        "TRAILING_STOP_LOSS_ON_FILL_TIME_IN_FORCE_INVALID",
        "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_MISSING",
        "TRAILING_STOP_LOSS_ON_FILL_GTD_TIMESTAMP_IN_PAST",
        "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_ID_INVALID",
        "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_TAG_INVALID",
        "TRAILING_STOP_LOSS_ON_FILL_CLIENT_ORDER_COMMENT_INVALID",
        "TRAILING_STOP_LOSS_ORDERS_NOT_SUPPORTED",
        "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_MISSING",
        "TRAILING_STOP_LOSS_ON_FILL_TRIGGER_CONDITION_INVALID",
        "CLOSE_TRADE_TYPE_MISSING",
        "CLOSE_TRADE_PARTIAL_UNITS_MISSING",
        "CLOSE_TRADE_UNITS_EXCEED_TRADE_SIZE",
        "CLOSEOUT_POSITION_DOESNT_EXIST",
        "CLOSEOUT_POSITION_INCOMPLETE_SPECIFICATION",
        "CLOSEOUT_POSITION_UNITS_EXCEED_POSITION_SIZE",
        "CLOSEOUT_POSITION_REJECT",
        "CLOSEOUT_POSITION_PARTIAL_UNITS_MISSING",
        "MARKUP_GROUP_ID_INVALID",
        "POSITION_AGGREGATION_MODE_INVALID",
        "ADMIN_CONFIGURE_DATA_MISSING",
        "MARGIN_RATE_INVALID",
        "MARGIN_RATE_WOULD_TRIGGER_CLOSEOUT",
        "ALIAS_INVALID",
        "CLIENT_CONFIGURE_DATA_MISSING",
        "MARGIN_RATE_WOULD_TRIGGER_MARGIN_CALL",
        "AMOUNT_INVALID",
        "INSUFFICIENT_FUNDS",
        "AMOUNT_MISSING",
        "FUNDING_REASON_MISSING",
        "CLIENT_EXTENSIONS_DATA_MISSING",
        "REPLACING_ORDER_INVALID",
        "REPLACING_TRADE_ID_INVALID"
      ]
    },
    "TransactionFilter": {
      "type": "string",
      "description": "A filter that can be used when fetching Transactions",
      "enum": [
        "ORDER",
        "FUNDING",
        "ADMIN",
        "CREATE",
        "CLOSE",
        "REOPEN",
        "CLIENT_CONFIGURE",
        "CLIENT_CONFIGURE_REJECT",
        "TRANSFER_FUNDS",
        "TRANSFER_FUNDS_REJECT",
        "MARKET_ORDER",
        "MARKET_ORDER_REJECT",
        "LIMIT_ORDER",
        "LIMIT_ORDER_REJECT",
        "STOP_ORDER",
        "STOP_ORDER_REJECT",
        "MARKET_IF_TOUCHED_ORDER",
        "MARKET_IF_TOUCHED_ORDER_REJECT",
        "TAKE_PROFIT_ORDER",
        "TAKE_PROFIT_ORDER_REJECT",
        "STOP_LOSS_ORDER",
        "STOP_LOSS_ORDER_REJECT",
        "TRAILING_STOP_LOSS_ORDER",
        "TRAILING_STOP_LOSS_ORDER_REJECT",
        "ONE_CANCELS_ALL_ORDER",
        "ONE_CANCELS_ALL_ORDER_REJECT",
        "ONE_CANCELS_ALL_ORDER_TRIGGERED",
        "ORDER_FILL",
        "ORDER_CANCEL",
        "ORDER_CANCEL_REJECT",
        "ORDER_CLIENT_EXTENSIONS_MODIFY",
        "ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT",
        "TRADE_CLIENT_EXTENSIONS_MODIFY",
        "TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT",
        "MARGIN_CALL_ENTER",
        "MARGIN_CALL_EXTEND",
        "MARGIN_CALL_EXIT",
        "DELAYED_TRADE_CLOSURE",
        "DAILY_FINANCING",
        "RESET_RESETTABLE_PL"
      ]
    },
    "TransactionHeartbeat": {
      "type": "object",
      "description": "A TransactionHeartbeat object is injected into the Transaction stream to ensure that the HTTP connection remains active.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The string \"HEARTBEAT\""
        },
        "lastTransactionID": {
          "type": "string",
          "description": "The ID of the most recent Transaction created for the Account",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "time": {
          "type": "string",
          "description": "The date/time when the TransactionHeartbeat was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        }
      }
    }
  },
  "parameters": {
    "transactionIDPathParam": {
      "name": "transactionID",
      "description": "A Transaction ID",
      "in": "path",
      "type": "string",
      "format": "String representation of the numerical OANDA-assigned TransactionID",
      "required": true
    }
  },
  "responses": {
    "400": {
      "description": "Bad Request. The client has provided invalid data to be processed by the server.",
      "headers": {
        "RequestID": {
          "description": "The unique identifier generated for the request",
          "type": "string"
        }
      },
      "schema": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string",
            "description": "The code of the error that has occurred. This field may not be returned for some errors."
          },
          "errorMessage": {
            "type": "string",
            "description": "The human-readable description of the error that has occurred."
          }
        }
      }
    },
    "401": {
      "description": "Unauthorized. The endpoint being access required the client to authenticated, however the the authentication token is invalid or has not been provided.",
      "headers": {
        "RequestID": {
          "description": "The unique identifier generated for the request",
          "type": "string"
        }
      },
      "schema": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string",
            "description": "The code of the error that has occurred. This field may not be returned for some errors."
          },
          "errorMessage": {
            "type": "string",
            "description": "The human-readable description of the error that has occurred."
          }
        }
      }
    },
    "403": {
      "description": "Forbidden. The client has provided a token that does not authorize them to perform the action implemented by the API endpoint.",
      "headers": {
        "RequestID": {
          "description": "The unique identifier generated for the request",
          "type": "string"
        }
      },
      "schema": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string",
            "description": "The code of the error that has occurred. This field may not be returned for some errors."
          },
          "errorMessage": {
            "type": "string",
            "description": "The human-readable description of the error that has occurred."
          }
        }
      }
    },
    "404": {
      "description": "Not Found. The client has attempted to access an entity that does not exist.",
      "headers": {
        "RequestID": {
          "description": "The unique identifier generated for the request",
          "type": "string"
        }
      },
      "schema": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string",
            "description": "The code of the error that has occurred. This field may not be returned for some errors."
          },
          "errorMessage": {
            "type": "string",
            "description": "The human-readable description of the error that has occurred."
          }
        }
      }
    },
    "405": {
      "description": "Method Not Allowed. The client has attempted to access an endpoint using an HTTP method that is not supported.",
      "headers": {
        "RequestID": {
          "description": "The unique identifier generated for the request",
          "type": "string"
        }
      },
      "schema": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string",
            "description": "The code of the error that has occurred. This field may not be returned for some errors."
          },
          "errorMessage": {
            "type": "string",
            "description": "The human-readable description of the error that has occurred."
          }
        }
      }
    },
    "416": {
      "description": "Range Not Satisfiable. The client has specified a range that is invalid or cannot be processed.",
      "headers": {
        "RequestID": {
          "description": "The unique identifier generated for the request",
          "type": "string"
        }
      },
      "schema": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string",
            "description": "The code of the error that has occurred. This field may not be returned for some errors."
          },
          "errorMessage": {
            "type": "string",
            "description": "The human-readable description of the error that has occurred."
          }
        }
      }
    }
  }
}
