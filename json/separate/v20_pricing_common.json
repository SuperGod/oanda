{
  "swagger": "2.0",
  "info": {
    "title": "OANDA v20 Common Order Definitions",
    "description": "v20 Order properties that are common across multiple Order Types, used as building blocks for Other definitions.",
    "contact": {
      "name": "OANDA API Support",
      "url": "http://developer.oanda.com/rest-live-v20/introduction/",
      "email": "api@oanda.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://github.com/oanda/v20-openapi/blob/master/LICENSE.txt"
    },
    "version": "3.0.25"
  },
  "basePath": "",
  "produces": [],
  "consumes": [],
  "paths": {
    "/accounts/{accountID}/orders": {
      "post": {
        "summary": "Create Order",
        "description": "Create an Order for an Account",
        "operationId": "create",
        "parameters": [
          {
            "$ref": "v20_primitives.json#/parameters/authorizationHeaderParam"
          },
          {
            "$ref": "v20_primitives.json#/parameters/acceptDatetimeFormatHeaderParam"
          },
          {
            "$ref": "v20_account.json#/parameters/accountIDPathParam"
          },
          {
            "name": "createOrderBody",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "order": {
                  "$ref": "#/definitions/OrderRequest"
                }
              }
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "The Order was created as specified",
            "headers": {
              "Location": {
                "description": "A link to the Order that was just created",
                "type": "string"
              },
              "RequestID": {
                "description": "The unique identifier generated for the request",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "orderCreateTransaction": {
                  "$ref": "v20_transaction.json#/definitions/Transaction"
                },
                "orderFillTransaction": {
                  "$ref": "v20_transaction.json#/definitions/OrderFillTransaction"
                },
                "orderCancelTransaction": {
                  "$ref": "v20_transaction.json#/definitions/OrderCancelTransaction"
                },
                "orderReissueTransaction": {
                  "$ref": "v20_transaction.json#/definitions/Transaction"
                },
                "orderReissueRejectTransaction": {
                  "$ref": "v20_transaction.json#/definitions/Transaction"
                },
                "relatedTransactionIDs": {
                  "type": "array",
                  "description": "The IDs of all Transactions that were created while satisfying the request.",
                  "items": {
                    "type": "string",
                    "description": "The unique Transaction identifier within each Account.",
                    "format": "String representation of the numerical OANDA-assigned TransactionID"
                  }
                },
                "lastTransactionID": {
                  "type": "string",
                  "description": "The ID of the most recent Transaction created for the Account",
                  "format": "String representation of the numerical OANDA-assigned TransactionID"
                }
              }
            }
          },
          "400": {
            "description": "The Order specification was invalid",
            "schema": {
              "type": "object",
              "properties": {
                "orderRejectTransaction": {
                  "$ref": "v20_transaction.json#/definitions/Transaction"
                },
                "relatedTransactionIDs": {
                  "type": "array",
                  "description": "The IDs of all Transactions that were created while satisfying the request.",
                  "items": {
                    "type": "string",
                    "description": "The unique Transaction identifier within each Account.",
                    "format": "String representation of the numerical OANDA-assigned TransactionID"
                  }
                },
                "lastTransactionID": {
                  "type": "string",
                  "description": "The ID of the most recent Transaction created for the Account",
                  "format": "String representation of the numerical OANDA-assigned TransactionID"
                },
                "errorCode": {
                  "type": "string",
                  "description": "The code of the error that has occurred. This field may not be returned for some errors."
                },
                "errorMessage": {
                  "type": "string",
                  "description": "The human-readable description of the error that has occurred."
                }
              }
            }
          },
          "401": {
            "$ref": "v20_primitives.json#/responses/401"
          },
          "403": {
            "$ref": "v20_primitives.json#/responses/403"
          },
          "404": {
            "description": "The Order or Account specified does not exist.",
            "schema": {
              "type": "object",
              "properties": {
                "orderRejectTransaction": {
                  "$ref": "v20_transaction.json#/definitions/Transaction"
                },
                "relatedTransactionIDs": {
                  "type": "array",
                  "description": "The IDs of all Transactions that were created while satisfying the request. Only present if the Account exists.",
                  "items": {
                    "type": "string",
                    "description": "The unique Transaction identifier within each Account.",
                    "format": "String representation of the numerical OANDA-assigned TransactionID"
                  }
                },
                "lastTransactionID": {
                  "type": "string",
                  "description": "The ID of the most recent Transaction created for the Account. Only present if the Account exists.",
                  "format": "String representation of the numerical OANDA-assigned TransactionID"
                },
                "errorCode": {
                  "type": "string",
                  "description": "The code of the error that has occurred. This field may not be returned for some errors."
                },
                "errorMessage": {
                  "type": "string",
                  "description": "The human-readable description of the error that has occurred."
                }
              }
            }
          },
          "405": {
            "$ref": "v20_primitives.json#/responses/405"
          }
        }
      },
      "get": {
        "summary": "List Orders",
        "description": "Get a list of Orders for an Account",
        "operationId": "list",
        "parameters": [
          {
            "$ref": "v20_primitives.json#/parameters/authorizationHeaderParam"
          },
          {
            "$ref": "v20_primitives.json#/parameters/acceptDatetimeFormatHeaderParam"
          },
          {
            "$ref": "v20_account.json#/parameters/accountIDPathParam"
          },
          {
            "name": "ids",
            "description": "List of Order IDs to retrieve",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
            },
            "collectionFormat": "csv"
          },
          {
            "name": "state",
            "description": "The state to filter the requested Orders by",
            "in": "query",
            "type": "string"
          },
          {
            "name": "instrument",
            "description": "The instrument to filter the requested orders by",
            "in": "query",
            "type": "string",
            "format": "A string containing the base currency and quote currency delimited by a \"_\"."
          },
          {
            "name": "count",
            "description": "The maximum number of Orders to return",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "beforeID",
            "description": "The maximum Order ID to return. If not provided the most recent Orders in the Account are returned",
            "in": "query",
            "type": "string",
            "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
          }
        ],
        "responses": {
          "200": {
            "description": "The list of Orders requested",
            "headers": {
              "Link": {
                "description": "A link to the next page of results if the results were paginated",
                "type": "string"
              },
              "RequestID": {
                "description": "The unique identifier generated for the request",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "orders": {
                  "type": "array",
                  "description": "The list of Order detail objects",
                  "items": {
                    "$ref": "#/definitions/Order"
                  }
                },
                "lastTransactionID": {
                  "type": "string",
                  "description": "The ID of the most recent Transaction created for the Account",
                  "format": "String representation of the numerical OANDA-assigned TransactionID"
                }
              }
            }
          },
          "400": {
            "$ref": "v20_primitives.json#/responses/400"
          },
          "404": {
            "$ref": "v20_primitives.json#/responses/404"
          },
          "405": {
            "$ref": "v20_primitives.json#/responses/405"
          }
        }
      }
    },
    "/accounts/{accountID}/pendingOrders": {
      "get": {
        "summary": "Pending Orders",
        "description": "List all pending Orders in an Account",
        "operationId": "listPending",
        "parameters": [
          {
            "$ref": "v20_primitives.json#/parameters/authorizationHeaderParam"
          },
          {
            "$ref": "v20_primitives.json#/parameters/acceptDatetimeFormatHeaderParam"
          },
          {
            "$ref": "v20_account.json#/parameters/accountIDPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "List of pending Orders for the Account",
            "headers": {
              "RequestID": {
                "description": "The unique identifier generated for the request",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "orders": {
                  "type": "array",
                  "description": "The list of pending Order details",
                  "items": {
                    "$ref": "#/definitions/Order"
                  }
                },
                "lastTransactionID": {
                  "type": "string",
                  "description": "The ID of the most recent Transaction created for the Account",
                  "format": "String representation of the numerical OANDA-assigned TransactionID"
                }
              }
            }
          },
          "401": {
            "$ref": "v20_primitives.json#/responses/401"
          },
          "404": {
            "$ref": "v20_primitives.json#/responses/404"
          },
          "405": {
            "$ref": "v20_primitives.json#/responses/405"
          }
        }
      }
    },
    "/accounts/{accountID}/orders/{orderSpecifier}": {
      "get": {
        "summary": "Get Order",
        "description": "Get details for a single Order in an Account",
        "operationId": "get",
        "parameters": [
          {
            "$ref": "v20_primitives.json#/parameters/authorizationHeaderParam"
          },
          {
            "$ref": "v20_primitives.json#/parameters/acceptDatetimeFormatHeaderParam"
          },
          {
            "$ref": "v20_account.json#/parameters/accountIDPathParam"
          },
          {
            "$ref": "#/parameters/orderSpecifierPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "The details of the Order requested",
            "headers": {
              "Link": {
                "description": "A link to the next page of results if the results were paginated",
                "type": "string"
              },
              "RequestID": {
                "description": "The unique identifier generated for the request",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "order": {
                  "$ref": "#/definitions/Order"
                },
                "lastTransactionID": {
                  "type": "string",
                  "description": "The ID of the most recent Transaction created for the Account",
                  "format": "String representation of the numerical OANDA-assigned TransactionID"
                }
              }
            }
          },
          "401": {
            "$ref": "v20_primitives.json#/responses/401"
          },
          "404": {
            "$ref": "v20_primitives.json#/responses/404"
          },
          "405": {
            "$ref": "v20_primitives.json#/responses/405"
          }
        }
      },
      "put": {
        "summary": "Replace Order",
        "description": "Replace an Order in an Account by simultaneously cancelling it and creating a replacement Order",
        "operationId": "replace",
        "parameters": [
          {
            "$ref": "v20_primitives.json#/parameters/authorizationHeaderParam"
          },
          {
            "$ref": "v20_primitives.json#/parameters/acceptDatetimeFormatHeaderParam"
          },
          {
            "$ref": "v20_primitives.json#/parameters/clientRequestIDHeaderParam"
          },
          {
            "$ref": "v20_account.json#/parameters/accountIDPathParam"
          },
          {
            "$ref": "#/parameters/orderSpecifierPathParam"
          },
          {
            "name": "replaceOrderBody",
            "description": "Specification of the replacing Order. The replacing order must have the same type as the replaced Order.",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "order": {
                  "$ref": "#/definitions/OrderRequest"
                }
              }
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "The Order was successfully cancelled and replaced",
            "headers": {
              "Location": {
                "description": "A link to the replacing Order",
                "type": "string"
              },
              "RequestID": {
                "description": "The unique identifier generated for the request",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "orderCancelTransaction": {
                  "$ref": "v20_transaction.json#/definitions/OrderCancelTransaction"
                },
                "orderCreateTransaction": {
                  "$ref": "v20_transaction.json#/definitions/Transaction"
                },
                "orderFillTransaction": {
                  "$ref": "v20_transaction.json#/definitions/OrderFillTransaction"
                },
                "orderReissueTransaction": {
                  "$ref": "v20_transaction.json#/definitions/Transaction"
                },
                "orderReissueRejectTransaction": {
                  "$ref": "v20_transaction.json#/definitions/Transaction"
                },
                "replacingOrderCancelTransaction": {
                  "$ref": "v20_transaction.json#/definitions/OrderCancelTransaction"
                },
                "relatedTransactionIDs": {
                  "type": "array",
                  "description": "The IDs of all Transactions that were created while satisfying the request.",
                  "items": {
                    "type": "string",
                    "description": "The unique Transaction identifier within each Account.",
                    "format": "String representation of the numerical OANDA-assigned TransactionID"
                  }
                },
                "lastTransactionID": {
                  "type": "string",
                  "description": "The ID of the most recent Transaction created for the Account",
                  "format": "String representation of the numerical OANDA-assigned TransactionID"
                }
              }
            }
          },
          "400": {
            "description": "The Order specification was invalid",
            "schema": {
              "type": "object",
              "properties": {
                "orderRejectTransaction": {
                  "$ref": "v20_transaction.json#/definitions/Transaction"
                },
                "relatedTransactionIDs": {
                  "type": "array",
                  "description": "The IDs of all Transactions that were created while satisfying the request.",
                  "items": {
                    "type": "string",
                    "description": "The unique Transaction identifier within each Account.",
                    "format": "String representation of the numerical OANDA-assigned TransactionID"
                  }
                },
                "lastTransactionID": {
                  "type": "string",
                  "description": "The ID of the most recent Transaction created for the Account.",
                  "format": "String representation of the numerical OANDA-assigned TransactionID"
                },
                "errorCode": {
                  "type": "string",
                  "description": "The code of the error that has occurred. This field may not be returned for some errors."
                },
                "errorMessage": {
                  "type": "string",
                  "description": "The human-readable description of the error that has occurred."
                }
              }
            }
          },
          "401": {
            "$ref": "v20_primitives.json#/responses/401"
          },
          "404": {
            "description": "The Account or Order specified does not exist.",
            "schema": {
              "type": "object",
              "properties": {
                "orderCancelRejectTransaction": {
                  "$ref": "v20_transaction.json#/definitions/Transaction"
                },
                "relatedTransactionIDs": {
                  "type": "array",
                  "description": "The IDs of all Transactions that were created while satisfying the request. Only present if the Account exists.",
                  "items": {
                    "type": "string",
                    "description": "The unique Transaction identifier within each Account.",
                    "format": "String representation of the numerical OANDA-assigned TransactionID"
                  }
                },
                "lastTransactionID": {
                  "type": "string",
                  "description": "The ID of the most recent Transaction created for the Account. Only present if the Account exists.",
                  "format": "String representation of the numerical OANDA-assigned TransactionID"
                },
                "errorCode": {
                  "type": "string",
                  "description": "The code of the error that has occurred. This field may not be returned for some errors."
                },
                "errorMessage": {
                  "type": "string",
                  "description": "The human-readable description of the error that has occurred."
                }
              }
            }
          },
          "405": {
            "$ref": "v20_primitives.json#/responses/405"
          }
        }
      }
    },
    "/accounts/{accountID}/orders/{orderSpecifier}/cancel": {
      "put": {
        "summary": "Cancel Order",
        "description": "Cancel a pending Order in an Account",
        "operationId": "cancel",
        "parameters": [
          {
            "$ref": "v20_primitives.json#/parameters/authorizationHeaderParam"
          },
          {
            "$ref": "v20_primitives.json#/parameters/acceptDatetimeFormatHeaderParam"
          },
          {
            "$ref": "v20_primitives.json#/parameters/clientRequestIDHeaderParam"
          },
          {
            "$ref": "v20_account.json#/parameters/accountIDPathParam"
          },
          {
            "$ref": "#/parameters/orderSpecifierPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "The Order was cancelled as specified",
            "headers": {
              "RequestID": {
                "description": "The unique identifier generated for the request",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "orderCancelTransaction": {
                  "$ref": "v20_transaction.json#/definitions/OrderCancelTransaction"
                },
                "relatedTransactionIDs": {
                  "type": "array",
                  "description": "The IDs of all Transactions that were created while satisfying the request.",
                  "items": {
                    "type": "string",
                    "description": "The unique Transaction identifier within each Account.",
                    "format": "String representation of the numerical OANDA-assigned TransactionID"
                  }
                },
                "lastTransactionID": {
                  "type": "string",
                  "description": "The ID of the most recent Transaction created for the Account",
                  "format": "String representation of the numerical OANDA-assigned TransactionID"
                }
              }
            }
          },
          "401": {
            "$ref": "v20_primitives.json#/responses/401"
          },
          "404": {
            "description": "The Account or Order specified does not exist.",
            "schema": {
              "type": "object",
              "properties": {
                "orderCancelRejectTransaction": {
                  "$ref": "v20_transaction.json#/definitions/OrderCancelRejectTransaction"
                },
                "relatedTransactionIDs": {
                  "type": "array",
                  "description": "The IDs of all Transactions that were created while satisfying the request. Only present if the Account exists.",
                  "items": {
                    "type": "string",
                    "description": "The unique Transaction identifier within each Account.",
                    "format": "String representation of the numerical OANDA-assigned TransactionID"
                  }
                },
                "lastTransactionID": {
                  "type": "string",
                  "description": "The ID of the most recent Transaction created for the Account. Only present if the Account exists.",
                  "format": "String representation of the numerical OANDA-assigned TransactionID"
                },
                "errorCode": {
                  "type": "string",
                  "description": "The code of the error that has occurred. This field may not be returned for some errors."
                },
                "errorMessage": {
                  "type": "string",
                  "description": "The human-readable description of the error that has occurred."
                }
              }
            }
          },
          "405": {
            "$ref": "v20_primitives.json#/responses/405"
          }
        }
      }
    },
    "/accounts/{accountID}/orders/{orderSpecifier}/clientExtensions": {
      "put": {
        "summary": "Set Order Extensions",
        "description": "Update the Client Extensions for an Order in an Account. Do not set, modify, or delete clientExtensions if your account is associated with MT4.",
        "operationId": "setClientExtensions",
        "parameters": [
          {
            "$ref": "v20_primitives.json#/parameters/authorizationHeaderParam"
          },
          {
            "$ref": "v20_primitives.json#/parameters/acceptDatetimeFormatHeaderParam"
          },
          {
            "$ref": "v20_account.json#/parameters/accountIDPathParam"
          },
          {
            "$ref": "#/parameters/orderSpecifierPathParam"
          },
          {
            "name": "setOrderClientExtensionsBody",
            "description": "Representation of the replacing Order",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "clientExtensions": {
                  "$ref": "v20_transaction.json#/definitions/ClientExtensions"
                },
                "tradeClientExtensions": {
                  "$ref": "v20_transaction.json#/definitions/ClientExtensions"
                }
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The Order's Client Extensions were successfully modified",
            "headers": {
              "RequestID": {
                "description": "The unique identifier generated for the request",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "orderClientExtensionsModifyTransaction": {
                  "$ref": "v20_transaction.json#/definitions/OrderClientExtensionsModifyTransaction"
                },
                "lastTransactionID": {
                  "type": "string",
                  "description": "The ID of the most recent Transaction created for the Account",
                  "format": "String representation of the numerical OANDA-assigned TransactionID"
                },
                "relatedTransactionIDs": {
                  "type": "array",
                  "description": "The IDs of all Transactions that were created while satisfying the request.",
                  "items": {
                    "type": "string",
                    "description": "The unique Transaction identifier within each Account.",
                    "format": "String representation of the numerical OANDA-assigned TransactionID"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The Order Client Extensions specification was invalid",
            "schema": {
              "type": "object",
              "properties": {
                "orderClientExtensionsModifyRejectTransaction": {
                  "$ref": "v20_transaction.json#/definitions/OrderClientExtensionsModifyRejectTransaction"
                },
                "lastTransactionID": {
                  "type": "string",
                  "description": "The ID of the most recent Transaction created for the Account",
                  "format": "String representation of the numerical OANDA-assigned TransactionID"
                },
                "relatedTransactionIDs": {
                  "type": "array",
                  "description": "The IDs of all Transactions that were created while satisfying the request.",
                  "items": {
                    "type": "string",
                    "description": "The unique Transaction identifier within each Account.",
                    "format": "String representation of the numerical OANDA-assigned TransactionID"
                  }
                },
                "errorCode": {
                  "type": "string",
                  "description": "The code of the error that has occurred. This field may not be returned for some errors."
                },
                "errorMessage": {
                  "type": "string",
                  "description": "The human-readable description of the error that has occurred."
                }
              }
            }
          },
          "401": {
            "$ref": "v20_primitives.json#/responses/401"
          },
          "404": {
            "description": "The Account or Order specified does not exist.",
            "schema": {
              "type": "object",
              "properties": {
                "orderClientExtensionsModifyRejectTransaction": {
                  "$ref": "v20_transaction.json#/definitions/OrderClientExtensionsModifyRejectTransaction"
                },
                "lastTransactionID": {
                  "type": "string",
                  "description": "The ID of the most recent Transaction created for the Account. Only present if the Account exists.",
                  "format": "String representation of the numerical OANDA-assigned TransactionID"
                },
                "relatedTransactionIDs": {
                  "type": "array",
                  "description": "The IDs of all Transactions that were created while satisfying the request. Only present if the Account exists.",
                  "items": {
                    "type": "string",
                    "description": "The unique Transaction identifier within each Account.",
                    "format": "String representation of the numerical OANDA-assigned TransactionID"
                  }
                },
                "errorCode": {
                  "type": "string",
                  "description": "The code of the error that has occurred. This field may not be returned for some errors."
                },
                "errorMessage": {
                  "type": "string",
                  "description": "The human-readable description of the error that has occurred."
                }
              }
            }
          },
          "405": {
            "$ref": "v20_primitives.json#/responses/405"
          }
        }
      }
    }
  },
  "definitions": {
    "PriceValue": {
      "type": "string",
      "description": "The string representation of a Price for a Bucket.",
      "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
    },
    "PriceBucket": {
      "type": "object",
      "description": "A Price Bucket represents a price available for an amount of liquidity",
      "properties": {
        "price": {
          "type": "string",
          "description": "The Price offered by the PriceBucket",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "liquidity": {
          "type": "integer",
          "description": "The amount of liquidity offered by the PriceBucket"
        }
      }
    },
    "Price": {
      "type": "object",
      "description": "The Price representation",
      "properties": {
        "instrument": {
          "type": "string",
          "description": "The Price's Instrument.",
          "format": "A string containing the base currency and quote currency delimited by a \"_\"."
        },
        "tradeable": {
          "type": "boolean",
          "description": "Flag indicating if the Price is tradeable or not"
        },
        "timestamp": {
          "type": "string",
          "description": "The date/time when the Price was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "baseBid": {
          "type": "string",
          "description": "The base bid price as calculated by pricing.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "baseAsk": {
          "type": "string",
          "description": "The base ask price as calculated by pricing.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "bids": {
          "type": "array",
          "description": "The list of prices and liquidity available on the Instrument's bid side. It is possible for this list to be empty if there is no bid liquidity currently available for the Instrument in the Account.",
          "items": {
            "$ref": "#/definitions/PriceBucket"
          }
        },
        "asks": {
          "type": "array",
          "description": "The list of prices and liquidity available on the Instrument's ask side. It is possible for this list to be empty if there is no ask liquidity currently available for the Instrument in the Account.",
          "items": {
            "$ref": "#/definitions/PriceBucket"
          }
        },
        "closeoutBid": {
          "type": "string",
          "description": "The closeout bid price. This price is used when a bid is required to closeout a Position (margin closeout or manual) yet there is no bid liquidity. The closeout bid is never used to open a new position.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "closeoutAsk": {
          "type": "string",
          "description": "The closeout ask price. This price is used when an ask is required to closeout a Position (margin closeout or manual) yet there is no ask liquidity. The closeout ask is never used to open a new position.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        }
      }
    }
  },
  "parameters": {
    "orderSpecifierPathParam": {
      "name": "orderSpecifier",
      "description": "The Order Specifier",
      "in": "path",
      "type": "string",
      "format": "Either the Order's OANDA-assigned OrderID or the Order's client-provided ClientID prefixed by the \"@\" symbol",
      "required": true
    }
  },
  "responses": {
    "400": {
      "description": "Bad Request. The client has provided invalid data to be processed by the server.",
      "headers": {
        "RequestID": {
          "description": "The unique identifier generated for the request",
          "type": "string"
        }
      },
      "schema": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string",
            "description": "The code of the error that has occurred. This field may not be returned for some errors."
          },
          "errorMessage": {
            "type": "string",
            "description": "The human-readable description of the error that has occurred."
          }
        }
      }
    },
    "401": {
      "description": "Unauthorized. The endpoint being access required the client to authenticated, however the the authentication token is invalid or has not been provided.",
      "headers": {
        "RequestID": {
          "description": "The unique identifier generated for the request",
          "type": "string"
        }
      },
      "schema": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string",
            "description": "The code of the error that has occurred. This field may not be returned for some errors."
          },
          "errorMessage": {
            "type": "string",
            "description": "The human-readable description of the error that has occurred."
          }
        }
      }
    },
    "403": {
      "description": "Forbidden. The client has provided a token that does not authorize them to perform the action implemented by the API endpoint.",
      "headers": {
        "RequestID": {
          "description": "The unique identifier generated for the request",
          "type": "string"
        }
      },
      "schema": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string",
            "description": "The code of the error that has occurred. This field may not be returned for some errors."
          },
          "errorMessage": {
            "type": "string",
            "description": "The human-readable description of the error that has occurred."
          }
        }
      }
    },
    "404": {
      "description": "Not Found. The client has attempted to access an entity that does not exist.",
      "headers": {
        "RequestID": {
          "description": "The unique identifier generated for the request",
          "type": "string"
        }
      },
      "schema": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string",
            "description": "The code of the error that has occurred. This field may not be returned for some errors."
          },
          "errorMessage": {
            "type": "string",
            "description": "The human-readable description of the error that has occurred."
          }
        }
      }
    },
    "405": {
      "description": "Method Not Allowed. The client has attempted to access an endpoint using an HTTP method that is not supported.",
      "headers": {
        "RequestID": {
          "description": "The unique identifier generated for the request",
          "type": "string"
        }
      },
      "schema": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string",
            "description": "The code of the error that has occurred. This field may not be returned for some errors."
          },
          "errorMessage": {
            "type": "string",
            "description": "The human-readable description of the error that has occurred."
          }
        }
      }
    },
    "416": {
      "description": "Range Not Satisfiable. The client has specified a range that is invalid or cannot be processed.",
      "headers": {
        "RequestID": {
          "description": "The unique identifier generated for the request",
          "type": "string"
        }
      },
      "schema": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string",
            "description": "The code of the error that has occurred. This field may not be returned for some errors."
          },
          "errorMessage": {
            "type": "string",
            "description": "The human-readable description of the error that has occurred."
          }
        }
      }
    }
  }
}
