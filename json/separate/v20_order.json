{
  "swagger": "2.0",
  "info": {
    "title": "OANDA v20 Order API",
    "description": "v20 Order-related definitions and endpoints used to create, view and cancel Orders within an Account.",
    "contact": {
      "name": "OANDA API Support",
      "url": "http://developer.oanda.com/rest-live-v20/introduction/",
      "email": "api@oanda.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://github.com/oanda/v20-openapi/blob/master/LICENSE.txt"
    },
    "version": "3.0.25"
  },
  "basePath": "/v3",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "paths": {
    "/accounts/{accountID}/orders": {
      "post": {
        "summary": "Create Order",
        "description": "Create an Order for an Account",
        "operationId": "create",
        "parameters": [
          {
            "$ref": "v20_primitives.json#/parameters/authorizationHeaderParam"
          },
          {
            "$ref": "v20_primitives.json#/parameters/acceptDatetimeFormatHeaderParam"
          },
          {
            "$ref": "v20_account.json#/parameters/accountIDPathParam"
          },
          {
            "name": "createOrderBody",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "order": {
                  "$ref": "#/definitions/OrderRequest"
                }
              }
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "The Order was created as specified",
            "headers": {
              "Location": {
                "description": "A link to the Order that was just created",
                "type": "string"
              },
              "RequestID": {
                "description": "The unique identifier generated for the request",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "orderCreateTransaction": {
                  "$ref": "v20_transaction.json#/definitions/Transaction"
                },
                "orderFillTransaction": {
                  "$ref": "v20_transaction.json#/definitions/OrderFillTransaction"
                },
                "orderCancelTransaction": {
                  "$ref": "v20_transaction.json#/definitions/OrderCancelTransaction"
                },
                "orderReissueTransaction": {
                  "$ref": "v20_transaction.json#/definitions/Transaction"
                },
                "orderReissueRejectTransaction": {
                  "$ref": "v20_transaction.json#/definitions/Transaction"
                },
                "relatedTransactionIDs": {
                  "type": "array",
                  "description": "The IDs of all Transactions that were created while satisfying the request.",
                  "items": {
                    "type": "string",
                    "description": "The unique Transaction identifier within each Account.",
                    "format": "String representation of the numerical OANDA-assigned TransactionID"
                  }
                },
                "lastTransactionID": {
                  "type": "string",
                  "description": "The ID of the most recent Transaction created for the Account",
                  "format": "String representation of the numerical OANDA-assigned TransactionID"
                }
              }
            }
          },
          "400": {
            "description": "The Order specification was invalid",
            "schema": {
              "type": "object",
              "properties": {
                "orderRejectTransaction": {
                  "$ref": "v20_transaction.json#/definitions/Transaction"
                },
                "relatedTransactionIDs": {
                  "type": "array",
                  "description": "The IDs of all Transactions that were created while satisfying the request.",
                  "items": {
                    "type": "string",
                    "description": "The unique Transaction identifier within each Account.",
                    "format": "String representation of the numerical OANDA-assigned TransactionID"
                  }
                },
                "lastTransactionID": {
                  "type": "string",
                  "description": "The ID of the most recent Transaction created for the Account",
                  "format": "String representation of the numerical OANDA-assigned TransactionID"
                },
                "errorCode": {
                  "type": "string",
                  "description": "The code of the error that has occurred. This field may not be returned for some errors."
                },
                "errorMessage": {
                  "type": "string",
                  "description": "The human-readable description of the error that has occurred."
                }
              }
            }
          },
          "401": {
            "$ref": "v20_primitives.json#/responses/401"
          },
          "403": {
            "$ref": "v20_primitives.json#/responses/403"
          },
          "404": {
            "description": "The Order or Account specified does not exist.",
            "schema": {
              "type": "object",
              "properties": {
                "orderRejectTransaction": {
                  "$ref": "v20_transaction.json#/definitions/Transaction"
                },
                "relatedTransactionIDs": {
                  "type": "array",
                  "description": "The IDs of all Transactions that were created while satisfying the request. Only present if the Account exists.",
                  "items": {
                    "type": "string",
                    "description": "The unique Transaction identifier within each Account.",
                    "format": "String representation of the numerical OANDA-assigned TransactionID"
                  }
                },
                "lastTransactionID": {
                  "type": "string",
                  "description": "The ID of the most recent Transaction created for the Account. Only present if the Account exists.",
                  "format": "String representation of the numerical OANDA-assigned TransactionID"
                },
                "errorCode": {
                  "type": "string",
                  "description": "The code of the error that has occurred. This field may not be returned for some errors."
                },
                "errorMessage": {
                  "type": "string",
                  "description": "The human-readable description of the error that has occurred."
                }
              }
            }
          },
          "405": {
            "$ref": "v20_primitives.json#/responses/405"
          }
        }
      },
      "get": {
        "summary": "List Orders",
        "description": "Get a list of Orders for an Account",
        "operationId": "list",
        "parameters": [
          {
            "$ref": "v20_primitives.json#/parameters/authorizationHeaderParam"
          },
          {
            "$ref": "v20_primitives.json#/parameters/acceptDatetimeFormatHeaderParam"
          },
          {
            "$ref": "v20_account.json#/parameters/accountIDPathParam"
          },
          {
            "name": "ids",
            "description": "List of Order IDs to retrieve",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
            },
            "collectionFormat": "csv"
          },
          {
            "name": "state",
            "description": "The state to filter the requested Orders by",
            "in": "query",
            "type": "string"
          },
          {
            "name": "instrument",
            "description": "The instrument to filter the requested orders by",
            "in": "query",
            "type": "string",
            "format": "A string containing the base currency and quote currency delimited by a \"_\"."
          },
          {
            "name": "count",
            "description": "The maximum number of Orders to return",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "beforeID",
            "description": "The maximum Order ID to return. If not provided the most recent Orders in the Account are returned",
            "in": "query",
            "type": "string",
            "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
          }
        ],
        "responses": {
          "200": {
            "description": "The list of Orders requested",
            "headers": {
              "Link": {
                "description": "A link to the next page of results if the results were paginated",
                "type": "string"
              },
              "RequestID": {
                "description": "The unique identifier generated for the request",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "orders": {
                  "type": "array",
                  "description": "The list of Order detail objects",
                  "items": {
                    "$ref": "#/definitions/Order"
                  }
                },
                "lastTransactionID": {
                  "type": "string",
                  "description": "The ID of the most recent Transaction created for the Account",
                  "format": "String representation of the numerical OANDA-assigned TransactionID"
                }
              }
            }
          },
          "400": {
            "$ref": "v20_primitives.json#/responses/400"
          },
          "404": {
            "$ref": "v20_primitives.json#/responses/404"
          },
          "405": {
            "$ref": "v20_primitives.json#/responses/405"
          }
        }
      }
    },
    "/accounts/{accountID}/pendingOrders": {
      "get": {
        "summary": "Pending Orders",
        "description": "List all pending Orders in an Account",
        "operationId": "listPending",
        "parameters": [
          {
            "$ref": "v20_primitives.json#/parameters/authorizationHeaderParam"
          },
          {
            "$ref": "v20_primitives.json#/parameters/acceptDatetimeFormatHeaderParam"
          },
          {
            "$ref": "v20_account.json#/parameters/accountIDPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "List of pending Orders for the Account",
            "headers": {
              "RequestID": {
                "description": "The unique identifier generated for the request",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "orders": {
                  "type": "array",
                  "description": "The list of pending Order details",
                  "items": {
                    "$ref": "#/definitions/Order"
                  }
                },
                "lastTransactionID": {
                  "type": "string",
                  "description": "The ID of the most recent Transaction created for the Account",
                  "format": "String representation of the numerical OANDA-assigned TransactionID"
                }
              }
            }
          },
          "401": {
            "$ref": "v20_primitives.json#/responses/401"
          },
          "404": {
            "$ref": "v20_primitives.json#/responses/404"
          },
          "405": {
            "$ref": "v20_primitives.json#/responses/405"
          }
        }
      }
    },
    "/accounts/{accountID}/orders/{orderSpecifier}": {
      "get": {
        "summary": "Get Order",
        "description": "Get details for a single Order in an Account",
        "operationId": "get",
        "parameters": [
          {
            "$ref": "v20_primitives.json#/parameters/authorizationHeaderParam"
          },
          {
            "$ref": "v20_primitives.json#/parameters/acceptDatetimeFormatHeaderParam"
          },
          {
            "$ref": "v20_account.json#/parameters/accountIDPathParam"
          },
          {
            "$ref": "#/parameters/orderSpecifierPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "The details of the Order requested",
            "headers": {
              "Link": {
                "description": "A link to the next page of results if the results were paginated",
                "type": "string"
              },
              "RequestID": {
                "description": "The unique identifier generated for the request",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "order": {
                  "$ref": "#/definitions/Order"
                },
                "lastTransactionID": {
                  "type": "string",
                  "description": "The ID of the most recent Transaction created for the Account",
                  "format": "String representation of the numerical OANDA-assigned TransactionID"
                }
              }
            }
          },
          "401": {
            "$ref": "v20_primitives.json#/responses/401"
          },
          "404": {
            "$ref": "v20_primitives.json#/responses/404"
          },
          "405": {
            "$ref": "v20_primitives.json#/responses/405"
          }
        }
      },
      "put": {
        "summary": "Replace Order",
        "description": "Replace an Order in an Account by simultaneously cancelling it and creating a replacement Order",
        "operationId": "replace",
        "parameters": [
          {
            "$ref": "v20_primitives.json#/parameters/authorizationHeaderParam"
          },
          {
            "$ref": "v20_primitives.json#/parameters/acceptDatetimeFormatHeaderParam"
          },
          {
            "$ref": "v20_primitives.json#/parameters/clientRequestIDHeaderParam"
          },
          {
            "$ref": "v20_account.json#/parameters/accountIDPathParam"
          },
          {
            "$ref": "#/parameters/orderSpecifierPathParam"
          },
          {
            "name": "replaceOrderBody",
            "description": "Specification of the replacing Order. The replacing order must have the same type as the replaced Order.",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "order": {
                  "$ref": "#/definitions/OrderRequest"
                }
              }
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "The Order was successfully cancelled and replaced",
            "headers": {
              "Location": {
                "description": "A link to the replacing Order",
                "type": "string"
              },
              "RequestID": {
                "description": "The unique identifier generated for the request",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "orderCancelTransaction": {
                  "$ref": "v20_transaction.json#/definitions/OrderCancelTransaction"
                },
                "orderCreateTransaction": {
                  "$ref": "v20_transaction.json#/definitions/Transaction"
                },
                "orderFillTransaction": {
                  "$ref": "v20_transaction.json#/definitions/OrderFillTransaction"
                },
                "orderReissueTransaction": {
                  "$ref": "v20_transaction.json#/definitions/Transaction"
                },
                "orderReissueRejectTransaction": {
                  "$ref": "v20_transaction.json#/definitions/Transaction"
                },
                "replacingOrderCancelTransaction": {
                  "$ref": "v20_transaction.json#/definitions/OrderCancelTransaction"
                },
                "relatedTransactionIDs": {
                  "type": "array",
                  "description": "The IDs of all Transactions that were created while satisfying the request.",
                  "items": {
                    "type": "string",
                    "description": "The unique Transaction identifier within each Account.",
                    "format": "String representation of the numerical OANDA-assigned TransactionID"
                  }
                },
                "lastTransactionID": {
                  "type": "string",
                  "description": "The ID of the most recent Transaction created for the Account",
                  "format": "String representation of the numerical OANDA-assigned TransactionID"
                }
              }
            }
          },
          "400": {
            "description": "The Order specification was invalid",
            "schema": {
              "type": "object",
              "properties": {
                "orderRejectTransaction": {
                  "$ref": "v20_transaction.json#/definitions/Transaction"
                },
                "relatedTransactionIDs": {
                  "type": "array",
                  "description": "The IDs of all Transactions that were created while satisfying the request.",
                  "items": {
                    "type": "string",
                    "description": "The unique Transaction identifier within each Account.",
                    "format": "String representation of the numerical OANDA-assigned TransactionID"
                  }
                },
                "lastTransactionID": {
                  "type": "string",
                  "description": "The ID of the most recent Transaction created for the Account.",
                  "format": "String representation of the numerical OANDA-assigned TransactionID"
                },
                "errorCode": {
                  "type": "string",
                  "description": "The code of the error that has occurred. This field may not be returned for some errors."
                },
                "errorMessage": {
                  "type": "string",
                  "description": "The human-readable description of the error that has occurred."
                }
              }
            }
          },
          "401": {
            "$ref": "v20_primitives.json#/responses/401"
          },
          "404": {
            "description": "The Account or Order specified does not exist.",
            "schema": {
              "type": "object",
              "properties": {
                "orderCancelRejectTransaction": {
                  "$ref": "v20_transaction.json#/definitions/Transaction"
                },
                "relatedTransactionIDs": {
                  "type": "array",
                  "description": "The IDs of all Transactions that were created while satisfying the request. Only present if the Account exists.",
                  "items": {
                    "type": "string",
                    "description": "The unique Transaction identifier within each Account.",
                    "format": "String representation of the numerical OANDA-assigned TransactionID"
                  }
                },
                "lastTransactionID": {
                  "type": "string",
                  "description": "The ID of the most recent Transaction created for the Account. Only present if the Account exists.",
                  "format": "String representation of the numerical OANDA-assigned TransactionID"
                },
                "errorCode": {
                  "type": "string",
                  "description": "The code of the error that has occurred. This field may not be returned for some errors."
                },
                "errorMessage": {
                  "type": "string",
                  "description": "The human-readable description of the error that has occurred."
                }
              }
            }
          },
          "405": {
            "$ref": "v20_primitives.json#/responses/405"
          }
        }
      }
    },
    "/accounts/{accountID}/orders/{orderSpecifier}/cancel": {
      "put": {
        "summary": "Cancel Order",
        "description": "Cancel a pending Order in an Account",
        "operationId": "cancel",
        "parameters": [
          {
            "$ref": "v20_primitives.json#/parameters/authorizationHeaderParam"
          },
          {
            "$ref": "v20_primitives.json#/parameters/acceptDatetimeFormatHeaderParam"
          },
          {
            "$ref": "v20_primitives.json#/parameters/clientRequestIDHeaderParam"
          },
          {
            "$ref": "v20_account.json#/parameters/accountIDPathParam"
          },
          {
            "$ref": "#/parameters/orderSpecifierPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "The Order was cancelled as specified",
            "headers": {
              "RequestID": {
                "description": "The unique identifier generated for the request",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "orderCancelTransaction": {
                  "$ref": "v20_transaction.json#/definitions/OrderCancelTransaction"
                },
                "relatedTransactionIDs": {
                  "type": "array",
                  "description": "The IDs of all Transactions that were created while satisfying the request.",
                  "items": {
                    "type": "string",
                    "description": "The unique Transaction identifier within each Account.",
                    "format": "String representation of the numerical OANDA-assigned TransactionID"
                  }
                },
                "lastTransactionID": {
                  "type": "string",
                  "description": "The ID of the most recent Transaction created for the Account",
                  "format": "String representation of the numerical OANDA-assigned TransactionID"
                }
              }
            }
          },
          "401": {
            "$ref": "v20_primitives.json#/responses/401"
          },
          "404": {
            "description": "The Account or Order specified does not exist.",
            "schema": {
              "type": "object",
              "properties": {
                "orderCancelRejectTransaction": {
                  "$ref": "v20_transaction.json#/definitions/OrderCancelRejectTransaction"
                },
                "relatedTransactionIDs": {
                  "type": "array",
                  "description": "The IDs of all Transactions that were created while satisfying the request. Only present if the Account exists.",
                  "items": {
                    "type": "string",
                    "description": "The unique Transaction identifier within each Account.",
                    "format": "String representation of the numerical OANDA-assigned TransactionID"
                  }
                },
                "lastTransactionID": {
                  "type": "string",
                  "description": "The ID of the most recent Transaction created for the Account. Only present if the Account exists.",
                  "format": "String representation of the numerical OANDA-assigned TransactionID"
                },
                "errorCode": {
                  "type": "string",
                  "description": "The code of the error that has occurred. This field may not be returned for some errors."
                },
                "errorMessage": {
                  "type": "string",
                  "description": "The human-readable description of the error that has occurred."
                }
              }
            }
          },
          "405": {
            "$ref": "v20_primitives.json#/responses/405"
          }
        }
      }
    },
    "/accounts/{accountID}/orders/{orderSpecifier}/clientExtensions": {
      "put": {
        "summary": "Set Order Extensions",
        "description": "Update the Client Extensions for an Order in an Account. Do not set, modify, or delete clientExtensions if your account is associated with MT4.",
        "operationId": "setClientExtensions",
        "parameters": [
          {
            "$ref": "v20_primitives.json#/parameters/authorizationHeaderParam"
          },
          {
            "$ref": "v20_primitives.json#/parameters/acceptDatetimeFormatHeaderParam"
          },
          {
            "$ref": "v20_account.json#/parameters/accountIDPathParam"
          },
          {
            "$ref": "#/parameters/orderSpecifierPathParam"
          },
          {
            "name": "setOrderClientExtensionsBody",
            "description": "Representation of the replacing Order",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "clientExtensions": {
                  "$ref": "v20_transaction.json#/definitions/ClientExtensions"
                },
                "tradeClientExtensions": {
                  "$ref": "v20_transaction.json#/definitions/ClientExtensions"
                }
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The Order's Client Extensions were successfully modified",
            "headers": {
              "RequestID": {
                "description": "The unique identifier generated for the request",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "orderClientExtensionsModifyTransaction": {
                  "$ref": "v20_transaction.json#/definitions/OrderClientExtensionsModifyTransaction"
                },
                "lastTransactionID": {
                  "type": "string",
                  "description": "The ID of the most recent Transaction created for the Account",
                  "format": "String representation of the numerical OANDA-assigned TransactionID"
                },
                "relatedTransactionIDs": {
                  "type": "array",
                  "description": "The IDs of all Transactions that were created while satisfying the request.",
                  "items": {
                    "type": "string",
                    "description": "The unique Transaction identifier within each Account.",
                    "format": "String representation of the numerical OANDA-assigned TransactionID"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The Order Client Extensions specification was invalid",
            "schema": {
              "type": "object",
              "properties": {
                "orderClientExtensionsModifyRejectTransaction": {
                  "$ref": "v20_transaction.json#/definitions/OrderClientExtensionsModifyRejectTransaction"
                },
                "lastTransactionID": {
                  "type": "string",
                  "description": "The ID of the most recent Transaction created for the Account",
                  "format": "String representation of the numerical OANDA-assigned TransactionID"
                },
                "relatedTransactionIDs": {
                  "type": "array",
                  "description": "The IDs of all Transactions that were created while satisfying the request.",
                  "items": {
                    "type": "string",
                    "description": "The unique Transaction identifier within each Account.",
                    "format": "String representation of the numerical OANDA-assigned TransactionID"
                  }
                },
                "errorCode": {
                  "type": "string",
                  "description": "The code of the error that has occurred. This field may not be returned for some errors."
                },
                "errorMessage": {
                  "type": "string",
                  "description": "The human-readable description of the error that has occurred."
                }
              }
            }
          },
          "401": {
            "$ref": "v20_primitives.json#/responses/401"
          },
          "404": {
            "description": "The Account or Order specified does not exist.",
            "schema": {
              "type": "object",
              "properties": {
                "orderClientExtensionsModifyRejectTransaction": {
                  "$ref": "v20_transaction.json#/definitions/OrderClientExtensionsModifyRejectTransaction"
                },
                "lastTransactionID": {
                  "type": "string",
                  "description": "The ID of the most recent Transaction created for the Account. Only present if the Account exists.",
                  "format": "String representation of the numerical OANDA-assigned TransactionID"
                },
                "relatedTransactionIDs": {
                  "type": "array",
                  "description": "The IDs of all Transactions that were created while satisfying the request. Only present if the Account exists.",
                  "items": {
                    "type": "string",
                    "description": "The unique Transaction identifier within each Account.",
                    "format": "String representation of the numerical OANDA-assigned TransactionID"
                  }
                },
                "errorCode": {
                  "type": "string",
                  "description": "The code of the error that has occurred. This field may not be returned for some errors."
                },
                "errorMessage": {
                  "type": "string",
                  "description": "The human-readable description of the error that has occurred."
                }
              }
            }
          },
          "405": {
            "$ref": "v20_primitives.json#/responses/405"
          }
        }
      }
    }
  },
  "definitions": {
    "OrderID": {
      "type": "string",
      "description": "The Order's identifier, unique within the Order's Account.",
      "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
    },
    "OrderType": {
      "type": "string",
      "description": "The type of the Order.",
      "enum": [
        "MARKET",
        "LIMIT",
        "STOP",
        "MARKET_IF_TOUCHED",
        "TAKE_PROFIT",
        "STOP_LOSS",
        "TRAILING_STOP_LOSS",
        "FIXED_PRICE"
      ]
    },
    "CancellableOrderType": {
      "type": "string",
      "description": "The type of the Order.",
      "enum": [
        "LIMIT",
        "STOP",
        "MARKET_IF_TOUCHED",
        "TAKE_PROFIT",
        "STOP_LOSS",
        "TRAILING_STOP_LOSS"
      ]
    },
    "OrderState": {
      "type": "string",
      "description": "The current state of the Order.",
      "enum": [
        "PENDING",
        "FILLED",
        "TRIGGERED",
        "CANCELLED"
      ]
    },
    "OrderStateFilter": {
      "type": "string",
      "description": "The state to filter the requested Orders by.",
      "enum": [
        "PENDING",
        "FILLED",
        "TRIGGERED",
        "CANCELLED",
        "ALL"
      ]
    },
    "OrderIdentifier": {
      "type": "object",
      "description": "An OrderIdentifier is used to refer to an Order, and contains both the OrderID and the ClientOrderID.",
      "properties": {
        "orderID": {
          "type": "string",
          "description": "The OANDA-assigned Order ID",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        },
        "clientOrderID": {
          "type": "string",
          "description": "The client-provided client Order ID"
        }
      }
    },
    "OrderSpecifier": {
      "type": "string",
      "description": "The specification of an Order as referred to by clients",
      "format": "Either the Order's OANDA-assigned OrderID or the Order's client-provided ClientID prefixed by the \"@\" symbol"
    },
    "TimeInForce": {
      "type": "string",
      "description": "The time-in-force of an Order. TimeInForce describes how long an Order should remain pending before being automatically cancelled by the execution system.",
      "enum": [
        "GTC",
        "GTD",
        "GFD",
        "FOK",
        "IOC"
      ]
    },
    "OrderPositionFill": {
      "type": "string",
      "description": "Specification of how Positions in the Account are modified when the Order is filled.",
      "enum": [
        "OPEN_ONLY",
        "REDUCE_FIRST",
        "REDUCE_ONLY",
        "DEFAULT"
      ]
    },
    "OrderTriggerCondition": {
      "type": "string",
      "description": "Specification of which price component should be used when determining if an Order should be triggered and filled. This allows Orders to be triggered based on the bid, ask, mid, default (ask for buy, bid for sell) or inverse (ask for sell, bid for buy) price depending on the desired behaviour. Orders are always filled using their default price component.\nThis feature is only provided through the REST API. Clients who choose to specify a non-default trigger condition will not see it reflected in any of OANDA's proprietary or partner trading platforms, their transaction history or their account statements. OANDA platforms always assume that an Order's trigger condition is set to the default value when indicating the distance from an Order's trigger price, and will always provide the default trigger condition when creating or modifying an Order.\nA special restriction applies when creating a guaranteed Stop Loss Order. In this case the TriggerCondition value must either be \"DEFAULT\", or the \"natural\" trigger side \"DEFAULT\" results in. So for a Stop Loss Order for a long trade valid values are \"DEFAULT\" and \"BID\", and for short trades \"DEFAULT\" and \"ASK\" are valid.",
      "enum": [
        "DEFAULT",
        "INVERSE",
        "BID",
        "ASK",
        "MID"
      ]
    },
    "DynamicOrderState": {
      "type": "object",
      "description": "The dynamic state of an Order. This is only relevant to TrailingStopLoss Orders, as no other Order type has dynamic state.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Order's ID.",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        },
        "trailingStopValue": {
          "type": "string",
          "description": "The Order's calculated trailing stop value.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "triggerDistance": {
          "type": "string",
          "description": "The distance between the Trailing Stop Loss Order's trailingStopValue and the current Market Price. This represents the distance (in price units) of the Order from a triggering price. If the distance could not be determined, this value will not be set.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "isTriggerDistanceExact": {
          "type": "boolean",
          "description": "True if an exact trigger distance could be calculated. If false, it means the provided trigger distance is a best estimate. If the distance could not be determined, this value will not be set."
        }
      }
    },
    "Order": {
      "type": "object",
      "description": "The base Order definition specifies the properties that are common to all Orders.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Order's identifier, unique within the Order's Account.",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        },
        "createTime": {
          "type": "string",
          "description": "The time when the Order was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "state": {
          "type": "string",
          "description": "The current state of the Order.",
          "enum": [
            "PENDING",
            "FILLED",
            "TRIGGERED",
            "CANCELLED"
          ]
        },
        "clientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        }
      }
    },
    "MarketOrder": {
      "type": "object",
      "description": "A MarketOrder is an order that is filled immediately upon creation using the current market price.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Order's identifier, unique within the Order's Account.",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        },
        "createTime": {
          "type": "string",
          "description": "The time when the Order was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "state": {
          "type": "string",
          "description": "The current state of the Order.",
          "enum": [
            "PENDING",
            "FILLED",
            "TRIGGERED",
            "CANCELLED"
          ]
        },
        "clientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "type": {
          "type": "string",
          "description": "The type of the Order. Always set to \"MARKET\" for Market Orders.",
          "enum": [
            "MARKET",
            "LIMIT",
            "STOP",
            "MARKET_IF_TOUCHED",
            "TAKE_PROFIT",
            "STOP_LOSS",
            "TRAILING_STOP_LOSS",
            "FIXED_PRICE"
          ]
        },
        "instrument": {
          "type": "string",
          "description": "The Market Order's Instrument.",
          "format": "A string containing the base currency and quote currency delimited by a \"_\"."
        },
        "units": {
          "type": "string",
          "description": "The quantity requested to be filled by the Market Order. A posititive number of units results in a long Order, and a negative number of units results in a short Order.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "timeInForce": {
          "type": "string",
          "description": "The time-in-force requested for the Market Order. Restricted to FOK or IOC for a MarketOrder.",
          "enum": [
            "GTC",
            "GTD",
            "GFD",
            "FOK",
            "IOC"
          ]
        },
        "priceBound": {
          "type": "string",
          "description": "The worst price that the client is willing to have the Market Order filled at.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "positionFill": {
          "type": "string",
          "description": "Specification of how Positions in the Account are modified when the Order is filled.",
          "enum": [
            "OPEN_ONLY",
            "REDUCE_FIRST",
            "REDUCE_ONLY",
            "DEFAULT"
          ]
        },
        "tradeClose": {
          "$ref": "v20_transaction.json#/definitions/MarketOrderTradeClose"
        },
        "longPositionCloseout": {
          "$ref": "v20_transaction.json#/definitions/MarketOrderPositionCloseout"
        },
        "shortPositionCloseout": {
          "$ref": "v20_transaction.json#/definitions/MarketOrderPositionCloseout"
        },
        "marginCloseout": {
          "$ref": "v20_transaction.json#/definitions/MarketOrderMarginCloseout"
        },
        "delayedTradeClose": {
          "$ref": "v20_transaction.json#/definitions/MarketOrderDelayedTradeClose"
        },
        "takeProfitOnFill": {
          "$ref": "v20_transaction.json#/definitions/TakeProfitDetails"
        },
        "stopLossOnFill": {
          "$ref": "v20_transaction.json#/definitions/StopLossDetails"
        },
        "trailingStopLossOnFill": {
          "$ref": "v20_transaction.json#/definitions/TrailingStopLossDetails"
        },
        "tradeClientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "fillingTransactionID": {
          "type": "string",
          "description": "ID of the Transaction that filled this Order (only provided when the Order's state is FILLED)",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "filledTime": {
          "type": "string",
          "description": "Date/time when the Order was filled (only provided when the Order's state is FILLED)",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "tradeOpenedID": {
          "type": "string",
          "description": "Trade ID of Trade opened when the Order was filled (only provided when the Order's state is FILLED and a Trade was opened as a result of the fill)",
          "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
        },
        "tradeReducedID": {
          "type": "string",
          "description": "Trade ID of Trade reduced when the Order was filled (only provided when the Order's state is FILLED and a Trade was reduced as a result of the fill)",
          "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
        },
        "tradeClosedIDs": {
          "type": "array",
          "description": "Trade IDs of Trades closed when the Order was filled (only provided when the Order's state is FILLED and one or more Trades were closed as a result of the fill)",
          "items": {
            "type": "string",
            "description": "The Trade's identifier, unique within the Trade's Account.",
            "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
          }
        },
        "cancellingTransactionID": {
          "type": "string",
          "description": "ID of the Transaction that cancelled the Order (only provided when the Order's state is CANCELLED)",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "cancelledTime": {
          "type": "string",
          "description": "Date/time when the Order was cancelled (only provided when the state of the Order is CANCELLED)",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        }
      }
    },
    "FixedPriceOrder": {
      "type": "object",
      "description": "A FixedPriceOrder is an order that is filled immediately upon creation using a fixed price.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Order's identifier, unique within the Order's Account.",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        },
        "createTime": {
          "type": "string",
          "description": "The time when the Order was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "state": {
          "type": "string",
          "description": "The current state of the Order.",
          "enum": [
            "PENDING",
            "FILLED",
            "TRIGGERED",
            "CANCELLED"
          ]
        },
        "clientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "type": {
          "type": "string",
          "description": "The type of the Order. Always set to \"FIXED_PRICE\" for Fixed Price Orders.",
          "enum": [
            "MARKET",
            "LIMIT",
            "STOP",
            "MARKET_IF_TOUCHED",
            "TAKE_PROFIT",
            "STOP_LOSS",
            "TRAILING_STOP_LOSS",
            "FIXED_PRICE"
          ]
        },
        "instrument": {
          "type": "string",
          "description": "The Fixed Price Order's Instrument.",
          "format": "A string containing the base currency and quote currency delimited by a \"_\"."
        },
        "units": {
          "type": "string",
          "description": "The quantity requested to be filled by the Fixed Price Order. A posititive number of units results in a long Order, and a negative number of units results in a short Order.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "price": {
          "type": "string",
          "description": "The price specified for the Fixed Price Order. This price is the exact price that the Fixed Price Order will be filled at.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "positionFill": {
          "type": "string",
          "description": "Specification of how Positions in the Account are modified when the Order is filled.",
          "enum": [
            "OPEN_ONLY",
            "REDUCE_FIRST",
            "REDUCE_ONLY",
            "DEFAULT"
          ]
        },
        "tradeState": {
          "type": "string",
          "description": "The state that the trade resulting from the Fixed Price Order should be set to."
        },
        "takeProfitOnFill": {
          "$ref": "v20_transaction.json#/definitions/TakeProfitDetails"
        },
        "stopLossOnFill": {
          "$ref": "v20_transaction.json#/definitions/StopLossDetails"
        },
        "trailingStopLossOnFill": {
          "$ref": "v20_transaction.json#/definitions/TrailingStopLossDetails"
        },
        "tradeClientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "fillingTransactionID": {
          "type": "string",
          "description": "ID of the Transaction that filled this Order (only provided when the Order's state is FILLED)",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "filledTime": {
          "type": "string",
          "description": "Date/time when the Order was filled (only provided when the Order's state is FILLED)",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "tradeOpenedID": {
          "type": "string",
          "description": "Trade ID of Trade opened when the Order was filled (only provided when the Order's state is FILLED and a Trade was opened as a result of the fill)",
          "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
        },
        "tradeReducedID": {
          "type": "string",
          "description": "Trade ID of Trade reduced when the Order was filled (only provided when the Order's state is FILLED and a Trade was reduced as a result of the fill)",
          "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
        },
        "tradeClosedIDs": {
          "type": "array",
          "description": "Trade IDs of Trades closed when the Order was filled (only provided when the Order's state is FILLED and one or more Trades were closed as a result of the fill)",
          "items": {
            "type": "string",
            "description": "The Trade's identifier, unique within the Trade's Account.",
            "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
          }
        },
        "cancellingTransactionID": {
          "type": "string",
          "description": "ID of the Transaction that cancelled the Order (only provided when the Order's state is CANCELLED)",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "cancelledTime": {
          "type": "string",
          "description": "Date/time when the Order was cancelled (only provided when the state of the Order is CANCELLED)",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        }
      }
    },
    "LimitOrder": {
      "type": "object",
      "description": "A LimitOrder is an order that is created with a price threshold, and will only be filled by a price that is equal to or better than the threshold.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Order's identifier, unique within the Order's Account.",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        },
        "createTime": {
          "type": "string",
          "description": "The time when the Order was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "state": {
          "type": "string",
          "description": "The current state of the Order.",
          "enum": [
            "PENDING",
            "FILLED",
            "TRIGGERED",
            "CANCELLED"
          ]
        },
        "clientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "type": {
          "type": "string",
          "description": "The type of the Order. Always set to \"LIMIT\" for Limit Orders.",
          "enum": [
            "MARKET",
            "LIMIT",
            "STOP",
            "MARKET_IF_TOUCHED",
            "TAKE_PROFIT",
            "STOP_LOSS",
            "TRAILING_STOP_LOSS",
            "FIXED_PRICE"
          ]
        },
        "instrument": {
          "type": "string",
          "description": "The Limit Order's Instrument.",
          "format": "A string containing the base currency and quote currency delimited by a \"_\"."
        },
        "units": {
          "type": "string",
          "description": "The quantity requested to be filled by the Limit Order. A posititive number of units results in a long Order, and a negative number of units results in a short Order.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "price": {
          "type": "string",
          "description": "The price threshold specified for the Limit Order. The Limit Order will only be filled by a market price that is equal to or better than this price.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "timeInForce": {
          "type": "string",
          "description": "The time-in-force requested for the Limit Order.",
          "enum": [
            "GTC",
            "GTD",
            "GFD",
            "FOK",
            "IOC"
          ]
        },
        "gtdTime": {
          "type": "string",
          "description": "The date/time when the Limit Order will be cancelled if its timeInForce is \"GTD\".",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "positionFill": {
          "type": "string",
          "description": "Specification of how Positions in the Account are modified when the Order is filled.",
          "enum": [
            "OPEN_ONLY",
            "REDUCE_FIRST",
            "REDUCE_ONLY",
            "DEFAULT"
          ]
        },
        "triggerCondition": {
          "type": "string",
          "description": "Specification of which price component should be used when determining if an Order should be triggered and filled. This allows Orders to be triggered based on the bid, ask, mid, default (ask for buy, bid for sell) or inverse (ask for sell, bid for buy) price depending on the desired behaviour. Orders are always filled using their default price component.\nThis feature is only provided through the REST API. Clients who choose to specify a non-default trigger condition will not see it reflected in any of OANDA's proprietary or partner trading platforms, their transaction history or their account statements. OANDA platforms always assume that an Order's trigger condition is set to the default value when indicating the distance from an Order's trigger price, and will always provide the default trigger condition when creating or modifying an Order.\nA special restriction applies when creating a guaranteed Stop Loss Order. In this case the TriggerCondition value must either be \"DEFAULT\", or the \"natural\" trigger side \"DEFAULT\" results in. So for a Stop Loss Order for a long trade valid values are \"DEFAULT\" and \"BID\", and for short trades \"DEFAULT\" and \"ASK\" are valid.",
          "enum": [
            "DEFAULT",
            "INVERSE",
            "BID",
            "ASK",
            "MID"
          ]
        },
        "takeProfitOnFill": {
          "$ref": "v20_transaction.json#/definitions/TakeProfitDetails"
        },
        "stopLossOnFill": {
          "$ref": "v20_transaction.json#/definitions/StopLossDetails"
        },
        "trailingStopLossOnFill": {
          "$ref": "v20_transaction.json#/definitions/TrailingStopLossDetails"
        },
        "tradeClientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "fillingTransactionID": {
          "type": "string",
          "description": "ID of the Transaction that filled this Order (only provided when the Order's state is FILLED)",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "filledTime": {
          "type": "string",
          "description": "Date/time when the Order was filled (only provided when the Order's state is FILLED)",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "tradeOpenedID": {
          "type": "string",
          "description": "Trade ID of Trade opened when the Order was filled (only provided when the Order's state is FILLED and a Trade was opened as a result of the fill)",
          "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
        },
        "tradeReducedID": {
          "type": "string",
          "description": "Trade ID of Trade reduced when the Order was filled (only provided when the Order's state is FILLED and a Trade was reduced as a result of the fill)",
          "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
        },
        "tradeClosedIDs": {
          "type": "array",
          "description": "Trade IDs of Trades closed when the Order was filled (only provided when the Order's state is FILLED and one or more Trades were closed as a result of the fill)",
          "items": {
            "type": "string",
            "description": "The Trade's identifier, unique within the Trade's Account.",
            "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
          }
        },
        "cancellingTransactionID": {
          "type": "string",
          "description": "ID of the Transaction that cancelled the Order (only provided when the Order's state is CANCELLED)",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "cancelledTime": {
          "type": "string",
          "description": "Date/time when the Order was cancelled (only provided when the state of the Order is CANCELLED)",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "replacesOrderID": {
          "type": "string",
          "description": "The ID of the Order that was replaced by this Order (only provided if this Order was created as part of a cancel/replace).",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        },
        "replacedByOrderID": {
          "type": "string",
          "description": "The ID of the Order that replaced this Order (only provided if this Order was cancelled as part of a cancel/replace).",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        }
      }
    },
    "StopOrder": {
      "type": "object",
      "description": "A StopOrder is an order that is created with a price threshold, and will only be filled by a price that is equal to or worse than the threshold.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Order's identifier, unique within the Order's Account.",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        },
        "createTime": {
          "type": "string",
          "description": "The time when the Order was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "state": {
          "type": "string",
          "description": "The current state of the Order.",
          "enum": [
            "PENDING",
            "FILLED",
            "TRIGGERED",
            "CANCELLED"
          ]
        },
        "clientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "type": {
          "type": "string",
          "description": "The type of the Order. Always set to \"STOP\" for Stop Orders.",
          "enum": [
            "MARKET",
            "LIMIT",
            "STOP",
            "MARKET_IF_TOUCHED",
            "TAKE_PROFIT",
            "STOP_LOSS",
            "TRAILING_STOP_LOSS",
            "FIXED_PRICE"
          ]
        },
        "instrument": {
          "type": "string",
          "description": "The Stop Order's Instrument.",
          "format": "A string containing the base currency and quote currency delimited by a \"_\"."
        },
        "units": {
          "type": "string",
          "description": "The quantity requested to be filled by the Stop Order. A posititive number of units results in a long Order, and a negative number of units results in a short Order.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "price": {
          "type": "string",
          "description": "The price threshold specified for the Stop Order. The Stop Order will only be filled by a market price that is equal to or worse than this price.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "priceBound": {
          "type": "string",
          "description": "The worst market price that may be used to fill this Stop Order. If the market gaps and crosses through both the price and the priceBound, the Stop Order will be cancelled instead of being filled.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "timeInForce": {
          "type": "string",
          "description": "The time-in-force requested for the Stop Order.",
          "enum": [
            "GTC",
            "GTD",
            "GFD",
            "FOK",
            "IOC"
          ]
        },
        "gtdTime": {
          "type": "string",
          "description": "The date/time when the Stop Order will be cancelled if its timeInForce is \"GTD\".",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "positionFill": {
          "type": "string",
          "description": "Specification of how Positions in the Account are modified when the Order is filled.",
          "enum": [
            "OPEN_ONLY",
            "REDUCE_FIRST",
            "REDUCE_ONLY",
            "DEFAULT"
          ]
        },
        "triggerCondition": {
          "type": "string",
          "description": "Specification of which price component should be used when determining if an Order should be triggered and filled. This allows Orders to be triggered based on the bid, ask, mid, default (ask for buy, bid for sell) or inverse (ask for sell, bid for buy) price depending on the desired behaviour. Orders are always filled using their default price component.\nThis feature is only provided through the REST API. Clients who choose to specify a non-default trigger condition will not see it reflected in any of OANDA's proprietary or partner trading platforms, their transaction history or their account statements. OANDA platforms always assume that an Order's trigger condition is set to the default value when indicating the distance from an Order's trigger price, and will always provide the default trigger condition when creating or modifying an Order.\nA special restriction applies when creating a guaranteed Stop Loss Order. In this case the TriggerCondition value must either be \"DEFAULT\", or the \"natural\" trigger side \"DEFAULT\" results in. So for a Stop Loss Order for a long trade valid values are \"DEFAULT\" and \"BID\", and for short trades \"DEFAULT\" and \"ASK\" are valid.",
          "enum": [
            "DEFAULT",
            "INVERSE",
            "BID",
            "ASK",
            "MID"
          ]
        },
        "takeProfitOnFill": {
          "$ref": "v20_transaction.json#/definitions/TakeProfitDetails"
        },
        "stopLossOnFill": {
          "$ref": "v20_transaction.json#/definitions/StopLossDetails"
        },
        "trailingStopLossOnFill": {
          "$ref": "v20_transaction.json#/definitions/TrailingStopLossDetails"
        },
        "tradeClientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "fillingTransactionID": {
          "type": "string",
          "description": "ID of the Transaction that filled this Order (only provided when the Order's state is FILLED)",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "filledTime": {
          "type": "string",
          "description": "Date/time when the Order was filled (only provided when the Order's state is FILLED)",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "tradeOpenedID": {
          "type": "string",
          "description": "Trade ID of Trade opened when the Order was filled (only provided when the Order's state is FILLED and a Trade was opened as a result of the fill)",
          "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
        },
        "tradeReducedID": {
          "type": "string",
          "description": "Trade ID of Trade reduced when the Order was filled (only provided when the Order's state is FILLED and a Trade was reduced as a result of the fill)",
          "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
        },
        "tradeClosedIDs": {
          "type": "array",
          "description": "Trade IDs of Trades closed when the Order was filled (only provided when the Order's state is FILLED and one or more Trades were closed as a result of the fill)",
          "items": {
            "type": "string",
            "description": "The Trade's identifier, unique within the Trade's Account.",
            "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
          }
        },
        "cancellingTransactionID": {
          "type": "string",
          "description": "ID of the Transaction that cancelled the Order (only provided when the Order's state is CANCELLED)",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "cancelledTime": {
          "type": "string",
          "description": "Date/time when the Order was cancelled (only provided when the state of the Order is CANCELLED)",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "replacesOrderID": {
          "type": "string",
          "description": "The ID of the Order that was replaced by this Order (only provided if this Order was created as part of a cancel/replace).",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        },
        "replacedByOrderID": {
          "type": "string",
          "description": "The ID of the Order that replaced this Order (only provided if this Order was cancelled as part of a cancel/replace).",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        }
      }
    },
    "MarketIfTouchedOrder": {
      "type": "object",
      "description": "A MarketIfTouchedOrder is an order that is created with a price threshold, and will only be filled by a market price that is touches or crosses the threshold.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Order's identifier, unique within the Order's Account.",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        },
        "createTime": {
          "type": "string",
          "description": "The time when the Order was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "state": {
          "type": "string",
          "description": "The current state of the Order.",
          "enum": [
            "PENDING",
            "FILLED",
            "TRIGGERED",
            "CANCELLED"
          ]
        },
        "clientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "type": {
          "type": "string",
          "description": "The type of the Order. Always set to \"MARKET_IF_TOUCHED\" for Market If Touched Orders.",
          "enum": [
            "MARKET",
            "LIMIT",
            "STOP",
            "MARKET_IF_TOUCHED",
            "TAKE_PROFIT",
            "STOP_LOSS",
            "TRAILING_STOP_LOSS",
            "FIXED_PRICE"
          ]
        },
        "instrument": {
          "type": "string",
          "description": "The MarketIfTouched Order's Instrument.",
          "format": "A string containing the base currency and quote currency delimited by a \"_\"."
        },
        "units": {
          "type": "string",
          "description": "The quantity requested to be filled by the MarketIfTouched Order. A posititive number of units results in a long Order, and a negative number of units results in a short Order.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "price": {
          "type": "string",
          "description": "The price threshold specified for the MarketIfTouched Order. The MarketIfTouched Order will only be filled by a market price that crosses this price from the direction of the market price at the time when the Order was created (the initialMarketPrice). Depending on the value of the Order's price and initialMarketPrice, the MarketIfTouchedOrder will behave like a Limit or a Stop Order.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "priceBound": {
          "type": "string",
          "description": "The worst market price that may be used to fill this MarketIfTouched Order.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "timeInForce": {
          "type": "string",
          "description": "The time-in-force requested for the MarketIfTouched Order. Restricted to \"GTC\", \"GFD\" and \"GTD\" for MarketIfTouched Orders.",
          "enum": [
            "GTC",
            "GTD",
            "GFD",
            "FOK",
            "IOC"
          ]
        },
        "gtdTime": {
          "type": "string",
          "description": "The date/time when the MarketIfTouched Order will be cancelled if its timeInForce is \"GTD\".",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "positionFill": {
          "type": "string",
          "description": "Specification of how Positions in the Account are modified when the Order is filled.",
          "enum": [
            "OPEN_ONLY",
            "REDUCE_FIRST",
            "REDUCE_ONLY",
            "DEFAULT"
          ]
        },
        "triggerCondition": {
          "type": "string",
          "description": "Specification of which price component should be used when determining if an Order should be triggered and filled. This allows Orders to be triggered based on the bid, ask, mid, default (ask for buy, bid for sell) or inverse (ask for sell, bid for buy) price depending on the desired behaviour. Orders are always filled using their default price component.\nThis feature is only provided through the REST API. Clients who choose to specify a non-default trigger condition will not see it reflected in any of OANDA's proprietary or partner trading platforms, their transaction history or their account statements. OANDA platforms always assume that an Order's trigger condition is set to the default value when indicating the distance from an Order's trigger price, and will always provide the default trigger condition when creating or modifying an Order.\nA special restriction applies when creating a guaranteed Stop Loss Order. In this case the TriggerCondition value must either be \"DEFAULT\", or the \"natural\" trigger side \"DEFAULT\" results in. So for a Stop Loss Order for a long trade valid values are \"DEFAULT\" and \"BID\", and for short trades \"DEFAULT\" and \"ASK\" are valid.",
          "enum": [
            "DEFAULT",
            "INVERSE",
            "BID",
            "ASK",
            "MID"
          ]
        },
        "initialMarketPrice": {
          "type": "string",
          "description": "The Market price at the time when the MarketIfTouched Order was created.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "takeProfitOnFill": {
          "$ref": "v20_transaction.json#/definitions/TakeProfitDetails"
        },
        "stopLossOnFill": {
          "$ref": "v20_transaction.json#/definitions/StopLossDetails"
        },
        "trailingStopLossOnFill": {
          "$ref": "v20_transaction.json#/definitions/TrailingStopLossDetails"
        },
        "tradeClientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "fillingTransactionID": {
          "type": "string",
          "description": "ID of the Transaction that filled this Order (only provided when the Order's state is FILLED)",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "filledTime": {
          "type": "string",
          "description": "Date/time when the Order was filled (only provided when the Order's state is FILLED)",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "tradeOpenedID": {
          "type": "string",
          "description": "Trade ID of Trade opened when the Order was filled (only provided when the Order's state is FILLED and a Trade was opened as a result of the fill)",
          "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
        },
        "tradeReducedID": {
          "type": "string",
          "description": "Trade ID of Trade reduced when the Order was filled (only provided when the Order's state is FILLED and a Trade was reduced as a result of the fill)",
          "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
        },
        "tradeClosedIDs": {
          "type": "array",
          "description": "Trade IDs of Trades closed when the Order was filled (only provided when the Order's state is FILLED and one or more Trades were closed as a result of the fill)",
          "items": {
            "type": "string",
            "description": "The Trade's identifier, unique within the Trade's Account.",
            "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
          }
        },
        "cancellingTransactionID": {
          "type": "string",
          "description": "ID of the Transaction that cancelled the Order (only provided when the Order's state is CANCELLED)",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "cancelledTime": {
          "type": "string",
          "description": "Date/time when the Order was cancelled (only provided when the state of the Order is CANCELLED)",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "replacesOrderID": {
          "type": "string",
          "description": "The ID of the Order that was replaced by this Order (only provided if this Order was created as part of a cancel/replace).",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        },
        "replacedByOrderID": {
          "type": "string",
          "description": "The ID of the Order that replaced this Order (only provided if this Order was cancelled as part of a cancel/replace).",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        }
      }
    },
    "TakeProfitOrder": {
      "type": "object",
      "description": "A TakeProfitOrder is an order that is linked to an open Trade and created with a price threshold. The Order will be filled (closing the Trade) by the first price that is equal to or better than the threshold. A TakeProfitOrder cannot be used to open a new Position.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Order's identifier, unique within the Order's Account.",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        },
        "createTime": {
          "type": "string",
          "description": "The time when the Order was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "state": {
          "type": "string",
          "description": "The current state of the Order.",
          "enum": [
            "PENDING",
            "FILLED",
            "TRIGGERED",
            "CANCELLED"
          ]
        },
        "clientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "type": {
          "type": "string",
          "description": "The type of the Order. Always set to \"TAKE_PROFIT\" for Take Profit Orders.",
          "enum": [
            "MARKET",
            "LIMIT",
            "STOP",
            "MARKET_IF_TOUCHED",
            "TAKE_PROFIT",
            "STOP_LOSS",
            "TRAILING_STOP_LOSS",
            "FIXED_PRICE"
          ]
        },
        "tradeID": {
          "type": "string",
          "description": "The ID of the Trade to close when the price threshold is breached.",
          "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
        },
        "clientTradeID": {
          "type": "string",
          "description": "The client ID of the Trade to be closed when the price threshold is breached."
        },
        "price": {
          "type": "string",
          "description": "The price threshold specified for the TakeProfit Order. The associated Trade will be closed by a market price that is equal to or better than this threshold.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "timeInForce": {
          "type": "string",
          "description": "The time-in-force requested for the TakeProfit Order. Restricted to \"GTC\", \"GFD\" and \"GTD\" for TakeProfit Orders.",
          "enum": [
            "GTC",
            "GTD",
            "GFD",
            "FOK",
            "IOC"
          ]
        },
        "gtdTime": {
          "type": "string",
          "description": "The date/time when the TakeProfit Order will be cancelled if its timeInForce is \"GTD\".",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "triggerCondition": {
          "type": "string",
          "description": "Specification of which price component should be used when determining if an Order should be triggered and filled. This allows Orders to be triggered based on the bid, ask, mid, default (ask for buy, bid for sell) or inverse (ask for sell, bid for buy) price depending on the desired behaviour. Orders are always filled using their default price component.\nThis feature is only provided through the REST API. Clients who choose to specify a non-default trigger condition will not see it reflected in any of OANDA's proprietary or partner trading platforms, their transaction history or their account statements. OANDA platforms always assume that an Order's trigger condition is set to the default value when indicating the distance from an Order's trigger price, and will always provide the default trigger condition when creating or modifying an Order.\nA special restriction applies when creating a guaranteed Stop Loss Order. In this case the TriggerCondition value must either be \"DEFAULT\", or the \"natural\" trigger side \"DEFAULT\" results in. So for a Stop Loss Order for a long trade valid values are \"DEFAULT\" and \"BID\", and for short trades \"DEFAULT\" and \"ASK\" are valid.",
          "enum": [
            "DEFAULT",
            "INVERSE",
            "BID",
            "ASK",
            "MID"
          ]
        },
        "fillingTransactionID": {
          "type": "string",
          "description": "ID of the Transaction that filled this Order (only provided when the Order's state is FILLED)",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "filledTime": {
          "type": "string",
          "description": "Date/time when the Order was filled (only provided when the Order's state is FILLED)",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "tradeOpenedID": {
          "type": "string",
          "description": "Trade ID of Trade opened when the Order was filled (only provided when the Order's state is FILLED and a Trade was opened as a result of the fill)",
          "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
        },
        "tradeReducedID": {
          "type": "string",
          "description": "Trade ID of Trade reduced when the Order was filled (only provided when the Order's state is FILLED and a Trade was reduced as a result of the fill)",
          "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
        },
        "tradeClosedIDs": {
          "type": "array",
          "description": "Trade IDs of Trades closed when the Order was filled (only provided when the Order's state is FILLED and one or more Trades were closed as a result of the fill)",
          "items": {
            "type": "string",
            "description": "The Trade's identifier, unique within the Trade's Account.",
            "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
          }
        },
        "cancellingTransactionID": {
          "type": "string",
          "description": "ID of the Transaction that cancelled the Order (only provided when the Order's state is CANCELLED)",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "cancelledTime": {
          "type": "string",
          "description": "Date/time when the Order was cancelled (only provided when the state of the Order is CANCELLED)",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "replacesOrderID": {
          "type": "string",
          "description": "The ID of the Order that was replaced by this Order (only provided if this Order was created as part of a cancel/replace).",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        },
        "replacedByOrderID": {
          "type": "string",
          "description": "The ID of the Order that replaced this Order (only provided if this Order was cancelled as part of a cancel/replace).",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        }
      }
    },
    "StopLossOrder": {
      "type": "object",
      "description": "A StopLossOrder is an order that is linked to an open Trade and created with a price threshold. The Order will be filled (closing the Trade) by the first price that is equal to or worse than the threshold. A StopLossOrder cannot be used to open a new Position.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Order's identifier, unique within the Order's Account.",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        },
        "createTime": {
          "type": "string",
          "description": "The time when the Order was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "state": {
          "type": "string",
          "description": "The current state of the Order.",
          "enum": [
            "PENDING",
            "FILLED",
            "TRIGGERED",
            "CANCELLED"
          ]
        },
        "clientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "type": {
          "type": "string",
          "description": "The type of the Order. Always set to \"STOP_LOSS\" for Stop Loss Orders.",
          "enum": [
            "MARKET",
            "LIMIT",
            "STOP",
            "MARKET_IF_TOUCHED",
            "TAKE_PROFIT",
            "STOP_LOSS",
            "TRAILING_STOP_LOSS",
            "FIXED_PRICE"
          ]
        },
        "guaranteedExecutionPremium": {
          "type": "string",
          "description": "The premium that will be charged if the Stop Loss Order is guaranteed and the Order is filled at the guaranteed price. It is in price units and is charged for each unit of the Trade.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "tradeID": {
          "type": "string",
          "description": "The ID of the Trade to close when the price threshold is breached.",
          "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
        },
        "clientTradeID": {
          "type": "string",
          "description": "The client ID of the Trade to be closed when the price threshold is breached."
        },
        "price": {
          "type": "string",
          "description": "The price threshold specified for the Stop Loss Order. If the guaranteed flag is false, the associated Trade will be closed by a market price that is equal to or worse than this threshold. If the flag is true the associated Trade will be closed at this price.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "distance": {
          "type": "string",
          "description": "Specifies the distance (in price units) from the Account's current price to use as the Stop Loss Order price. If the Trade is short the Instrument's bid price is used, and for long Trades the ask is used.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "timeInForce": {
          "type": "string",
          "description": "The time-in-force requested for the StopLoss Order. Restricted to \"GTC\", \"GFD\" and \"GTD\" for StopLoss Orders.",
          "enum": [
            "GTC",
            "GTD",
            "GFD",
            "FOK",
            "IOC"
          ]
        },
        "gtdTime": {
          "type": "string",
          "description": "The date/time when the StopLoss Order will be cancelled if its timeInForce is \"GTD\".",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "triggerCondition": {
          "type": "string",
          "description": "Specification of which price component should be used when determining if an Order should be triggered and filled. This allows Orders to be triggered based on the bid, ask, mid, default (ask for buy, bid for sell) or inverse (ask for sell, bid for buy) price depending on the desired behaviour. Orders are always filled using their default price component.\nThis feature is only provided through the REST API. Clients who choose to specify a non-default trigger condition will not see it reflected in any of OANDA's proprietary or partner trading platforms, their transaction history or their account statements. OANDA platforms always assume that an Order's trigger condition is set to the default value when indicating the distance from an Order's trigger price, and will always provide the default trigger condition when creating or modifying an Order.\nA special restriction applies when creating a guaranteed Stop Loss Order. In this case the TriggerCondition value must either be \"DEFAULT\", or the \"natural\" trigger side \"DEFAULT\" results in. So for a Stop Loss Order for a long trade valid values are \"DEFAULT\" and \"BID\", and for short trades \"DEFAULT\" and \"ASK\" are valid.",
          "enum": [
            "DEFAULT",
            "INVERSE",
            "BID",
            "ASK",
            "MID"
          ]
        },
        "guaranteed": {
          "type": "boolean",
          "description": "Flag indicating that the Stop Loss Order is guaranteed. The default value depends on the GuaranteedStopLossOrderMode of the account, if it is REQUIRED, the default will be true, for DISABLED or ENABLED the default is false."
        },
        "fillingTransactionID": {
          "type": "string",
          "description": "ID of the Transaction that filled this Order (only provided when the Order's state is FILLED)",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "filledTime": {
          "type": "string",
          "description": "Date/time when the Order was filled (only provided when the Order's state is FILLED)",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "tradeOpenedID": {
          "type": "string",
          "description": "Trade ID of Trade opened when the Order was filled (only provided when the Order's state is FILLED and a Trade was opened as a result of the fill)",
          "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
        },
        "tradeReducedID": {
          "type": "string",
          "description": "Trade ID of Trade reduced when the Order was filled (only provided when the Order's state is FILLED and a Trade was reduced as a result of the fill)",
          "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
        },
        "tradeClosedIDs": {
          "type": "array",
          "description": "Trade IDs of Trades closed when the Order was filled (only provided when the Order's state is FILLED and one or more Trades were closed as a result of the fill)",
          "items": {
            "type": "string",
            "description": "The Trade's identifier, unique within the Trade's Account.",
            "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
          }
        },
        "cancellingTransactionID": {
          "type": "string",
          "description": "ID of the Transaction that cancelled the Order (only provided when the Order's state is CANCELLED)",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "cancelledTime": {
          "type": "string",
          "description": "Date/time when the Order was cancelled (only provided when the state of the Order is CANCELLED)",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "replacesOrderID": {
          "type": "string",
          "description": "The ID of the Order that was replaced by this Order (only provided if this Order was created as part of a cancel/replace).",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        },
        "replacedByOrderID": {
          "type": "string",
          "description": "The ID of the Order that replaced this Order (only provided if this Order was cancelled as part of a cancel/replace).",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        }
      }
    },
    "TrailingStopLossOrder": {
      "type": "object",
      "description": "A TrailingStopLossOrder is an order that is linked to an open Trade and created with a price distance. The price distance is used to calculate a trailing stop value for the order that is in the losing direction from the market price at the time of the order's creation. The trailing stop value will follow the market price as it moves in the winning direction, and the order will filled (closing the Trade) by the first price that is equal to or worse than the trailing stop value. A TrailingStopLossOrder cannot be used to open a new Position.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Order's identifier, unique within the Order's Account.",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        },
        "createTime": {
          "type": "string",
          "description": "The time when the Order was created.",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "state": {
          "type": "string",
          "description": "The current state of the Order.",
          "enum": [
            "PENDING",
            "FILLED",
            "TRIGGERED",
            "CANCELLED"
          ]
        },
        "clientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "type": {
          "type": "string",
          "description": "The type of the Order. Always set to \"TRAILING_STOP_LOSS\" for Trailing Stop Loss Orders.",
          "enum": [
            "MARKET",
            "LIMIT",
            "STOP",
            "MARKET_IF_TOUCHED",
            "TAKE_PROFIT",
            "STOP_LOSS",
            "TRAILING_STOP_LOSS",
            "FIXED_PRICE"
          ]
        },
        "tradeID": {
          "type": "string",
          "description": "The ID of the Trade to close when the price threshold is breached.",
          "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
        },
        "clientTradeID": {
          "type": "string",
          "description": "The client ID of the Trade to be closed when the price threshold is breached."
        },
        "distance": {
          "type": "string",
          "description": "The price distance (in price units) specified for the TrailingStopLoss Order.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "timeInForce": {
          "type": "string",
          "description": "The time-in-force requested for the TrailingStopLoss Order. Restricted to \"GTC\", \"GFD\" and \"GTD\" for TrailingStopLoss Orders.",
          "enum": [
            "GTC",
            "GTD",
            "GFD",
            "FOK",
            "IOC"
          ]
        },
        "gtdTime": {
          "type": "string",
          "description": "The date/time when the StopLoss Order will be cancelled if its timeInForce is \"GTD\".",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "triggerCondition": {
          "type": "string",
          "description": "Specification of which price component should be used when determining if an Order should be triggered and filled. This allows Orders to be triggered based on the bid, ask, mid, default (ask for buy, bid for sell) or inverse (ask for sell, bid for buy) price depending on the desired behaviour. Orders are always filled using their default price component.\nThis feature is only provided through the REST API. Clients who choose to specify a non-default trigger condition will not see it reflected in any of OANDA's proprietary or partner trading platforms, their transaction history or their account statements. OANDA platforms always assume that an Order's trigger condition is set to the default value when indicating the distance from an Order's trigger price, and will always provide the default trigger condition when creating or modifying an Order.\nA special restriction applies when creating a guaranteed Stop Loss Order. In this case the TriggerCondition value must either be \"DEFAULT\", or the \"natural\" trigger side \"DEFAULT\" results in. So for a Stop Loss Order for a long trade valid values are \"DEFAULT\" and \"BID\", and for short trades \"DEFAULT\" and \"ASK\" are valid.",
          "enum": [
            "DEFAULT",
            "INVERSE",
            "BID",
            "ASK",
            "MID"
          ]
        },
        "trailingStopValue": {
          "type": "string",
          "description": "The trigger price for the Trailing Stop Loss Order. The trailing stop value will trail (follow) the market price by the TSL order's configured \"distance\" as the market price moves in the winning direction. If the market price moves to a level that is equal to or worse than the trailing stop value, the order will be filled and the Trade will be closed.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "fillingTransactionID": {
          "type": "string",
          "description": "ID of the Transaction that filled this Order (only provided when the Order's state is FILLED)",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "filledTime": {
          "type": "string",
          "description": "Date/time when the Order was filled (only provided when the Order's state is FILLED)",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "tradeOpenedID": {
          "type": "string",
          "description": "Trade ID of Trade opened when the Order was filled (only provided when the Order's state is FILLED and a Trade was opened as a result of the fill)",
          "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
        },
        "tradeReducedID": {
          "type": "string",
          "description": "Trade ID of Trade reduced when the Order was filled (only provided when the Order's state is FILLED and a Trade was reduced as a result of the fill)",
          "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
        },
        "tradeClosedIDs": {
          "type": "array",
          "description": "Trade IDs of Trades closed when the Order was filled (only provided when the Order's state is FILLED and one or more Trades were closed as a result of the fill)",
          "items": {
            "type": "string",
            "description": "The Trade's identifier, unique within the Trade's Account.",
            "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
          }
        },
        "cancellingTransactionID": {
          "type": "string",
          "description": "ID of the Transaction that cancelled the Order (only provided when the Order's state is CANCELLED)",
          "format": "String representation of the numerical OANDA-assigned TransactionID"
        },
        "cancelledTime": {
          "type": "string",
          "description": "Date/time when the Order was cancelled (only provided when the state of the Order is CANCELLED)",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "replacesOrderID": {
          "type": "string",
          "description": "The ID of the Order that was replaced by this Order (only provided if this Order was created as part of a cancel/replace).",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        },
        "replacedByOrderID": {
          "type": "string",
          "description": "The ID of the Order that replaced this Order (only provided if this Order was cancelled as part of a cancel/replace).",
          "format": "The string representation of the OANDA-assigned OrderID. OANDA-assigned OrderIDs are positive integers, and are derived from the TransactionID of the Transaction that created the Order."
        }
      }
    },
    "OrderRequest": {
      "type": "object",
      "description": "The base Order specification used when requesting that an Order be created. Each specific Order-type extends this definition.",
      "properties": {}
    },
    "MarketOrderRequest": {
      "type": "object",
      "description": "A MarketOrderRequest specifies the parameters that may be set when creating a Market Order.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of the Order to Create. Must be set to \"MARKET\" when creating a Market Order.",
          "enum": [
            "MARKET",
            "LIMIT",
            "STOP",
            "MARKET_IF_TOUCHED",
            "TAKE_PROFIT",
            "STOP_LOSS",
            "TRAILING_STOP_LOSS",
            "FIXED_PRICE"
          ]
        },
        "instrument": {
          "type": "string",
          "description": "The Market Order's Instrument.",
          "format": "A string containing the base currency and quote currency delimited by a \"_\"."
        },
        "units": {
          "type": "string",
          "description": "The quantity requested to be filled by the Market Order. A posititive number of units results in a long Order, and a negative number of units results in a short Order.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "timeInForce": {
          "type": "string",
          "description": "The time-in-force requested for the Market Order. Restricted to FOK or IOC for a MarketOrder.",
          "enum": [
            "GTC",
            "GTD",
            "GFD",
            "FOK",
            "IOC"
          ]
        },
        "priceBound": {
          "type": "string",
          "description": "The worst price that the client is willing to have the Market Order filled at.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "positionFill": {
          "type": "string",
          "description": "Specification of how Positions in the Account are modified when the Order is filled.",
          "enum": [
            "OPEN_ONLY",
            "REDUCE_FIRST",
            "REDUCE_ONLY",
            "DEFAULT"
          ]
        },
        "clientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "takeProfitOnFill": {
          "$ref": "v20_transaction.json#/definitions/TakeProfitDetails"
        },
        "stopLossOnFill": {
          "$ref": "v20_transaction.json#/definitions/StopLossDetails"
        },
        "trailingStopLossOnFill": {
          "$ref": "v20_transaction.json#/definitions/TrailingStopLossDetails"
        },
        "tradeClientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        }
      }
    },
    "LimitOrderRequest": {
      "type": "object",
      "description": "A LimitOrderRequest specifies the parameters that may be set when creating a Limit Order.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of the Order to Create. Must be set to \"LIMIT\" when creating a Market Order.",
          "enum": [
            "MARKET",
            "LIMIT",
            "STOP",
            "MARKET_IF_TOUCHED",
            "TAKE_PROFIT",
            "STOP_LOSS",
            "TRAILING_STOP_LOSS",
            "FIXED_PRICE"
          ]
        },
        "instrument": {
          "type": "string",
          "description": "The Limit Order's Instrument.",
          "format": "A string containing the base currency and quote currency delimited by a \"_\"."
        },
        "units": {
          "type": "string",
          "description": "The quantity requested to be filled by the Limit Order. A posititive number of units results in a long Order, and a negative number of units results in a short Order.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "price": {
          "type": "string",
          "description": "The price threshold specified for the Limit Order. The Limit Order will only be filled by a market price that is equal to or better than this price.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "timeInForce": {
          "type": "string",
          "description": "The time-in-force requested for the Limit Order.",
          "enum": [
            "GTC",
            "GTD",
            "GFD",
            "FOK",
            "IOC"
          ]
        },
        "gtdTime": {
          "type": "string",
          "description": "The date/time when the Limit Order will be cancelled if its timeInForce is \"GTD\".",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "positionFill": {
          "type": "string",
          "description": "Specification of how Positions in the Account are modified when the Order is filled.",
          "enum": [
            "OPEN_ONLY",
            "REDUCE_FIRST",
            "REDUCE_ONLY",
            "DEFAULT"
          ]
        },
        "triggerCondition": {
          "type": "string",
          "description": "Specification of which price component should be used when determining if an Order should be triggered and filled. This allows Orders to be triggered based on the bid, ask, mid, default (ask for buy, bid for sell) or inverse (ask for sell, bid for buy) price depending on the desired behaviour. Orders are always filled using their default price component.\nThis feature is only provided through the REST API. Clients who choose to specify a non-default trigger condition will not see it reflected in any of OANDA's proprietary or partner trading platforms, their transaction history or their account statements. OANDA platforms always assume that an Order's trigger condition is set to the default value when indicating the distance from an Order's trigger price, and will always provide the default trigger condition when creating or modifying an Order.\nA special restriction applies when creating a guaranteed Stop Loss Order. In this case the TriggerCondition value must either be \"DEFAULT\", or the \"natural\" trigger side \"DEFAULT\" results in. So for a Stop Loss Order for a long trade valid values are \"DEFAULT\" and \"BID\", and for short trades \"DEFAULT\" and \"ASK\" are valid.",
          "enum": [
            "DEFAULT",
            "INVERSE",
            "BID",
            "ASK",
            "MID"
          ]
        },
        "clientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "takeProfitOnFill": {
          "$ref": "v20_transaction.json#/definitions/TakeProfitDetails"
        },
        "stopLossOnFill": {
          "$ref": "v20_transaction.json#/definitions/StopLossDetails"
        },
        "trailingStopLossOnFill": {
          "$ref": "v20_transaction.json#/definitions/TrailingStopLossDetails"
        },
        "tradeClientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        }
      }
    },
    "StopOrderRequest": {
      "type": "object",
      "description": "A StopOrderRequest specifies the parameters that may be set when creating a Stop Order.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of the Order to Create. Must be set to \"STOP\" when creating a Stop Order.",
          "enum": [
            "MARKET",
            "LIMIT",
            "STOP",
            "MARKET_IF_TOUCHED",
            "TAKE_PROFIT",
            "STOP_LOSS",
            "TRAILING_STOP_LOSS",
            "FIXED_PRICE"
          ]
        },
        "instrument": {
          "type": "string",
          "description": "The Stop Order's Instrument.",
          "format": "A string containing the base currency and quote currency delimited by a \"_\"."
        },
        "units": {
          "type": "string",
          "description": "The quantity requested to be filled by the Stop Order. A posititive number of units results in a long Order, and a negative number of units results in a short Order.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "price": {
          "type": "string",
          "description": "The price threshold specified for the Stop Order. The Stop Order will only be filled by a market price that is equal to or worse than this price.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "priceBound": {
          "type": "string",
          "description": "The worst market price that may be used to fill this Stop Order. If the market gaps and crosses through both the price and the priceBound, the Stop Order will be cancelled instead of being filled.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "timeInForce": {
          "type": "string",
          "description": "The time-in-force requested for the Stop Order.",
          "enum": [
            "GTC",
            "GTD",
            "GFD",
            "FOK",
            "IOC"
          ]
        },
        "gtdTime": {
          "type": "string",
          "description": "The date/time when the Stop Order will be cancelled if its timeInForce is \"GTD\".",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "positionFill": {
          "type": "string",
          "description": "Specification of how Positions in the Account are modified when the Order is filled.",
          "enum": [
            "OPEN_ONLY",
            "REDUCE_FIRST",
            "REDUCE_ONLY",
            "DEFAULT"
          ]
        },
        "triggerCondition": {
          "type": "string",
          "description": "Specification of which price component should be used when determining if an Order should be triggered and filled. This allows Orders to be triggered based on the bid, ask, mid, default (ask for buy, bid for sell) or inverse (ask for sell, bid for buy) price depending on the desired behaviour. Orders are always filled using their default price component.\nThis feature is only provided through the REST API. Clients who choose to specify a non-default trigger condition will not see it reflected in any of OANDA's proprietary or partner trading platforms, their transaction history or their account statements. OANDA platforms always assume that an Order's trigger condition is set to the default value when indicating the distance from an Order's trigger price, and will always provide the default trigger condition when creating or modifying an Order.\nA special restriction applies when creating a guaranteed Stop Loss Order. In this case the TriggerCondition value must either be \"DEFAULT\", or the \"natural\" trigger side \"DEFAULT\" results in. So for a Stop Loss Order for a long trade valid values are \"DEFAULT\" and \"BID\", and for short trades \"DEFAULT\" and \"ASK\" are valid.",
          "enum": [
            "DEFAULT",
            "INVERSE",
            "BID",
            "ASK",
            "MID"
          ]
        },
        "clientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "takeProfitOnFill": {
          "$ref": "v20_transaction.json#/definitions/TakeProfitDetails"
        },
        "stopLossOnFill": {
          "$ref": "v20_transaction.json#/definitions/StopLossDetails"
        },
        "trailingStopLossOnFill": {
          "$ref": "v20_transaction.json#/definitions/TrailingStopLossDetails"
        },
        "tradeClientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        }
      }
    },
    "MarketIfTouchedOrderRequest": {
      "type": "object",
      "description": "A MarketIfTouchedOrderRequest specifies the parameters that may be set when creating a Market-if-Touched Order.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of the Order to Create. Must be set to \"MARKET_IF_TOUCHED\" when creating a Market If Touched Order.",
          "enum": [
            "MARKET",
            "LIMIT",
            "STOP",
            "MARKET_IF_TOUCHED",
            "TAKE_PROFIT",
            "STOP_LOSS",
            "TRAILING_STOP_LOSS",
            "FIXED_PRICE"
          ]
        },
        "instrument": {
          "type": "string",
          "description": "The MarketIfTouched Order's Instrument.",
          "format": "A string containing the base currency and quote currency delimited by a \"_\"."
        },
        "units": {
          "type": "string",
          "description": "The quantity requested to be filled by the MarketIfTouched Order. A posititive number of units results in a long Order, and a negative number of units results in a short Order.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "price": {
          "type": "string",
          "description": "The price threshold specified for the MarketIfTouched Order. The MarketIfTouched Order will only be filled by a market price that crosses this price from the direction of the market price at the time when the Order was created (the initialMarketPrice). Depending on the value of the Order's price and initialMarketPrice, the MarketIfTouchedOrder will behave like a Limit or a Stop Order.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "priceBound": {
          "type": "string",
          "description": "The worst market price that may be used to fill this MarketIfTouched Order.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "timeInForce": {
          "type": "string",
          "description": "The time-in-force requested for the MarketIfTouched Order. Restricted to \"GTC\", \"GFD\" and \"GTD\" for MarketIfTouched Orders.",
          "enum": [
            "GTC",
            "GTD",
            "GFD",
            "FOK",
            "IOC"
          ]
        },
        "gtdTime": {
          "type": "string",
          "description": "The date/time when the MarketIfTouched Order will be cancelled if its timeInForce is \"GTD\".",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "positionFill": {
          "type": "string",
          "description": "Specification of how Positions in the Account are modified when the Order is filled.",
          "enum": [
            "OPEN_ONLY",
            "REDUCE_FIRST",
            "REDUCE_ONLY",
            "DEFAULT"
          ]
        },
        "triggerCondition": {
          "type": "string",
          "description": "Specification of which price component should be used when determining if an Order should be triggered and filled. This allows Orders to be triggered based on the bid, ask, mid, default (ask for buy, bid for sell) or inverse (ask for sell, bid for buy) price depending on the desired behaviour. Orders are always filled using their default price component.\nThis feature is only provided through the REST API. Clients who choose to specify a non-default trigger condition will not see it reflected in any of OANDA's proprietary or partner trading platforms, their transaction history or their account statements. OANDA platforms always assume that an Order's trigger condition is set to the default value when indicating the distance from an Order's trigger price, and will always provide the default trigger condition when creating or modifying an Order.\nA special restriction applies when creating a guaranteed Stop Loss Order. In this case the TriggerCondition value must either be \"DEFAULT\", or the \"natural\" trigger side \"DEFAULT\" results in. So for a Stop Loss Order for a long trade valid values are \"DEFAULT\" and \"BID\", and for short trades \"DEFAULT\" and \"ASK\" are valid.",
          "enum": [
            "DEFAULT",
            "INVERSE",
            "BID",
            "ASK",
            "MID"
          ]
        },
        "clientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        },
        "takeProfitOnFill": {
          "$ref": "v20_transaction.json#/definitions/TakeProfitDetails"
        },
        "stopLossOnFill": {
          "$ref": "v20_transaction.json#/definitions/StopLossDetails"
        },
        "trailingStopLossOnFill": {
          "$ref": "v20_transaction.json#/definitions/TrailingStopLossDetails"
        },
        "tradeClientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        }
      }
    },
    "TakeProfitOrderRequest": {
      "type": "object",
      "description": "A TakeProfitOrderRequest specifies the parameters that may be set when creating a Take Profit Order. Only one of the price and distance fields may be specified.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of the Order to Create. Must be set to \"TAKE_PROFIT\" when creating a Take Profit Order.",
          "enum": [
            "MARKET",
            "LIMIT",
            "STOP",
            "MARKET_IF_TOUCHED",
            "TAKE_PROFIT",
            "STOP_LOSS",
            "TRAILING_STOP_LOSS",
            "FIXED_PRICE"
          ]
        },
        "tradeID": {
          "type": "string",
          "description": "The ID of the Trade to close when the price threshold is breached.",
          "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
        },
        "clientTradeID": {
          "type": "string",
          "description": "The client ID of the Trade to be closed when the price threshold is breached."
        },
        "price": {
          "type": "string",
          "description": "The price threshold specified for the TakeProfit Order. The associated Trade will be closed by a market price that is equal to or better than this threshold.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "timeInForce": {
          "type": "string",
          "description": "The time-in-force requested for the TakeProfit Order. Restricted to \"GTC\", \"GFD\" and \"GTD\" for TakeProfit Orders.",
          "enum": [
            "GTC",
            "GTD",
            "GFD",
            "FOK",
            "IOC"
          ]
        },
        "gtdTime": {
          "type": "string",
          "description": "The date/time when the TakeProfit Order will be cancelled if its timeInForce is \"GTD\".",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "triggerCondition": {
          "type": "string",
          "description": "Specification of which price component should be used when determining if an Order should be triggered and filled. This allows Orders to be triggered based on the bid, ask, mid, default (ask for buy, bid for sell) or inverse (ask for sell, bid for buy) price depending on the desired behaviour. Orders are always filled using their default price component.\nThis feature is only provided through the REST API. Clients who choose to specify a non-default trigger condition will not see it reflected in any of OANDA's proprietary or partner trading platforms, their transaction history or their account statements. OANDA platforms always assume that an Order's trigger condition is set to the default value when indicating the distance from an Order's trigger price, and will always provide the default trigger condition when creating or modifying an Order.\nA special restriction applies when creating a guaranteed Stop Loss Order. In this case the TriggerCondition value must either be \"DEFAULT\", or the \"natural\" trigger side \"DEFAULT\" results in. So for a Stop Loss Order for a long trade valid values are \"DEFAULT\" and \"BID\", and for short trades \"DEFAULT\" and \"ASK\" are valid.",
          "enum": [
            "DEFAULT",
            "INVERSE",
            "BID",
            "ASK",
            "MID"
          ]
        },
        "clientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        }
      }
    },
    "StopLossOrderRequest": {
      "type": "object",
      "description": "A StopLossOrderRequest specifies the parameters that may be set when creating a Stop Loss Order. Only one of the price and distance fields may be specified.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of the Order to Create. Must be set to \"STOP_LOSS\" when creating a Stop Loss Order.",
          "enum": [
            "MARKET",
            "LIMIT",
            "STOP",
            "MARKET_IF_TOUCHED",
            "TAKE_PROFIT",
            "STOP_LOSS",
            "TRAILING_STOP_LOSS",
            "FIXED_PRICE"
          ]
        },
        "tradeID": {
          "type": "string",
          "description": "The ID of the Trade to close when the price threshold is breached.",
          "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
        },
        "clientTradeID": {
          "type": "string",
          "description": "The client ID of the Trade to be closed when the price threshold is breached."
        },
        "price": {
          "type": "string",
          "description": "The price threshold specified for the Stop Loss Order. If the guaranteed flag is false, the associated Trade will be closed by a market price that is equal to or worse than this threshold. If the flag is true the associated Trade will be closed at this price.",
          "format": "A decimal number encodes as a string. The amount of precision provided depends on the Instrument."
        },
        "distance": {
          "type": "string",
          "description": "Specifies the distance (in price units) from the Account's current price to use as the Stop Loss Order price. If the Trade is short the Instrument's bid price is used, and for long Trades the ask is used.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "timeInForce": {
          "type": "string",
          "description": "The time-in-force requested for the StopLoss Order. Restricted to \"GTC\", \"GFD\" and \"GTD\" for StopLoss Orders.",
          "enum": [
            "GTC",
            "GTD",
            "GFD",
            "FOK",
            "IOC"
          ]
        },
        "gtdTime": {
          "type": "string",
          "description": "The date/time when the StopLoss Order will be cancelled if its timeInForce is \"GTD\".",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "triggerCondition": {
          "type": "string",
          "description": "Specification of which price component should be used when determining if an Order should be triggered and filled. This allows Orders to be triggered based on the bid, ask, mid, default (ask for buy, bid for sell) or inverse (ask for sell, bid for buy) price depending on the desired behaviour. Orders are always filled using their default price component.\nThis feature is only provided through the REST API. Clients who choose to specify a non-default trigger condition will not see it reflected in any of OANDA's proprietary or partner trading platforms, their transaction history or their account statements. OANDA platforms always assume that an Order's trigger condition is set to the default value when indicating the distance from an Order's trigger price, and will always provide the default trigger condition when creating or modifying an Order.\nA special restriction applies when creating a guaranteed Stop Loss Order. In this case the TriggerCondition value must either be \"DEFAULT\", or the \"natural\" trigger side \"DEFAULT\" results in. So for a Stop Loss Order for a long trade valid values are \"DEFAULT\" and \"BID\", and for short trades \"DEFAULT\" and \"ASK\" are valid.",
          "enum": [
            "DEFAULT",
            "INVERSE",
            "BID",
            "ASK",
            "MID"
          ]
        },
        "guaranteed": {
          "type": "boolean",
          "description": "Flag indicating that the Stop Loss Order is guaranteed. The default value depends on the GuaranteedStopLossOrderMode of the account, if it is REQUIRED, the default will be true, for DISABLED or ENABLED the default is false."
        },
        "clientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        }
      }
    },
    "TrailingStopLossOrderRequest": {
      "type": "object",
      "description": "A TrailingStopLossOrderRequest specifies the parameters that may be set when creating a Trailing Stop Loss Order.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of the Order to Create. Must be set to \"TRAILING_STOP_LOSS\" when creating a Trailng Stop Loss Order.",
          "enum": [
            "MARKET",
            "LIMIT",
            "STOP",
            "MARKET_IF_TOUCHED",
            "TAKE_PROFIT",
            "STOP_LOSS",
            "TRAILING_STOP_LOSS",
            "FIXED_PRICE"
          ]
        },
        "tradeID": {
          "type": "string",
          "description": "The ID of the Trade to close when the price threshold is breached.",
          "format": "The string representation of the OANDA-assigned TradeID. OANDA-assigned TradeIDs are positive integers, and are derived from the TransactionID of the Transaction that opened the Trade."
        },
        "clientTradeID": {
          "type": "string",
          "description": "The client ID of the Trade to be closed when the price threshold is breached."
        },
        "distance": {
          "type": "string",
          "description": "The price distance (in price units) specified for the TrailingStopLoss Order.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "timeInForce": {
          "type": "string",
          "description": "The time-in-force requested for the TrailingStopLoss Order. Restricted to \"GTC\", \"GFD\" and \"GTD\" for TrailingStopLoss Orders.",
          "enum": [
            "GTC",
            "GTD",
            "GFD",
            "FOK",
            "IOC"
          ]
        },
        "gtdTime": {
          "type": "string",
          "description": "The date/time when the StopLoss Order will be cancelled if its timeInForce is \"GTD\".",
          "format": "The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt. The Unix representation is a string representing the number of seconds since the Unix Epoch (January 1st, 1970 at UTC). The value is a fractional number, where the fractional part represents a fraction of a second (up to nine decimal places)."
        },
        "triggerCondition": {
          "type": "string",
          "description": "Specification of which price component should be used when determining if an Order should be triggered and filled. This allows Orders to be triggered based on the bid, ask, mid, default (ask for buy, bid for sell) or inverse (ask for sell, bid for buy) price depending on the desired behaviour. Orders are always filled using their default price component.\nThis feature is only provided through the REST API. Clients who choose to specify a non-default trigger condition will not see it reflected in any of OANDA's proprietary or partner trading platforms, their transaction history or their account statements. OANDA platforms always assume that an Order's trigger condition is set to the default value when indicating the distance from an Order's trigger price, and will always provide the default trigger condition when creating or modifying an Order.\nA special restriction applies when creating a guaranteed Stop Loss Order. In this case the TriggerCondition value must either be \"DEFAULT\", or the \"natural\" trigger side \"DEFAULT\" results in. So for a Stop Loss Order for a long trade valid values are \"DEFAULT\" and \"BID\", and for short trades \"DEFAULT\" and \"ASK\" are valid.",
          "enum": [
            "DEFAULT",
            "INVERSE",
            "BID",
            "ASK",
            "MID"
          ]
        },
        "clientExtensions": {
          "$ref": "v20_transaction.json#/definitions/ClientExtensions"
        }
      }
    },
    "UnitsAvailableDetails": {
      "type": "object",
      "description": "Representation of many units of an Instrument are available to be traded for both long and short Orders.",
      "properties": {
        "long": {
          "type": "string",
          "description": "The units available for long Orders.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "short": {
          "type": "string",
          "description": "The units available for short Orders.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        }
      }
    },
    "UnitsAvailable": {
      "type": "object",
      "description": "Representation of how many units of an Instrument are available to be traded by an Order depending on its postionFill option.",
      "properties": {
        "default": {
          "$ref": "#/definitions/UnitsAvailableDetails"
        },
        "reduceFirst": {
          "$ref": "#/definitions/UnitsAvailableDetails"
        },
        "reduceOnly": {
          "$ref": "#/definitions/UnitsAvailableDetails"
        },
        "openOnly": {
          "$ref": "#/definitions/UnitsAvailableDetails"
        }
      }
    },
    "GuaranteedStopLossOrderEntryData": {
      "type": "object",
      "description": "Details required by clients creating a Guaranteed Stop Loss Order",
      "properties": {
        "minimumDistance": {
          "type": "string",
          "description": "The minimum distance allowed between the Trade's fill price and the configured price for guaranteed Stop Loss Orders created for this instrument. Specified in price units.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "premium": {
          "type": "string",
          "description": "The amount that is charged to the account if a guaranteed Stop Loss Order is triggered and filled. The value is in price units and is charged for each unit of the Trade.",
          "format": "A decimal number encoded as a string. The amount of precision provided depends on what the number represents."
        },
        "levelRestriction": {
          "$ref": "v20_primitives.json#/definitions/GuaranteedStopLossOrderLevelRestriction"
        }
      }
    }
  },
  "parameters": {
    "orderSpecifierPathParam": {
      "name": "orderSpecifier",
      "description": "The Order Specifier",
      "in": "path",
      "type": "string",
      "format": "Either the Order's OANDA-assigned OrderID or the Order's client-provided ClientID prefixed by the \"@\" symbol",
      "required": true
    }
  },
  "responses": {
    "400": {
      "description": "Bad Request. The client has provided invalid data to be processed by the server.",
      "headers": {
        "RequestID": {
          "description": "The unique identifier generated for the request",
          "type": "string"
        }
      },
      "schema": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string",
            "description": "The code of the error that has occurred. This field may not be returned for some errors."
          },
          "errorMessage": {
            "type": "string",
            "description": "The human-readable description of the error that has occurred."
          }
        }
      }
    },
    "401": {
      "description": "Unauthorized. The endpoint being access required the client to authenticated, however the the authentication token is invalid or has not been provided.",
      "headers": {
        "RequestID": {
          "description": "The unique identifier generated for the request",
          "type": "string"
        }
      },
      "schema": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string",
            "description": "The code of the error that has occurred. This field may not be returned for some errors."
          },
          "errorMessage": {
            "type": "string",
            "description": "The human-readable description of the error that has occurred."
          }
        }
      }
    },
    "403": {
      "description": "Forbidden. The client has provided a token that does not authorize them to perform the action implemented by the API endpoint.",
      "headers": {
        "RequestID": {
          "description": "The unique identifier generated for the request",
          "type": "string"
        }
      },
      "schema": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string",
            "description": "The code of the error that has occurred. This field may not be returned for some errors."
          },
          "errorMessage": {
            "type": "string",
            "description": "The human-readable description of the error that has occurred."
          }
        }
      }
    },
    "404": {
      "description": "Not Found. The client has attempted to access an entity that does not exist.",
      "headers": {
        "RequestID": {
          "description": "The unique identifier generated for the request",
          "type": "string"
        }
      },
      "schema": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string",
            "description": "The code of the error that has occurred. This field may not be returned for some errors."
          },
          "errorMessage": {
            "type": "string",
            "description": "The human-readable description of the error that has occurred."
          }
        }
      }
    },
    "405": {
      "description": "Method Not Allowed. The client has attempted to access an endpoint using an HTTP method that is not supported.",
      "headers": {
        "RequestID": {
          "description": "The unique identifier generated for the request",
          "type": "string"
        }
      },
      "schema": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string",
            "description": "The code of the error that has occurred. This field may not be returned for some errors."
          },
          "errorMessage": {
            "type": "string",
            "description": "The human-readable description of the error that has occurred."
          }
        }
      }
    },
    "416": {
      "description": "Range Not Satisfiable. The client has specified a range that is invalid or cannot be processed.",
      "headers": {
        "RequestID": {
          "description": "The unique identifier generated for the request",
          "type": "string"
        }
      },
      "schema": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string",
            "description": "The code of the error that has occurred. This field may not be returned for some errors."
          },
          "errorMessage": {
            "type": "string",
            "description": "The human-readable description of the error that has occurred."
          }
        }
      }
    }
  }
}
