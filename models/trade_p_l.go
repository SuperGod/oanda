// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// TradePL The classification of TradePLs.
// swagger:model TradePL
type TradePL string

const (

	// TradePLPOSITIVE captures enum value "POSITIVE"
	TradePLPOSITIVE TradePL = "POSITIVE"

	// TradePLNEGATIVE captures enum value "NEGATIVE"
	TradePLNEGATIVE TradePL = "NEGATIVE"

	// TradePLZERO captures enum value "ZERO"
	TradePLZERO TradePL = "ZERO"
)

// for schema
var tradePLEnum []interface{}

func init() {
	var res []TradePL
	if err := json.Unmarshal([]byte(`["POSITIVE","NEGATIVE","ZERO"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		tradePLEnum = append(tradePLEnum, v)
	}
}

func (m TradePL) validateTradePLEnum(path, location string, value TradePL) error {
	if err := validate.Enum(path, location, value, tradePLEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this trade p l
func (m TradePL) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateTradePLEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
