// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// CalculatedAccountState The dynamically calculated state of a client's Account.
// swagger:model CalculatedAccountState
type CalculatedAccountState struct {

	// The net asset value of the Account. Equal to Account balance + unrealizedPL.
	NAV string `json:"NAV,omitempty"`

	// Margin available for Account currency.
	MarginAvailable string `json:"marginAvailable,omitempty"`

	// The Account's margin call margin used.
	MarginCallMarginUsed string `json:"marginCallMarginUsed,omitempty"`

	// The Account's margin call percentage. When this value is 1.0 or above the Account is in a margin call situation.
	MarginCallPercent string `json:"marginCallPercent,omitempty"`

	// The Account's margin closeout margin used.
	MarginCloseoutMarginUsed string `json:"marginCloseoutMarginUsed,omitempty"`

	// The Account's margin closeout NAV.
	MarginCloseoutNAV string `json:"marginCloseoutNAV,omitempty"`

	// The Account's margin closeout percentage. When this value is 1.0 or above the Account is in a margin closeout situation.
	MarginCloseoutPercent string `json:"marginCloseoutPercent,omitempty"`

	// The value of the Account's open positions as used for margin closeout calculations represented in the Account's home currency.
	MarginCloseoutPositionValue string `json:"marginCloseoutPositionValue,omitempty"`

	// The Account's margin closeout unrealized PL.
	MarginCloseoutUnrealizedPL string `json:"marginCloseoutUnrealizedPL,omitempty"`

	// Margin currently used for the Account.
	MarginUsed string `json:"marginUsed,omitempty"`

	// The value of the Account's open positions represented in the Account's home currency.
	PositionValue string `json:"positionValue,omitempty"`

	// The total unrealized profit/loss for all Trades currently open in the Account.
	UnrealizedPL string `json:"unrealizedPL,omitempty"`

	// The current WithdrawalLimit for the account which will be zero or a positive value indicating how much can be withdrawn from the account.
	WithdrawalLimit string `json:"withdrawalLimit,omitempty"`
}

// Validate validates this calculated account state
func (m *CalculatedAccountState) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CalculatedAccountState) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CalculatedAccountState) UnmarshalBinary(b []byte) error {
	var res CalculatedAccountState
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
