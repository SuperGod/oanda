// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/SuperGod/oanda/models"
)

// GetPositionReader is a Reader for the GetPosition structure.
type GetPositionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPositionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetPositionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetPositionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetPositionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewGetPositionMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetPositionOK creates a GetPositionOK with default headers values
func NewGetPositionOK() *GetPositionOK {
	return &GetPositionOK{}
}

/*GetPositionOK handles this case with default header values.

The Position is provided.
*/
type GetPositionOK struct {
	/*The unique identifier generated for the request
	 */
	RequestID string

	Payload *GetPositionOKBody
}

func (o *GetPositionOK) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountID}/positions/{instrument}][%d] getPositionOK  %+v", 200, o.Payload)
}

func (o *GetPositionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header RequestID
	o.RequestID = response.GetHeader("RequestID")

	o.Payload = new(GetPositionOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPositionUnauthorized creates a GetPositionUnauthorized with default headers values
func NewGetPositionUnauthorized() *GetPositionUnauthorized {
	return &GetPositionUnauthorized{}
}

/*GetPositionUnauthorized handles this case with default header values.

Unauthorized. The endpoint being access required the client to authenticated, however the the authentication token is invalid or has not been provided.
*/
type GetPositionUnauthorized struct {
	/*The unique identifier generated for the request
	 */
	RequestID string

	Payload *GetPositionUnauthorizedBody
}

func (o *GetPositionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountID}/positions/{instrument}][%d] getPositionUnauthorized  %+v", 401, o.Payload)
}

func (o *GetPositionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header RequestID
	o.RequestID = response.GetHeader("RequestID")

	o.Payload = new(GetPositionUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPositionNotFound creates a GetPositionNotFound with default headers values
func NewGetPositionNotFound() *GetPositionNotFound {
	return &GetPositionNotFound{}
}

/*GetPositionNotFound handles this case with default header values.

Not Found. The client has attempted to access an entity that does not exist.
*/
type GetPositionNotFound struct {
	/*The unique identifier generated for the request
	 */
	RequestID string

	Payload *GetPositionNotFoundBody
}

func (o *GetPositionNotFound) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountID}/positions/{instrument}][%d] getPositionNotFound  %+v", 404, o.Payload)
}

func (o *GetPositionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header RequestID
	o.RequestID = response.GetHeader("RequestID")

	o.Payload = new(GetPositionNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPositionMethodNotAllowed creates a GetPositionMethodNotAllowed with default headers values
func NewGetPositionMethodNotAllowed() *GetPositionMethodNotAllowed {
	return &GetPositionMethodNotAllowed{}
}

/*GetPositionMethodNotAllowed handles this case with default header values.

Method Not Allowed. The client has attempted to access an endpoint using an HTTP method that is not supported.
*/
type GetPositionMethodNotAllowed struct {
	/*The unique identifier generated for the request
	 */
	RequestID string

	Payload *GetPositionMethodNotAllowedBody
}

func (o *GetPositionMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountID}/positions/{instrument}][%d] getPositionMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *GetPositionMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header RequestID
	o.RequestID = response.GetHeader("RequestID")

	o.Payload = new(GetPositionMethodNotAllowedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetPositionMethodNotAllowedBody get position method not allowed body
swagger:model GetPositionMethodNotAllowedBody
*/
type GetPositionMethodNotAllowedBody struct {

	// The code of the error that has occurred. This field may not be returned for some errors.
	ErrorCode string `json:"errorCode,omitempty"`

	// The human-readable description of the error that has occurred.
	ErrorMessage string `json:"errorMessage,omitempty"`
}

// Validate validates this get position method not allowed body
func (o *GetPositionMethodNotAllowedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPositionMethodNotAllowedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPositionMethodNotAllowedBody) UnmarshalBinary(b []byte) error {
	var res GetPositionMethodNotAllowedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetPositionNotFoundBody get position not found body
swagger:model GetPositionNotFoundBody
*/
type GetPositionNotFoundBody struct {

	// The code of the error that has occurred. This field may not be returned for some errors.
	ErrorCode string `json:"errorCode,omitempty"`

	// The human-readable description of the error that has occurred.
	ErrorMessage string `json:"errorMessage,omitempty"`
}

// Validate validates this get position not found body
func (o *GetPositionNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPositionNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPositionNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetPositionNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetPositionOKBody get position o k body
swagger:model GetPositionOKBody
*/
type GetPositionOKBody struct {

	// The ID of the most recent Transaction created for the Account
	LastTransactionID string `json:"lastTransactionID,omitempty"`

	// position
	Position *models.Position `json:"position,omitempty"`
}

// Validate validates this get position o k body
func (o *GetPositionOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validatePosition(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPositionOKBody) validatePosition(formats strfmt.Registry) error {

	if swag.IsZero(o.Position) { // not required
		return nil
	}

	if o.Position != nil {
		if err := o.Position.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getPositionOK" + "." + "position")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetPositionOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPositionOKBody) UnmarshalBinary(b []byte) error {
	var res GetPositionOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetPositionUnauthorizedBody get position unauthorized body
swagger:model GetPositionUnauthorizedBody
*/
type GetPositionUnauthorizedBody struct {

	// The code of the error that has occurred. This field may not be returned for some errors.
	ErrorCode string `json:"errorCode,omitempty"`

	// The human-readable description of the error that has occurred.
	ErrorMessage string `json:"errorMessage,omitempty"`
}

// Validate validates this get position unauthorized body
func (o *GetPositionUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPositionUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPositionUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res GetPositionUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
