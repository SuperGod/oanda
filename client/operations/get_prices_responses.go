// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/SuperGod/oanda/models"
)

// GetPricesReader is a Reader for the GetPrices structure.
type GetPricesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPricesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetPricesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetPricesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetPricesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetPricesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewGetPricesMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetPricesOK creates a GetPricesOK with default headers values
func NewGetPricesOK() *GetPricesOK {
	return &GetPricesOK{}
}

/*GetPricesOK handles this case with default header values.

Pricing information has been successfully provided.
*/
type GetPricesOK struct {
	/*The unique identifier generated for the request
	 */
	RequestID string

	Payload *GetPricesOKBody
}

func (o *GetPricesOK) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountID}/pricing][%d] getPricesOK  %+v", 200, o.Payload)
}

func (o *GetPricesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header RequestID
	o.RequestID = response.GetHeader("RequestID")

	o.Payload = new(GetPricesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPricesBadRequest creates a GetPricesBadRequest with default headers values
func NewGetPricesBadRequest() *GetPricesBadRequest {
	return &GetPricesBadRequest{}
}

/*GetPricesBadRequest handles this case with default header values.

Bad Request. The client has provided invalid data to be processed by the server.
*/
type GetPricesBadRequest struct {
	/*The unique identifier generated for the request
	 */
	RequestID string

	Payload *GetPricesBadRequestBody
}

func (o *GetPricesBadRequest) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountID}/pricing][%d] getPricesBadRequest  %+v", 400, o.Payload)
}

func (o *GetPricesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header RequestID
	o.RequestID = response.GetHeader("RequestID")

	o.Payload = new(GetPricesBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPricesUnauthorized creates a GetPricesUnauthorized with default headers values
func NewGetPricesUnauthorized() *GetPricesUnauthorized {
	return &GetPricesUnauthorized{}
}

/*GetPricesUnauthorized handles this case with default header values.

Unauthorized. The endpoint being access required the client to authenticated, however the the authentication token is invalid or has not been provided.
*/
type GetPricesUnauthorized struct {
	/*The unique identifier generated for the request
	 */
	RequestID string

	Payload *GetPricesUnauthorizedBody
}

func (o *GetPricesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountID}/pricing][%d] getPricesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetPricesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header RequestID
	o.RequestID = response.GetHeader("RequestID")

	o.Payload = new(GetPricesUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPricesNotFound creates a GetPricesNotFound with default headers values
func NewGetPricesNotFound() *GetPricesNotFound {
	return &GetPricesNotFound{}
}

/*GetPricesNotFound handles this case with default header values.

Not Found. The client has attempted to access an entity that does not exist.
*/
type GetPricesNotFound struct {
	/*The unique identifier generated for the request
	 */
	RequestID string

	Payload *GetPricesNotFoundBody
}

func (o *GetPricesNotFound) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountID}/pricing][%d] getPricesNotFound  %+v", 404, o.Payload)
}

func (o *GetPricesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header RequestID
	o.RequestID = response.GetHeader("RequestID")

	o.Payload = new(GetPricesNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPricesMethodNotAllowed creates a GetPricesMethodNotAllowed with default headers values
func NewGetPricesMethodNotAllowed() *GetPricesMethodNotAllowed {
	return &GetPricesMethodNotAllowed{}
}

/*GetPricesMethodNotAllowed handles this case with default header values.

Method Not Allowed. The client has attempted to access an endpoint using an HTTP method that is not supported.
*/
type GetPricesMethodNotAllowed struct {
	/*The unique identifier generated for the request
	 */
	RequestID string

	Payload *GetPricesMethodNotAllowedBody
}

func (o *GetPricesMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountID}/pricing][%d] getPricesMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *GetPricesMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header RequestID
	o.RequestID = response.GetHeader("RequestID")

	o.Payload = new(GetPricesMethodNotAllowedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetPricesBadRequestBody get prices bad request body
swagger:model GetPricesBadRequestBody
*/
type GetPricesBadRequestBody struct {

	// The code of the error that has occurred. This field may not be returned for some errors.
	ErrorCode string `json:"errorCode,omitempty"`

	// The human-readable description of the error that has occurred.
	ErrorMessage string `json:"errorMessage,omitempty"`
}

// Validate validates this get prices bad request body
func (o *GetPricesBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPricesBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPricesBadRequestBody) UnmarshalBinary(b []byte) error {
	var res GetPricesBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetPricesMethodNotAllowedBody get prices method not allowed body
swagger:model GetPricesMethodNotAllowedBody
*/
type GetPricesMethodNotAllowedBody struct {

	// The code of the error that has occurred. This field may not be returned for some errors.
	ErrorCode string `json:"errorCode,omitempty"`

	// The human-readable description of the error that has occurred.
	ErrorMessage string `json:"errorMessage,omitempty"`
}

// Validate validates this get prices method not allowed body
func (o *GetPricesMethodNotAllowedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPricesMethodNotAllowedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPricesMethodNotAllowedBody) UnmarshalBinary(b []byte) error {
	var res GetPricesMethodNotAllowedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetPricesNotFoundBody get prices not found body
swagger:model GetPricesNotFoundBody
*/
type GetPricesNotFoundBody struct {

	// The code of the error that has occurred. This field may not be returned for some errors.
	ErrorCode string `json:"errorCode,omitempty"`

	// The human-readable description of the error that has occurred.
	ErrorMessage string `json:"errorMessage,omitempty"`
}

// Validate validates this get prices not found body
func (o *GetPricesNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPricesNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPricesNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetPricesNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetPricesOKBody get prices o k body
swagger:model GetPricesOKBody
*/
type GetPricesOKBody struct {

	// The list of home currency conversion factors requested. This field will only be present if includeHomeConversions was set to true in the request.
	HomeConversions []*models.HomeConversions `json:"homeConversions"`

	// The list of Price objects requested.
	Prices []*models.ClientPrice `json:"prices"`

	// The DateTime value to use for the "since" parameter in the next poll request.
	Time string `json:"time,omitempty"`
}

// Validate validates this get prices o k body
func (o *GetPricesOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateHomeConversions(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePrices(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPricesOKBody) validateHomeConversions(formats strfmt.Registry) error {

	if swag.IsZero(o.HomeConversions) { // not required
		return nil
	}

	for i := 0; i < len(o.HomeConversions); i++ {
		if swag.IsZero(o.HomeConversions[i]) { // not required
			continue
		}

		if o.HomeConversions[i] != nil {
			if err := o.HomeConversions[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getPricesOK" + "." + "homeConversions" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetPricesOKBody) validatePrices(formats strfmt.Registry) error {

	if swag.IsZero(o.Prices) { // not required
		return nil
	}

	for i := 0; i < len(o.Prices); i++ {
		if swag.IsZero(o.Prices[i]) { // not required
			continue
		}

		if o.Prices[i] != nil {
			if err := o.Prices[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getPricesOK" + "." + "prices" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetPricesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPricesOKBody) UnmarshalBinary(b []byte) error {
	var res GetPricesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetPricesUnauthorizedBody get prices unauthorized body
swagger:model GetPricesUnauthorizedBody
*/
type GetPricesUnauthorizedBody struct {

	// The code of the error that has occurred. This field may not be returned for some errors.
	ErrorCode string `json:"errorCode,omitempty"`

	// The human-readable description of the error that has occurred.
	ErrorMessage string `json:"errorMessage,omitempty"`
}

// Validate validates this get prices unauthorized body
func (o *GetPricesUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPricesUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPricesUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res GetPricesUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
