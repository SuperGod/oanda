// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/SuperGod/oanda/models"
)

// GetAccountChangesReader is a Reader for the GetAccountChanges structure.
type GetAccountChangesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAccountChangesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetAccountChangesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetAccountChangesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetAccountChangesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewGetAccountChangesMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 416:
		result := NewGetAccountChangesRequestRangeNotSatisfiable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAccountChangesOK creates a GetAccountChangesOK with default headers values
func NewGetAccountChangesOK() *GetAccountChangesOK {
	return &GetAccountChangesOK{}
}

/*GetAccountChangesOK handles this case with default header values.

The Account state and changes are provided.
*/
type GetAccountChangesOK struct {
	/*The unique identifier generated for the request
	 */
	RequestID string

	Payload *GetAccountChangesOKBody
}

func (o *GetAccountChangesOK) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountID}/changes][%d] getAccountChangesOK  %+v", 200, o.Payload)
}

func (o *GetAccountChangesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header RequestID
	o.RequestID = response.GetHeader("RequestID")

	o.Payload = new(GetAccountChangesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountChangesUnauthorized creates a GetAccountChangesUnauthorized with default headers values
func NewGetAccountChangesUnauthorized() *GetAccountChangesUnauthorized {
	return &GetAccountChangesUnauthorized{}
}

/*GetAccountChangesUnauthorized handles this case with default header values.

Unauthorized. The endpoint being access required the client to authenticated, however the the authentication token is invalid or has not been provided.
*/
type GetAccountChangesUnauthorized struct {
	/*The unique identifier generated for the request
	 */
	RequestID string

	Payload *GetAccountChangesUnauthorizedBody
}

func (o *GetAccountChangesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountID}/changes][%d] getAccountChangesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAccountChangesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header RequestID
	o.RequestID = response.GetHeader("RequestID")

	o.Payload = new(GetAccountChangesUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountChangesNotFound creates a GetAccountChangesNotFound with default headers values
func NewGetAccountChangesNotFound() *GetAccountChangesNotFound {
	return &GetAccountChangesNotFound{}
}

/*GetAccountChangesNotFound handles this case with default header values.

Not Found. The client has attempted to access an entity that does not exist.
*/
type GetAccountChangesNotFound struct {
	/*The unique identifier generated for the request
	 */
	RequestID string

	Payload *GetAccountChangesNotFoundBody
}

func (o *GetAccountChangesNotFound) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountID}/changes][%d] getAccountChangesNotFound  %+v", 404, o.Payload)
}

func (o *GetAccountChangesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header RequestID
	o.RequestID = response.GetHeader("RequestID")

	o.Payload = new(GetAccountChangesNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountChangesMethodNotAllowed creates a GetAccountChangesMethodNotAllowed with default headers values
func NewGetAccountChangesMethodNotAllowed() *GetAccountChangesMethodNotAllowed {
	return &GetAccountChangesMethodNotAllowed{}
}

/*GetAccountChangesMethodNotAllowed handles this case with default header values.

Method Not Allowed. The client has attempted to access an endpoint using an HTTP method that is not supported.
*/
type GetAccountChangesMethodNotAllowed struct {
	/*The unique identifier generated for the request
	 */
	RequestID string

	Payload *GetAccountChangesMethodNotAllowedBody
}

func (o *GetAccountChangesMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountID}/changes][%d] getAccountChangesMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *GetAccountChangesMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header RequestID
	o.RequestID = response.GetHeader("RequestID")

	o.Payload = new(GetAccountChangesMethodNotAllowedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountChangesRequestRangeNotSatisfiable creates a GetAccountChangesRequestRangeNotSatisfiable with default headers values
func NewGetAccountChangesRequestRangeNotSatisfiable() *GetAccountChangesRequestRangeNotSatisfiable {
	return &GetAccountChangesRequestRangeNotSatisfiable{}
}

/*GetAccountChangesRequestRangeNotSatisfiable handles this case with default header values.

Range Not Satisfiable. The client has specified a range that is invalid or cannot be processed.
*/
type GetAccountChangesRequestRangeNotSatisfiable struct {
	/*The unique identifier generated for the request
	 */
	RequestID string

	Payload *GetAccountChangesRequestRangeNotSatisfiableBody
}

func (o *GetAccountChangesRequestRangeNotSatisfiable) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountID}/changes][%d] getAccountChangesRequestRangeNotSatisfiable  %+v", 416, o.Payload)
}

func (o *GetAccountChangesRequestRangeNotSatisfiable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header RequestID
	o.RequestID = response.GetHeader("RequestID")

	o.Payload = new(GetAccountChangesRequestRangeNotSatisfiableBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetAccountChangesMethodNotAllowedBody get account changes method not allowed body
swagger:model GetAccountChangesMethodNotAllowedBody
*/
type GetAccountChangesMethodNotAllowedBody struct {

	// The code of the error that has occurred. This field may not be returned for some errors.
	ErrorCode string `json:"errorCode,omitempty"`

	// The human-readable description of the error that has occurred.
	ErrorMessage string `json:"errorMessage,omitempty"`
}

// Validate validates this get account changes method not allowed body
func (o *GetAccountChangesMethodNotAllowedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAccountChangesMethodNotAllowedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAccountChangesMethodNotAllowedBody) UnmarshalBinary(b []byte) error {
	var res GetAccountChangesMethodNotAllowedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAccountChangesNotFoundBody get account changes not found body
swagger:model GetAccountChangesNotFoundBody
*/
type GetAccountChangesNotFoundBody struct {

	// The code of the error that has occurred. This field may not be returned for some errors.
	ErrorCode string `json:"errorCode,omitempty"`

	// The human-readable description of the error that has occurred.
	ErrorMessage string `json:"errorMessage,omitempty"`
}

// Validate validates this get account changes not found body
func (o *GetAccountChangesNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAccountChangesNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAccountChangesNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetAccountChangesNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAccountChangesOKBody get account changes o k body
swagger:model GetAccountChangesOKBody
*/
type GetAccountChangesOKBody struct {

	// changes
	Changes *models.AccountChanges `json:"changes,omitempty"`

	// The ID of the last Transaction created for the Account.  This Transaction ID should be used for future poll requests, as the client has already observed all changes up to and including it.
	LastTransactionID string `json:"lastTransactionID,omitempty"`

	// state
	State *models.AccountChangesState `json:"state,omitempty"`
}

// Validate validates this get account changes o k body
func (o *GetAccountChangesOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateChanges(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateState(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAccountChangesOKBody) validateChanges(formats strfmt.Registry) error {

	if swag.IsZero(o.Changes) { // not required
		return nil
	}

	if o.Changes != nil {
		if err := o.Changes.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAccountChangesOK" + "." + "changes")
			}
			return err
		}
	}

	return nil
}

func (o *GetAccountChangesOKBody) validateState(formats strfmt.Registry) error {

	if swag.IsZero(o.State) { // not required
		return nil
	}

	if o.State != nil {
		if err := o.State.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAccountChangesOK" + "." + "state")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAccountChangesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAccountChangesOKBody) UnmarshalBinary(b []byte) error {
	var res GetAccountChangesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAccountChangesRequestRangeNotSatisfiableBody get account changes request range not satisfiable body
swagger:model GetAccountChangesRequestRangeNotSatisfiableBody
*/
type GetAccountChangesRequestRangeNotSatisfiableBody struct {

	// The code of the error that has occurred. This field may not be returned for some errors.
	ErrorCode string `json:"errorCode,omitempty"`

	// The human-readable description of the error that has occurred.
	ErrorMessage string `json:"errorMessage,omitempty"`
}

// Validate validates this get account changes request range not satisfiable body
func (o *GetAccountChangesRequestRangeNotSatisfiableBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAccountChangesRequestRangeNotSatisfiableBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAccountChangesRequestRangeNotSatisfiableBody) UnmarshalBinary(b []byte) error {
	var res GetAccountChangesRequestRangeNotSatisfiableBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAccountChangesUnauthorizedBody get account changes unauthorized body
swagger:model GetAccountChangesUnauthorizedBody
*/
type GetAccountChangesUnauthorizedBody struct {

	// The code of the error that has occurred. This field may not be returned for some errors.
	ErrorCode string `json:"errorCode,omitempty"`

	// The human-readable description of the error that has occurred.
	ErrorMessage string `json:"errorMessage,omitempty"`
}

// Validate validates this get account changes unauthorized body
func (o *GetAccountChangesUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAccountChangesUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAccountChangesUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res GetAccountChangesUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
