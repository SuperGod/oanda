// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/SuperGod/oanda/models"
)

// GetInstrumentsInstrumentOrderBookReader is a Reader for the GetInstrumentsInstrumentOrderBook structure.
type GetInstrumentsInstrumentOrderBookReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInstrumentsInstrumentOrderBookReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetInstrumentsInstrumentOrderBookOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetInstrumentsInstrumentOrderBookBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetInstrumentsInstrumentOrderBookUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetInstrumentsInstrumentOrderBookNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewGetInstrumentsInstrumentOrderBookMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetInstrumentsInstrumentOrderBookOK creates a GetInstrumentsInstrumentOrderBookOK with default headers values
func NewGetInstrumentsInstrumentOrderBookOK() *GetInstrumentsInstrumentOrderBookOK {
	return &GetInstrumentsInstrumentOrderBookOK{}
}

/*GetInstrumentsInstrumentOrderBookOK handles this case with default header values.

The order book has been successfully provided.
*/
type GetInstrumentsInstrumentOrderBookOK struct {
	/*Value will be "gzip" regardless of provided Accept-Encoding header
	 */
	ContentEncoding string
	/*A link to the next/previous order book snapshot.
	 */
	Link string
	/*The unique identifier generated for the request
	 */
	RequestID string

	Payload *GetInstrumentsInstrumentOrderBookOKBody
}

func (o *GetInstrumentsInstrumentOrderBookOK) Error() string {
	return fmt.Sprintf("[GET /instruments/{instrument}/orderBook][%d] getInstrumentsInstrumentOrderBookOK  %+v", 200, o.Payload)
}

func (o *GetInstrumentsInstrumentOrderBookOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Content-Encoding
	o.ContentEncoding = response.GetHeader("Content-Encoding")

	// response header Link
	o.Link = response.GetHeader("Link")

	// response header RequestID
	o.RequestID = response.GetHeader("RequestID")

	o.Payload = new(GetInstrumentsInstrumentOrderBookOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstrumentsInstrumentOrderBookBadRequest creates a GetInstrumentsInstrumentOrderBookBadRequest with default headers values
func NewGetInstrumentsInstrumentOrderBookBadRequest() *GetInstrumentsInstrumentOrderBookBadRequest {
	return &GetInstrumentsInstrumentOrderBookBadRequest{}
}

/*GetInstrumentsInstrumentOrderBookBadRequest handles this case with default header values.

Bad Request. The client has provided invalid data to be processed by the server.
*/
type GetInstrumentsInstrumentOrderBookBadRequest struct {
	/*The unique identifier generated for the request
	 */
	RequestID string

	Payload *GetInstrumentsInstrumentOrderBookBadRequestBody
}

func (o *GetInstrumentsInstrumentOrderBookBadRequest) Error() string {
	return fmt.Sprintf("[GET /instruments/{instrument}/orderBook][%d] getInstrumentsInstrumentOrderBookBadRequest  %+v", 400, o.Payload)
}

func (o *GetInstrumentsInstrumentOrderBookBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header RequestID
	o.RequestID = response.GetHeader("RequestID")

	o.Payload = new(GetInstrumentsInstrumentOrderBookBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstrumentsInstrumentOrderBookUnauthorized creates a GetInstrumentsInstrumentOrderBookUnauthorized with default headers values
func NewGetInstrumentsInstrumentOrderBookUnauthorized() *GetInstrumentsInstrumentOrderBookUnauthorized {
	return &GetInstrumentsInstrumentOrderBookUnauthorized{}
}

/*GetInstrumentsInstrumentOrderBookUnauthorized handles this case with default header values.

Unauthorized. The endpoint being access required the client to authenticated, however the the authentication token is invalid or has not been provided.
*/
type GetInstrumentsInstrumentOrderBookUnauthorized struct {
	/*The unique identifier generated for the request
	 */
	RequestID string

	Payload *GetInstrumentsInstrumentOrderBookUnauthorizedBody
}

func (o *GetInstrumentsInstrumentOrderBookUnauthorized) Error() string {
	return fmt.Sprintf("[GET /instruments/{instrument}/orderBook][%d] getInstrumentsInstrumentOrderBookUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInstrumentsInstrumentOrderBookUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header RequestID
	o.RequestID = response.GetHeader("RequestID")

	o.Payload = new(GetInstrumentsInstrumentOrderBookUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstrumentsInstrumentOrderBookNotFound creates a GetInstrumentsInstrumentOrderBookNotFound with default headers values
func NewGetInstrumentsInstrumentOrderBookNotFound() *GetInstrumentsInstrumentOrderBookNotFound {
	return &GetInstrumentsInstrumentOrderBookNotFound{}
}

/*GetInstrumentsInstrumentOrderBookNotFound handles this case with default header values.

Not Found. The client has attempted to access an entity that does not exist.
*/
type GetInstrumentsInstrumentOrderBookNotFound struct {
	/*The unique identifier generated for the request
	 */
	RequestID string

	Payload *GetInstrumentsInstrumentOrderBookNotFoundBody
}

func (o *GetInstrumentsInstrumentOrderBookNotFound) Error() string {
	return fmt.Sprintf("[GET /instruments/{instrument}/orderBook][%d] getInstrumentsInstrumentOrderBookNotFound  %+v", 404, o.Payload)
}

func (o *GetInstrumentsInstrumentOrderBookNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header RequestID
	o.RequestID = response.GetHeader("RequestID")

	o.Payload = new(GetInstrumentsInstrumentOrderBookNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstrumentsInstrumentOrderBookMethodNotAllowed creates a GetInstrumentsInstrumentOrderBookMethodNotAllowed with default headers values
func NewGetInstrumentsInstrumentOrderBookMethodNotAllowed() *GetInstrumentsInstrumentOrderBookMethodNotAllowed {
	return &GetInstrumentsInstrumentOrderBookMethodNotAllowed{}
}

/*GetInstrumentsInstrumentOrderBookMethodNotAllowed handles this case with default header values.

Method Not Allowed. The client has attempted to access an endpoint using an HTTP method that is not supported.
*/
type GetInstrumentsInstrumentOrderBookMethodNotAllowed struct {
	/*The unique identifier generated for the request
	 */
	RequestID string

	Payload *GetInstrumentsInstrumentOrderBookMethodNotAllowedBody
}

func (o *GetInstrumentsInstrumentOrderBookMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /instruments/{instrument}/orderBook][%d] getInstrumentsInstrumentOrderBookMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *GetInstrumentsInstrumentOrderBookMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header RequestID
	o.RequestID = response.GetHeader("RequestID")

	o.Payload = new(GetInstrumentsInstrumentOrderBookMethodNotAllowedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetInstrumentsInstrumentOrderBookBadRequestBody get instruments instrument order book bad request body
swagger:model GetInstrumentsInstrumentOrderBookBadRequestBody
*/
type GetInstrumentsInstrumentOrderBookBadRequestBody struct {

	// The code of the error that has occurred. This field may not be returned for some errors.
	ErrorCode string `json:"errorCode,omitempty"`

	// The human-readable description of the error that has occurred.
	ErrorMessage string `json:"errorMessage,omitempty"`
}

// Validate validates this get instruments instrument order book bad request body
func (o *GetInstrumentsInstrumentOrderBookBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetInstrumentsInstrumentOrderBookBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetInstrumentsInstrumentOrderBookBadRequestBody) UnmarshalBinary(b []byte) error {
	var res GetInstrumentsInstrumentOrderBookBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetInstrumentsInstrumentOrderBookMethodNotAllowedBody get instruments instrument order book method not allowed body
swagger:model GetInstrumentsInstrumentOrderBookMethodNotAllowedBody
*/
type GetInstrumentsInstrumentOrderBookMethodNotAllowedBody struct {

	// The code of the error that has occurred. This field may not be returned for some errors.
	ErrorCode string `json:"errorCode,omitempty"`

	// The human-readable description of the error that has occurred.
	ErrorMessage string `json:"errorMessage,omitempty"`
}

// Validate validates this get instruments instrument order book method not allowed body
func (o *GetInstrumentsInstrumentOrderBookMethodNotAllowedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetInstrumentsInstrumentOrderBookMethodNotAllowedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetInstrumentsInstrumentOrderBookMethodNotAllowedBody) UnmarshalBinary(b []byte) error {
	var res GetInstrumentsInstrumentOrderBookMethodNotAllowedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetInstrumentsInstrumentOrderBookNotFoundBody get instruments instrument order book not found body
swagger:model GetInstrumentsInstrumentOrderBookNotFoundBody
*/
type GetInstrumentsInstrumentOrderBookNotFoundBody struct {

	// The code of the error that has occurred. This field may not be returned for some errors.
	ErrorCode string `json:"errorCode,omitempty"`

	// The human-readable description of the error that has occurred.
	ErrorMessage string `json:"errorMessage,omitempty"`
}

// Validate validates this get instruments instrument order book not found body
func (o *GetInstrumentsInstrumentOrderBookNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetInstrumentsInstrumentOrderBookNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetInstrumentsInstrumentOrderBookNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetInstrumentsInstrumentOrderBookNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetInstrumentsInstrumentOrderBookOKBody get instruments instrument order book o k body
swagger:model GetInstrumentsInstrumentOrderBookOKBody
*/
type GetInstrumentsInstrumentOrderBookOKBody struct {

	// order book
	OrderBook *models.OrderBook `json:"orderBook,omitempty"`
}

// Validate validates this get instruments instrument order book o k body
func (o *GetInstrumentsInstrumentOrderBookOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateOrderBook(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetInstrumentsInstrumentOrderBookOKBody) validateOrderBook(formats strfmt.Registry) error {

	if swag.IsZero(o.OrderBook) { // not required
		return nil
	}

	if o.OrderBook != nil {
		if err := o.OrderBook.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getInstrumentsInstrumentOrderBookOK" + "." + "orderBook")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetInstrumentsInstrumentOrderBookOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetInstrumentsInstrumentOrderBookOKBody) UnmarshalBinary(b []byte) error {
	var res GetInstrumentsInstrumentOrderBookOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetInstrumentsInstrumentOrderBookUnauthorizedBody get instruments instrument order book unauthorized body
swagger:model GetInstrumentsInstrumentOrderBookUnauthorizedBody
*/
type GetInstrumentsInstrumentOrderBookUnauthorizedBody struct {

	// The code of the error that has occurred. This field may not be returned for some errors.
	ErrorCode string `json:"errorCode,omitempty"`

	// The human-readable description of the error that has occurred.
	ErrorMessage string `json:"errorMessage,omitempty"`
}

// Validate validates this get instruments instrument order book unauthorized body
func (o *GetInstrumentsInstrumentOrderBookUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetInstrumentsInstrumentOrderBookUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetInstrumentsInstrumentOrderBookUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res GetInstrumentsInstrumentOrderBookUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
