// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"
)

// ListTransactionsReader is a Reader for the ListTransactions structure.
type ListTransactionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListTransactionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListTransactionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListTransactionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewListTransactionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListTransactionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListTransactionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewListTransactionsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 416:
		result := NewListTransactionsRequestRangeNotSatisfiable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListTransactionsOK creates a ListTransactionsOK with default headers values
func NewListTransactionsOK() *ListTransactionsOK {
	return &ListTransactionsOK{}
}

/*ListTransactionsOK handles this case with default header values.

The requested time range of Transaction pages are provided.
*/
type ListTransactionsOK struct {
	/*The unique identifier generated for the request
	 */
	RequestID string

	Payload *ListTransactionsOKBody
}

func (o *ListTransactionsOK) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountID}/transactions][%d] listTransactionsOK  %+v", 200, o.Payload)
}

func (o *ListTransactionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header RequestID
	o.RequestID = response.GetHeader("RequestID")

	o.Payload = new(ListTransactionsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTransactionsBadRequest creates a ListTransactionsBadRequest with default headers values
func NewListTransactionsBadRequest() *ListTransactionsBadRequest {
	return &ListTransactionsBadRequest{}
}

/*ListTransactionsBadRequest handles this case with default header values.

Bad Request. The client has provided invalid data to be processed by the server.
*/
type ListTransactionsBadRequest struct {
	/*The unique identifier generated for the request
	 */
	RequestID string

	Payload *ListTransactionsBadRequestBody
}

func (o *ListTransactionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountID}/transactions][%d] listTransactionsBadRequest  %+v", 400, o.Payload)
}

func (o *ListTransactionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header RequestID
	o.RequestID = response.GetHeader("RequestID")

	o.Payload = new(ListTransactionsBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTransactionsUnauthorized creates a ListTransactionsUnauthorized with default headers values
func NewListTransactionsUnauthorized() *ListTransactionsUnauthorized {
	return &ListTransactionsUnauthorized{}
}

/*ListTransactionsUnauthorized handles this case with default header values.

Unauthorized. The endpoint being access required the client to authenticated, however the the authentication token is invalid or has not been provided.
*/
type ListTransactionsUnauthorized struct {
	/*The unique identifier generated for the request
	 */
	RequestID string

	Payload *ListTransactionsUnauthorizedBody
}

func (o *ListTransactionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountID}/transactions][%d] listTransactionsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListTransactionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header RequestID
	o.RequestID = response.GetHeader("RequestID")

	o.Payload = new(ListTransactionsUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTransactionsForbidden creates a ListTransactionsForbidden with default headers values
func NewListTransactionsForbidden() *ListTransactionsForbidden {
	return &ListTransactionsForbidden{}
}

/*ListTransactionsForbidden handles this case with default header values.

Forbidden. The client has provided a token that does not authorize them to perform the action implemented by the API endpoint.
*/
type ListTransactionsForbidden struct {
	/*The unique identifier generated for the request
	 */
	RequestID string

	Payload *ListTransactionsForbiddenBody
}

func (o *ListTransactionsForbidden) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountID}/transactions][%d] listTransactionsForbidden  %+v", 403, o.Payload)
}

func (o *ListTransactionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header RequestID
	o.RequestID = response.GetHeader("RequestID")

	o.Payload = new(ListTransactionsForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTransactionsNotFound creates a ListTransactionsNotFound with default headers values
func NewListTransactionsNotFound() *ListTransactionsNotFound {
	return &ListTransactionsNotFound{}
}

/*ListTransactionsNotFound handles this case with default header values.

Not Found. The client has attempted to access an entity that does not exist.
*/
type ListTransactionsNotFound struct {
	/*The unique identifier generated for the request
	 */
	RequestID string

	Payload *ListTransactionsNotFoundBody
}

func (o *ListTransactionsNotFound) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountID}/transactions][%d] listTransactionsNotFound  %+v", 404, o.Payload)
}

func (o *ListTransactionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header RequestID
	o.RequestID = response.GetHeader("RequestID")

	o.Payload = new(ListTransactionsNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTransactionsMethodNotAllowed creates a ListTransactionsMethodNotAllowed with default headers values
func NewListTransactionsMethodNotAllowed() *ListTransactionsMethodNotAllowed {
	return &ListTransactionsMethodNotAllowed{}
}

/*ListTransactionsMethodNotAllowed handles this case with default header values.

Method Not Allowed. The client has attempted to access an endpoint using an HTTP method that is not supported.
*/
type ListTransactionsMethodNotAllowed struct {
	/*The unique identifier generated for the request
	 */
	RequestID string

	Payload *ListTransactionsMethodNotAllowedBody
}

func (o *ListTransactionsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountID}/transactions][%d] listTransactionsMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *ListTransactionsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header RequestID
	o.RequestID = response.GetHeader("RequestID")

	o.Payload = new(ListTransactionsMethodNotAllowedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTransactionsRequestRangeNotSatisfiable creates a ListTransactionsRequestRangeNotSatisfiable with default headers values
func NewListTransactionsRequestRangeNotSatisfiable() *ListTransactionsRequestRangeNotSatisfiable {
	return &ListTransactionsRequestRangeNotSatisfiable{}
}

/*ListTransactionsRequestRangeNotSatisfiable handles this case with default header values.

Range Not Satisfiable. The client has specified a range that is invalid or cannot be processed.
*/
type ListTransactionsRequestRangeNotSatisfiable struct {
	/*The unique identifier generated for the request
	 */
	RequestID string

	Payload *ListTransactionsRequestRangeNotSatisfiableBody
}

func (o *ListTransactionsRequestRangeNotSatisfiable) Error() string {
	return fmt.Sprintf("[GET /accounts/{accountID}/transactions][%d] listTransactionsRequestRangeNotSatisfiable  %+v", 416, o.Payload)
}

func (o *ListTransactionsRequestRangeNotSatisfiable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header RequestID
	o.RequestID = response.GetHeader("RequestID")

	o.Payload = new(ListTransactionsRequestRangeNotSatisfiableBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*ListTransactionsBadRequestBody list transactions bad request body
swagger:model ListTransactionsBadRequestBody
*/
type ListTransactionsBadRequestBody struct {

	// The code of the error that has occurred. This field may not be returned for some errors.
	ErrorCode string `json:"errorCode,omitempty"`

	// The human-readable description of the error that has occurred.
	ErrorMessage string `json:"errorMessage,omitempty"`
}

// Validate validates this list transactions bad request body
func (o *ListTransactionsBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListTransactionsBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListTransactionsBadRequestBody) UnmarshalBinary(b []byte) error {
	var res ListTransactionsBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ListTransactionsForbiddenBody list transactions forbidden body
swagger:model ListTransactionsForbiddenBody
*/
type ListTransactionsForbiddenBody struct {

	// The code of the error that has occurred. This field may not be returned for some errors.
	ErrorCode string `json:"errorCode,omitempty"`

	// The human-readable description of the error that has occurred.
	ErrorMessage string `json:"errorMessage,omitempty"`
}

// Validate validates this list transactions forbidden body
func (o *ListTransactionsForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListTransactionsForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListTransactionsForbiddenBody) UnmarshalBinary(b []byte) error {
	var res ListTransactionsForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ListTransactionsMethodNotAllowedBody list transactions method not allowed body
swagger:model ListTransactionsMethodNotAllowedBody
*/
type ListTransactionsMethodNotAllowedBody struct {

	// The code of the error that has occurred. This field may not be returned for some errors.
	ErrorCode string `json:"errorCode,omitempty"`

	// The human-readable description of the error that has occurred.
	ErrorMessage string `json:"errorMessage,omitempty"`
}

// Validate validates this list transactions method not allowed body
func (o *ListTransactionsMethodNotAllowedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListTransactionsMethodNotAllowedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListTransactionsMethodNotAllowedBody) UnmarshalBinary(b []byte) error {
	var res ListTransactionsMethodNotAllowedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ListTransactionsNotFoundBody list transactions not found body
swagger:model ListTransactionsNotFoundBody
*/
type ListTransactionsNotFoundBody struct {

	// The code of the error that has occurred. This field may not be returned for some errors.
	ErrorCode string `json:"errorCode,omitempty"`

	// The human-readable description of the error that has occurred.
	ErrorMessage string `json:"errorMessage,omitempty"`
}

// Validate validates this list transactions not found body
func (o *ListTransactionsNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListTransactionsNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListTransactionsNotFoundBody) UnmarshalBinary(b []byte) error {
	var res ListTransactionsNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ListTransactionsOKBody list transactions o k body
swagger:model ListTransactionsOKBody
*/
type ListTransactionsOKBody struct {

	// The number of Transactions that are contained in the pages returned
	Count int64 `json:"count,omitempty"`

	// The starting time provided in the request.
	From string `json:"from,omitempty"`

	// The ID of the most recent Transaction created for the Account
	LastTransactionID string `json:"lastTransactionID,omitempty"`

	// The pageSize provided in the request
	PageSize int64 `json:"pageSize,omitempty"`

	// The list of URLs that represent idrange queries providing the data for each page in the query results
	Pages []string `json:"pages"`

	// The ending time provided in the request.
	To string `json:"to,omitempty"`

	// The Transaction-type filter provided in the request
	Type []string `json:"type"`
}

// Validate validates this list transactions o k body
func (o *ListTransactionsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var listTransactionsOKBodyTypeItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ORDER","FUNDING","ADMIN","CREATE","CLOSE","REOPEN","CLIENT_CONFIGURE","CLIENT_CONFIGURE_REJECT","TRANSFER_FUNDS","TRANSFER_FUNDS_REJECT","MARKET_ORDER","MARKET_ORDER_REJECT","LIMIT_ORDER","LIMIT_ORDER_REJECT","STOP_ORDER","STOP_ORDER_REJECT","MARKET_IF_TOUCHED_ORDER","MARKET_IF_TOUCHED_ORDER_REJECT","TAKE_PROFIT_ORDER","TAKE_PROFIT_ORDER_REJECT","STOP_LOSS_ORDER","STOP_LOSS_ORDER_REJECT","TRAILING_STOP_LOSS_ORDER","TRAILING_STOP_LOSS_ORDER_REJECT","ONE_CANCELS_ALL_ORDER","ONE_CANCELS_ALL_ORDER_REJECT","ONE_CANCELS_ALL_ORDER_TRIGGERED","ORDER_FILL","ORDER_CANCEL","ORDER_CANCEL_REJECT","ORDER_CLIENT_EXTENSIONS_MODIFY","ORDER_CLIENT_EXTENSIONS_MODIFY_REJECT","TRADE_CLIENT_EXTENSIONS_MODIFY","TRADE_CLIENT_EXTENSIONS_MODIFY_REJECT","MARGIN_CALL_ENTER","MARGIN_CALL_EXTEND","MARGIN_CALL_EXIT","DELAYED_TRADE_CLOSURE","DAILY_FINANCING","RESET_RESETTABLE_PL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		listTransactionsOKBodyTypeItemsEnum = append(listTransactionsOKBodyTypeItemsEnum, v)
	}
}

func (o *ListTransactionsOKBody) validateTypeItemsEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, listTransactionsOKBodyTypeItemsEnum); err != nil {
		return err
	}
	return nil
}

func (o *ListTransactionsOKBody) validateType(formats strfmt.Registry) error {

	if swag.IsZero(o.Type) { // not required
		return nil
	}

	for i := 0; i < len(o.Type); i++ {

		// value enum
		if err := o.validateTypeItemsEnum("listTransactionsOK"+"."+"type"+"."+strconv.Itoa(i), "body", o.Type[i]); err != nil {
			return err
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *ListTransactionsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListTransactionsOKBody) UnmarshalBinary(b []byte) error {
	var res ListTransactionsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ListTransactionsRequestRangeNotSatisfiableBody list transactions request range not satisfiable body
swagger:model ListTransactionsRequestRangeNotSatisfiableBody
*/
type ListTransactionsRequestRangeNotSatisfiableBody struct {

	// The code of the error that has occurred. This field may not be returned for some errors.
	ErrorCode string `json:"errorCode,omitempty"`

	// The human-readable description of the error that has occurred.
	ErrorMessage string `json:"errorMessage,omitempty"`
}

// Validate validates this list transactions request range not satisfiable body
func (o *ListTransactionsRequestRangeNotSatisfiableBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListTransactionsRequestRangeNotSatisfiableBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListTransactionsRequestRangeNotSatisfiableBody) UnmarshalBinary(b []byte) error {
	var res ListTransactionsRequestRangeNotSatisfiableBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ListTransactionsUnauthorizedBody list transactions unauthorized body
swagger:model ListTransactionsUnauthorizedBody
*/
type ListTransactionsUnauthorizedBody struct {

	// The code of the error that has occurred. This field may not be returned for some errors.
	ErrorCode string `json:"errorCode,omitempty"`

	// The human-readable description of the error that has occurred.
	ErrorMessage string `json:"errorMessage,omitempty"`
}

// Validate validates this list transactions unauthorized body
func (o *ListTransactionsUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListTransactionsUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListTransactionsUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res ListTransactionsUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
